// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosEditAlbum Edits information about a photo album.
type PhotosEditAlbumRequest api.Params

func NewPhotosEditAlbumRequest() PhotosEditAlbumRequest {
	params := make(PhotosEditAlbumRequest, 9)
	return params
}

func (p PhotosEditAlbumRequest) WithAlbumId(p_album_id int) PhotosEditAlbumRequest{
	p["album_id"] = p_album_id
	return p
}

func (p PhotosEditAlbumRequest) WithTitle(p_title string) PhotosEditAlbumRequest{
	p["title"] = p_title
	return p
}

func (p PhotosEditAlbumRequest) WithDescription(p_description string) PhotosEditAlbumRequest{
	p["description"] = p_description
	return p
}

func (p PhotosEditAlbumRequest) WithOwnerId(p_owner_id int) PhotosEditAlbumRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PhotosEditAlbumRequest) WithPrivacyView(p_privacy_view []string) PhotosEditAlbumRequest{
	p["privacy_view"] = p_privacy_view
	return p
}

func (p PhotosEditAlbumRequest) WithPrivacyComment(p_privacy_comment []string) PhotosEditAlbumRequest{
	p["privacy_comment"] = p_privacy_comment
	return p
}

func (p PhotosEditAlbumRequest) WithUploadByAdminsOnly(p_upload_by_admins_only bool) PhotosEditAlbumRequest{
	p["upload_by_admins_only"] = p_upload_by_admins_only
	return p
}

func (p PhotosEditAlbumRequest) WithCommentsDisabled(p_comments_disabled bool) PhotosEditAlbumRequest{
	p["comments_disabled"] = p_comments_disabled
	return p
}

func (p PhotosEditAlbumRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ParamAlbumId ]
//
// https://dev.vk.com/method/photos.editAlbum
func (p *Photos) PhotosEditAlbum(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](p.api)

	res, err := req.Execute("photos.editAlbum", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

