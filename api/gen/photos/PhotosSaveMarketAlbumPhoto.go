// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosSaveMarketAlbumPhoto Saves market album photos after successful uploading.
type PhotosSaveMarketAlbumPhotoRequest api.Params

func NewPhotosSaveMarketAlbumPhotoRequest() PhotosSaveMarketAlbumPhotoRequest {
	params := make(PhotosSaveMarketAlbumPhotoRequest, 5)
	return params
}

func (p PhotosSaveMarketAlbumPhotoRequest) WithGroupId(p_group_id int) PhotosSaveMarketAlbumPhotoRequest{
	p["group_id"] = p_group_id
	return p
}

func (p PhotosSaveMarketAlbumPhotoRequest) WithPhoto(p_photo string) PhotosSaveMarketAlbumPhotoRequest{
	p["photo"] = p_photo
	return p
}

func (p PhotosSaveMarketAlbumPhotoRequest) WithServer(p_server int) PhotosSaveMarketAlbumPhotoRequest{
	p["server"] = p_server
	return p
}

func (p PhotosSaveMarketAlbumPhotoRequest) WithHash(p_hash string) PhotosSaveMarketAlbumPhotoRequest{
	p["hash"] = p_hash
	return p
}

func (p PhotosSaveMarketAlbumPhotoRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ParamHash, Error_ParamPhoto, Error_MarketNotEnabled ]
//
// https://dev.vk.com/method/photos.saveMarketAlbumPhoto
func (p *Photos) PhotosSaveMarketAlbumPhoto(params ...api.MethodParams) (resp models.PhotosSaveMarketAlbumPhotoResponse, err error) {
	req := api.NewRequest[models.PhotosSaveMarketAlbumPhotoResponse](p.api)

	res, err := req.Execute("photos.saveMarketAlbumPhoto", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

