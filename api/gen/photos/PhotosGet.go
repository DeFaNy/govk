// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosGet Returns a list of a user's or community's photos.
type PhotosGetRequest api.Params

func NewPhotosGetRequest() PhotosGetRequest {
	params := make(PhotosGetRequest, 11)
	return params
}

func (p PhotosGetRequest) WithOwnerId(p_owner_id int) PhotosGetRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PhotosGetRequest) WithAlbumId(p_album_id string) PhotosGetRequest{
	p["album_id"] = p_album_id
	return p
}

func (p PhotosGetRequest) WithPhotoIds(p_photo_ids []string) PhotosGetRequest{
	p["photo_ids"] = p_photo_ids
	return p
}

func (p PhotosGetRequest) WithRev(p_rev bool) PhotosGetRequest{
	p["rev"] = p_rev
	return p
}

func (p PhotosGetRequest) WithExtended(p_extended bool) PhotosGetRequest{
	p["extended"] = p_extended
	return p
}

func (p PhotosGetRequest) WithFeedType(p_feed_type string) PhotosGetRequest{
	p["feed_type"] = p_feed_type
	return p
}

func (p PhotosGetRequest) WithFeed(p_feed int) PhotosGetRequest{
	p["feed"] = p_feed
	return p
}

func (p PhotosGetRequest) WithPhotoSizes(p_photo_sizes bool) PhotosGetRequest{
	p["photo_sizes"] = p_photo_sizes
	return p
}

func (p PhotosGetRequest) WithOffset(p_offset int) PhotosGetRequest{
	p["offset"] = p_offset
	return p
}

func (p PhotosGetRequest) WithCount(p_count int) PhotosGetRequest{
	p["count"] = p_count
	return p
}

func (p PhotosGetRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user, service ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/photos.get
func (p *Photos) PhotosGet(params ...api.MethodParams) (resp models.PhotosGetResponse, err error) {
	req := api.NewRequest[models.PhotosGetResponse](p.api)

	res, err := req.Execute("photos.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

