// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosCreateAlbum Creates an empty photo album.
type PhotosCreateAlbumRequest api.Params

func NewPhotosCreateAlbumRequest() PhotosCreateAlbumRequest {
	params := make(PhotosCreateAlbumRequest, 8)
	return params
}

func (p PhotosCreateAlbumRequest) WithTitle(p_title string) PhotosCreateAlbumRequest{
	p["title"] = p_title
	return p
}

func (p PhotosCreateAlbumRequest) WithGroupId(p_group_id int) PhotosCreateAlbumRequest{
	p["group_id"] = p_group_id
	return p
}

func (p PhotosCreateAlbumRequest) WithDescription(p_description string) PhotosCreateAlbumRequest{
	p["description"] = p_description
	return p
}

func (p PhotosCreateAlbumRequest) WithPrivacyView(p_privacy_view []string) PhotosCreateAlbumRequest{
	p["privacy_view"] = p_privacy_view
	return p
}

func (p PhotosCreateAlbumRequest) WithPrivacyComment(p_privacy_comment []string) PhotosCreateAlbumRequest{
	p["privacy_comment"] = p_privacy_comment
	return p
}

func (p PhotosCreateAlbumRequest) WithUploadByAdminsOnly(p_upload_by_admins_only bool) PhotosCreateAlbumRequest{
	p["upload_by_admins_only"] = p_upload_by_admins_only
	return p
}

func (p PhotosCreateAlbumRequest) WithCommentsDisabled(p_comments_disabled bool) PhotosCreateAlbumRequest{
	p["comments_disabled"] = p_comments_disabled
	return p
}

func (p PhotosCreateAlbumRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_AlbumsLimit ]
//
// https://dev.vk.com/method/photos.createAlbum
func (p *Photos) PhotosCreateAlbum(params ...api.MethodParams) (resp models.PhotosCreateAlbumResponse, err error) {
	req := api.NewRequest[models.PhotosCreateAlbumResponse](p.api)

	res, err := req.Execute("photos.createAlbum", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

