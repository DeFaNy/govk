// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosPutTag Adds a tag on the photo.
type PhotosPutTagRequest api.Params

func NewPhotosPutTagRequest() PhotosPutTagRequest {
	params := make(PhotosPutTagRequest, 8)
	return params
}

func (p PhotosPutTagRequest) WithOwnerId(p_owner_id int) PhotosPutTagRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PhotosPutTagRequest) WithPhotoId(p_photo_id int) PhotosPutTagRequest{
	p["photo_id"] = p_photo_id
	return p
}

func (p PhotosPutTagRequest) WithUserId(p_user_id int) PhotosPutTagRequest{
	p["user_id"] = p_user_id
	return p
}

func (p PhotosPutTagRequest) WithX(p_x float64) PhotosPutTagRequest{
	p["x"] = p_x
	return p
}

func (p PhotosPutTagRequest) WithY(p_y float64) PhotosPutTagRequest{
	p["y"] = p_y
	return p
}

func (p PhotosPutTagRequest) WithX2(p_x2 float64) PhotosPutTagRequest{
	p["x2"] = p_x2
	return p
}

func (p PhotosPutTagRequest) WithY2(p_y2 float64) PhotosPutTagRequest{
	p["y2"] = p_y2
	return p
}

func (p PhotosPutTagRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/photos.putTag
func (p *Photos) PhotosPutTag(params ...api.MethodParams) (resp models.PhotosPutTagResponse, err error) {
	req := api.NewRequest[models.PhotosPutTagResponse](p.api)

	res, err := req.Execute("photos.putTag", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

