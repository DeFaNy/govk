// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosGetUserPhotos Returns a list of photos in which a user is tagged.
type PhotosGetUserPhotosRequest api.Params

func NewPhotosGetUserPhotosRequest() PhotosGetUserPhotosRequest {
	params := make(PhotosGetUserPhotosRequest, 6)
	return params
}

func (p PhotosGetUserPhotosRequest) WithUserId(p_user_id int) PhotosGetUserPhotosRequest{
	p["user_id"] = p_user_id
	return p
}

func (p PhotosGetUserPhotosRequest) WithOffset(p_offset int) PhotosGetUserPhotosRequest{
	p["offset"] = p_offset
	return p
}

func (p PhotosGetUserPhotosRequest) WithCount(p_count int) PhotosGetUserPhotosRequest{
	p["count"] = p_count
	return p
}

func (p PhotosGetUserPhotosRequest) WithExtended(p_extended bool) PhotosGetUserPhotosRequest{
	p["extended"] = p_extended
	return p
}

func (p PhotosGetUserPhotosRequest) WithSort(p_sort string) PhotosGetUserPhotosRequest{
	p["sort"] = p_sort
	return p
}

func (p PhotosGetUserPhotosRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/photos.getUserPhotos
func (p *Photos) PhotosGetUserPhotos(params ...api.MethodParams) (resp models.PhotosGetUserPhotosResponse, err error) {
	req := api.NewRequest[models.PhotosGetUserPhotosResponse](p.api)

	res, err := req.Execute("photos.getUserPhotos", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

