// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosSaveMarketPhoto Saves market photos after successful uploading.
type PhotosSaveMarketPhotoRequest api.Params

func NewPhotosSaveMarketPhotoRequest() PhotosSaveMarketPhotoRequest {
	params := make(PhotosSaveMarketPhotoRequest, 7)
	return params
}

func (p PhotosSaveMarketPhotoRequest) WithGroupId(p_group_id int) PhotosSaveMarketPhotoRequest{
	p["group_id"] = p_group_id
	return p
}

func (p PhotosSaveMarketPhotoRequest) WithPhoto(p_photo string) PhotosSaveMarketPhotoRequest{
	p["photo"] = p_photo
	return p
}

func (p PhotosSaveMarketPhotoRequest) WithServer(p_server int) PhotosSaveMarketPhotoRequest{
	p["server"] = p_server
	return p
}

func (p PhotosSaveMarketPhotoRequest) WithHash(p_hash string) PhotosSaveMarketPhotoRequest{
	p["hash"] = p_hash
	return p
}

func (p PhotosSaveMarketPhotoRequest) WithCropData(p_crop_data string) PhotosSaveMarketPhotoRequest{
	p["crop_data"] = p_crop_data
	return p
}

func (p PhotosSaveMarketPhotoRequest) WithCropHash(p_crop_hash string) PhotosSaveMarketPhotoRequest{
	p["crop_hash"] = p_crop_hash
	return p
}

func (p PhotosSaveMarketPhotoRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ParamHash, Error_ParamPhoto, Error_MarketNotEnabled ]
//
// https://dev.vk.com/method/photos.saveMarketPhoto
func (p *Photos) PhotosSaveMarketPhoto(params ...api.MethodParams) (resp models.PhotosSaveMarketPhotoResponse, err error) {
	req := api.NewRequest[models.PhotosSaveMarketPhotoResponse](p.api)

	res, err := req.Execute("photos.saveMarketPhoto", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

