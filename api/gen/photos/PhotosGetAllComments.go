// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PhotosGetAllComments Returns a list of comments on a specific photo album or all albums of the user sorted in reverse chronological order.
type PhotosGetAllCommentsRequest api.Params

func NewPhotosGetAllCommentsRequest() PhotosGetAllCommentsRequest {
	params := make(PhotosGetAllCommentsRequest, 6)
	return params
}

func (p PhotosGetAllCommentsRequest) WithOwnerId(p_owner_id int) PhotosGetAllCommentsRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PhotosGetAllCommentsRequest) WithAlbumId(p_album_id int) PhotosGetAllCommentsRequest{
	p["album_id"] = p_album_id
	return p
}

func (p PhotosGetAllCommentsRequest) WithNeedLikes(p_need_likes bool) PhotosGetAllCommentsRequest{
	p["need_likes"] = p_need_likes
	return p
}

func (p PhotosGetAllCommentsRequest) WithOffset(p_offset int) PhotosGetAllCommentsRequest{
	p["offset"] = p_offset
	return p
}

func (p PhotosGetAllCommentsRequest) WithCount(p_count int) PhotosGetAllCommentsRequest{
	p["count"] = p_count
	return p
}

func (p PhotosGetAllCommentsRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ParamAlbumId ]
//
// https://dev.vk.com/method/photos.getAllComments
func (p *Photos) PhotosGetAllComments(params ...api.MethodParams) (resp models.PhotosGetAllCommentsResponse, err error) {
	req := api.NewRequest[models.PhotosGetAllCommentsResponse](p.api)

	res, err := req.Execute("photos.getAllComments", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

