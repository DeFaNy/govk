// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// UtilsResolveScreenName Detects a type of object (e.g., user, community, application) and its ID by screen name.
type UtilsResolveScreenNameRequest api.Params

func NewUtilsResolveScreenNameRequest() UtilsResolveScreenNameRequest {
	params := make(UtilsResolveScreenNameRequest, 2)
	return params
}

func (u UtilsResolveScreenNameRequest) WithScreenName(u_screen_name string) UtilsResolveScreenNameRequest{
	u["screen_name"] = u_screen_name
	return u
}

func (u UtilsResolveScreenNameRequest) Params() api.Params {
	return api.Params(u)
}

// May execute with listed access token types:
//    [ user, group, service ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/utils.resolveScreenName
func (u *Utils) UtilsResolveScreenName(params ...api.MethodParams) (resp models.UtilsResolveScreenNameResponse, err error) {
	req := api.NewRequest[models.UtilsResolveScreenNameResponse](u.api)

	res, err := req.Execute("utils.resolveScreenName", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

