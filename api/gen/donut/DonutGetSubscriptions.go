// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// DonutGetSubscriptions Returns a list of user's VK Donut subscriptions.
type DonutGetSubscriptionsRequest api.Params

func NewDonutGetSubscriptionsRequest() DonutGetSubscriptionsRequest {
	params := make(DonutGetSubscriptionsRequest, 4)
	return params
}

func (d DonutGetSubscriptionsRequest) WithFields(d_fields []models.BaseUserGroupFields) DonutGetSubscriptionsRequest{
	d["fields"] = d_fields
	return d
}

func (d DonutGetSubscriptionsRequest) WithOffset(d_offset int) DonutGetSubscriptionsRequest{
	d["offset"] = d_offset
	return d
}

func (d DonutGetSubscriptionsRequest) WithCount(d_count int) DonutGetSubscriptionsRequest{
	d["count"] = d_count
	return d
}

func (d DonutGetSubscriptionsRequest) Params() api.Params {
	return api.Params(d)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/donut.getSubscriptions
func (d *Donut) DonutGetSubscriptions(params ...api.MethodParams) (resp models.DonutGetSubscriptionsResponse, err error) {
	req := api.NewRequest[models.DonutGetSubscriptionsResponse](d.api)

	res, err := req.Execute("donut.getSubscriptions", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

