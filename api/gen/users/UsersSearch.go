// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// UsersSearch Returns a list of users matching the search criteria.
type UsersSearchRequest api.Params

func NewUsersSearchRequest() UsersSearchRequest {
	params := make(UsersSearchRequest, 33)
	return params
}

func (u UsersSearchRequest) WithQ(u_q string) UsersSearchRequest{
	u["q"] = u_q
	return u
}

func (u UsersSearchRequest) WithSort(u_sort int) UsersSearchRequest{
	u["sort"] = u_sort
	return u
}

func (u UsersSearchRequest) WithOffset(u_offset int) UsersSearchRequest{
	u["offset"] = u_offset
	return u
}

func (u UsersSearchRequest) WithCount(u_count int) UsersSearchRequest{
	u["count"] = u_count
	return u
}

func (u UsersSearchRequest) WithFields(u_fields []models.UsersFields) UsersSearchRequest{
	u["fields"] = u_fields
	return u
}

func (u UsersSearchRequest) WithCity(u_city int) UsersSearchRequest{
	u["city"] = u_city
	return u
}

func (u UsersSearchRequest) WithCountry(u_country int) UsersSearchRequest{
	u["country"] = u_country
	return u
}

func (u UsersSearchRequest) WithHometown(u_hometown string) UsersSearchRequest{
	u["hometown"] = u_hometown
	return u
}

func (u UsersSearchRequest) WithUniversityCountry(u_university_country int) UsersSearchRequest{
	u["university_country"] = u_university_country
	return u
}

func (u UsersSearchRequest) WithUniversity(u_university int) UsersSearchRequest{
	u["university"] = u_university
	return u
}

func (u UsersSearchRequest) WithUniversityYear(u_university_year int) UsersSearchRequest{
	u["university_year"] = u_university_year
	return u
}

func (u UsersSearchRequest) WithUniversityFaculty(u_university_faculty int) UsersSearchRequest{
	u["university_faculty"] = u_university_faculty
	return u
}

func (u UsersSearchRequest) WithUniversityChair(u_university_chair int) UsersSearchRequest{
	u["university_chair"] = u_university_chair
	return u
}

func (u UsersSearchRequest) WithSex(u_sex int) UsersSearchRequest{
	u["sex"] = u_sex
	return u
}

func (u UsersSearchRequest) WithStatus(u_status int) UsersSearchRequest{
	u["status"] = u_status
	return u
}

func (u UsersSearchRequest) WithAgeFrom(u_age_from int) UsersSearchRequest{
	u["age_from"] = u_age_from
	return u
}

func (u UsersSearchRequest) WithAgeTo(u_age_to int) UsersSearchRequest{
	u["age_to"] = u_age_to
	return u
}

func (u UsersSearchRequest) WithBirthDay(u_birth_day int) UsersSearchRequest{
	u["birth_day"] = u_birth_day
	return u
}

func (u UsersSearchRequest) WithBirthMonth(u_birth_month int) UsersSearchRequest{
	u["birth_month"] = u_birth_month
	return u
}

func (u UsersSearchRequest) WithBirthYear(u_birth_year int) UsersSearchRequest{
	u["birth_year"] = u_birth_year
	return u
}

func (u UsersSearchRequest) WithOnline(u_online bool) UsersSearchRequest{
	u["online"] = u_online
	return u
}

func (u UsersSearchRequest) WithHasPhoto(u_has_photo bool) UsersSearchRequest{
	u["has_photo"] = u_has_photo
	return u
}

func (u UsersSearchRequest) WithSchoolCountry(u_school_country int) UsersSearchRequest{
	u["school_country"] = u_school_country
	return u
}

func (u UsersSearchRequest) WithSchoolCity(u_school_city int) UsersSearchRequest{
	u["school_city"] = u_school_city
	return u
}

func (u UsersSearchRequest) WithSchoolClass(u_school_class int) UsersSearchRequest{
	u["school_class"] = u_school_class
	return u
}

func (u UsersSearchRequest) WithSchool(u_school int) UsersSearchRequest{
	u["school"] = u_school
	return u
}

func (u UsersSearchRequest) WithSchoolYear(u_school_year int) UsersSearchRequest{
	u["school_year"] = u_school_year
	return u
}

func (u UsersSearchRequest) WithReligion(u_religion string) UsersSearchRequest{
	u["religion"] = u_religion
	return u
}

func (u UsersSearchRequest) WithCompany(u_company string) UsersSearchRequest{
	u["company"] = u_company
	return u
}

func (u UsersSearchRequest) WithPosition(u_position string) UsersSearchRequest{
	u["position"] = u_position
	return u
}

func (u UsersSearchRequest) WithGroupId(u_group_id int) UsersSearchRequest{
	u["group_id"] = u_group_id
	return u
}

func (u UsersSearchRequest) WithFromList(u_from_list []string) UsersSearchRequest{
	u["from_list"] = u_from_list
	return u
}

func (u UsersSearchRequest) Params() api.Params {
	return api.Params(u)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/users.search
func (u *Users) UsersSearch(params ...api.MethodParams) (resp models.UsersSearchResponse, err error) {
	req := api.NewRequest[models.UsersSearchResponse](u.api)

	res, err := req.Execute("users.search", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

