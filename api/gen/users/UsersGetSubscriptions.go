// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// UsersGetSubscriptions Returns a list of IDs of users and communities followed by the user.
type UsersGetSubscriptionsRequest api.Params

func NewUsersGetSubscriptionsRequest() UsersGetSubscriptionsRequest {
	params := make(UsersGetSubscriptionsRequest, 7)
	return params
}

func (u UsersGetSubscriptionsRequest) WithUserId(u_user_id int) UsersGetSubscriptionsRequest{
	u["user_id"] = u_user_id
	return u
}

func (u UsersGetSubscriptionsRequest) WithExtended(u_extended bool) UsersGetSubscriptionsRequest{
	u["extended"] = u_extended
	return u
}

func (u UsersGetSubscriptionsRequest) WithOffset(u_offset int) UsersGetSubscriptionsRequest{
	u["offset"] = u_offset
	return u
}

func (u UsersGetSubscriptionsRequest) WithCount(u_count int) UsersGetSubscriptionsRequest{
	u["count"] = u_count
	return u
}

func (u UsersGetSubscriptionsRequest) WithFields(u_fields []models.UsersFields) UsersGetSubscriptionsRequest{
	u["fields"] = u_fields
	return u
}

func (u UsersGetSubscriptionsRequest) Params() api.Params {
	return api.Params(u)
}

// May execute with listed access token types:
//    [ user, service ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/users.getSubscriptions
func (u *Users) UsersGetSubscriptions(params ...api.MethodParams) (resp models.UsersGetSubscriptionsResponse, err error) {
	req := api.NewRequest[models.UsersGetSubscriptionsResponse](u.api)

	res, err := req.Execute("users.getSubscriptions", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// UsersGetSubscriptionsExtended Returns a list of IDs of users and communities followed by the user.
// May execute with listed access token types:
//    [ user, service ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/users.getSubscriptions
func (u *Users) UsersGetSubscriptionsExtended(params ...api.MethodParams) (resp models.UsersGetSubscriptionsExtendedResponse, err error) {
	req := api.NewRequest[models.UsersGetSubscriptionsExtendedResponse](u.api)

	res, err := req.Execute("users.getSubscriptions", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

