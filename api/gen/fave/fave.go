// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

type Fave struct {
	api *api.API
}

func NewFave(api *api.API) *Fave {
	return &Fave{
		api: api,
	}
}

// FaveAddArticle ...
type FaveAddArticleRequest api.Params

func NewFaveAddArticleRequest() FaveAddArticleRequest {
	params := make(FaveAddArticleRequest, 2)
	return params
}

func (f FaveAddArticleRequest) WithUrl(f_url string) FaveAddArticleRequest {
	f["url"] = f_url
	return f
}

func (f FaveAddArticleRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global or with listed codes API errors:
//
//	[ Error_NotFound ]
//
// https://dev.vk.com/method/fave.addArticle
func (f *Fave) FaveAddArticle(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addArticle", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddLink Adds a link to user faves.
type FaveAddLinkRequest api.Params

func NewFaveAddLinkRequest() FaveAddLinkRequest {
	params := make(FaveAddLinkRequest, 2)
	return params
}

func (f FaveAddLinkRequest) WithLink(f_link string) FaveAddLinkRequest {
	f["link"] = f_link
	return f
}

func (f FaveAddLinkRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.addLink
func (f *Fave) FaveAddLink(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addLink", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddPage ...
type FaveAddPageRequest api.Params

func NewFaveAddPageRequest() FaveAddPageRequest {
	params := make(FaveAddPageRequest, 3)
	return params
}

func (f FaveAddPageRequest) WithUserId(f_user_id int) FaveAddPageRequest {
	f["user_id"] = f_user_id
	return f
}

func (f FaveAddPageRequest) WithGroupId(f_group_id int) FaveAddPageRequest {
	f["group_id"] = f_group_id
	return f
}

func (f FaveAddPageRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.addPage
func (f *Fave) FaveAddPage(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addPage", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddPost ...
type FaveAddPostRequest api.Params

func NewFaveAddPostRequest() FaveAddPostRequest {
	params := make(FaveAddPostRequest, 4)
	return params
}

func (f FaveAddPostRequest) WithOwnerId(f_owner_id int) FaveAddPostRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveAddPostRequest) WithId(f_id int) FaveAddPostRequest {
	f["id"] = f_id
	return f
}

func (f FaveAddPostRequest) WithAccessKey(f_access_key string) FaveAddPostRequest {
	f["access_key"] = f_access_key
	return f
}

func (f FaveAddPostRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.addPost
func (f *Fave) FaveAddPost(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addPost", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddProduct ...
type FaveAddProductRequest api.Params

func NewFaveAddProductRequest() FaveAddProductRequest {
	params := make(FaveAddProductRequest, 4)
	return params
}

func (f FaveAddProductRequest) WithOwnerId(f_owner_id int) FaveAddProductRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveAddProductRequest) WithId(f_id int) FaveAddProductRequest {
	f["id"] = f_id
	return f
}

func (f FaveAddProductRequest) WithAccessKey(f_access_key string) FaveAddProductRequest {
	f["access_key"] = f_access_key
	return f
}

func (f FaveAddProductRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.addProduct
func (f *Fave) FaveAddProduct(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addProduct", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddTag ...
type FaveAddTagRequest api.Params

func NewFaveAddTagRequest() FaveAddTagRequest {
	params := make(FaveAddTagRequest, 3)
	return params
}

func (f FaveAddTagRequest) WithName(f_name string) FaveAddTagRequest {
	f["name"] = f_name
	return f
}

func (f FaveAddTagRequest) WithPosition(f_position string) FaveAddTagRequest {
	f["position"] = f_position
	return f
}

func (f FaveAddTagRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global or with listed codes API errors:
//
//	[ Error_Limits ]
//
// https://dev.vk.com/method/fave.addTag
func (f *Fave) FaveAddTag(params ...api.MethodParams) (resp models.FaveAddTagResponse, err error) {
	req := api.NewRequest[models.FaveAddTagResponse](f.api)

	res, err := req.Execute("fave.addTag", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveAddVideo ...
type FaveAddVideoRequest api.Params

func NewFaveAddVideoRequest() FaveAddVideoRequest {
	params := make(FaveAddVideoRequest, 4)
	return params
}

func (f FaveAddVideoRequest) WithOwnerId(f_owner_id int) FaveAddVideoRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveAddVideoRequest) WithId(f_id int) FaveAddVideoRequest {
	f["id"] = f_id
	return f
}

func (f FaveAddVideoRequest) WithAccessKey(f_access_key string) FaveAddVideoRequest {
	f["access_key"] = f_access_key
	return f
}

func (f FaveAddVideoRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.addVideo
func (f *Fave) FaveAddVideo(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.addVideo", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveEditTag ...
type FaveEditTagRequest api.Params

func NewFaveEditTagRequest() FaveEditTagRequest {
	params := make(FaveEditTagRequest, 3)
	return params
}

func (f FaveEditTagRequest) WithId(f_id int) FaveEditTagRequest {
	f["id"] = f_id
	return f
}

func (f FaveEditTagRequest) WithName(f_name string) FaveEditTagRequest {
	f["name"] = f_name
	return f
}

func (f FaveEditTagRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.editTag
func (f *Fave) FaveEditTag(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.editTag", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveGet ...
type FaveGetRequest api.Params

func NewFaveGetRequest() FaveGetRequest {
	params := make(FaveGetRequest, 9)
	return params
}

func (f FaveGetRequest) WithExtended(f_extended bool) FaveGetRequest {
	f["extended"] = f_extended
	return f
}

func (f FaveGetRequest) WithItemType(f_item_type string) FaveGetRequest {
	f["item_type"] = f_item_type
	return f
}

func (f FaveGetRequest) WithTagId(f_tag_id int) FaveGetRequest {
	f["tag_id"] = f_tag_id
	return f
}

func (f FaveGetRequest) WithOffset(f_offset int) FaveGetRequest {
	f["offset"] = f_offset
	return f
}

func (f FaveGetRequest) WithCount(f_count int) FaveGetRequest {
	f["count"] = f_count
	return f
}

func (f FaveGetRequest) WithFields(f_fields []models.UsersFields) FaveGetRequest {
	f["fields"] = f_fields
	return f
}

func (f FaveGetRequest) WithIsFromSnackbar(f_is_from_snackbar bool) FaveGetRequest {
	f["is_from_snackbar"] = f_is_from_snackbar
	return f
}

func (f FaveGetRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.get
func (f *Fave) FaveGet(params ...api.MethodParams) (resp models.FaveGetResponse, err error) {
	req := api.NewRequest[models.FaveGetResponse](f.api)

	res, err := req.Execute("fave.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveGetExtended ...
// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.get
func (f *Fave) FaveGetExtended(params ...api.MethodParams) (resp models.FaveGetExtendedResponse, err error) {
	req := api.NewRequest[models.FaveGetExtendedResponse](f.api)

	res, err := req.Execute("fave.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveGetPages ...
type FaveGetPagesRequest api.Params

func NewFaveGetPagesRequest() FaveGetPagesRequest {
	params := make(FaveGetPagesRequest, 6)
	return params
}

func (f FaveGetPagesRequest) WithOffset(f_offset int) FaveGetPagesRequest {
	f["offset"] = f_offset
	return f
}

func (f FaveGetPagesRequest) WithCount(f_count int) FaveGetPagesRequest {
	f["count"] = f_count
	return f
}

func (f FaveGetPagesRequest) WithType(f_type string) FaveGetPagesRequest {
	f["type"] = f_type
	return f
}

func (f FaveGetPagesRequest) WithFields(f_fields []models.BaseUserGroupFields) FaveGetPagesRequest {
	f["fields"] = f_fields
	return f
}

func (f FaveGetPagesRequest) WithTagId(f_tag_id int) FaveGetPagesRequest {
	f["tag_id"] = f_tag_id
	return f
}

func (f FaveGetPagesRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.getPages
func (f *Fave) FaveGetPages(params ...api.MethodParams) (resp models.FaveGetPagesResponse, err error) {
	req := api.NewRequest[models.FaveGetPagesResponse](f.api)

	res, err := req.Execute("fave.getPages", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveGetTags ...
// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.getTags
func (f *Fave) FaveGetTags(params ...api.MethodParams) (resp models.FaveGetTagsResponse, err error) {
	req := api.NewRequest[models.FaveGetTagsResponse](f.api)

	res, err := req.Execute("fave.getTags", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveMarkSeen ...
// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.markSeen
func (f *Fave) FaveMarkSeen(params ...api.MethodParams) (resp models.BaseBoolResponse, err error) {
	req := api.NewRequest[models.BaseBoolResponse](f.api)

	res, err := req.Execute("fave.markSeen", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemoveArticle ...
type FaveRemoveArticleRequest api.Params

func NewFaveRemoveArticleRequest() FaveRemoveArticleRequest {
	params := make(FaveRemoveArticleRequest, 3)
	return params
}

func (f FaveRemoveArticleRequest) WithOwnerId(f_owner_id int) FaveRemoveArticleRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveRemoveArticleRequest) WithArticleId(f_article_id int) FaveRemoveArticleRequest {
	f["article_id"] = f_article_id
	return f
}

func (f FaveRemoveArticleRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removeArticle
func (f *Fave) FaveRemoveArticle(params ...api.MethodParams) (resp models.BaseBoolResponse, err error) {
	req := api.NewRequest[models.BaseBoolResponse](f.api)

	res, err := req.Execute("fave.removeArticle", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemoveLink Removes link from the user's faves.
type FaveRemoveLinkRequest api.Params

func NewFaveRemoveLinkRequest() FaveRemoveLinkRequest {
	params := make(FaveRemoveLinkRequest, 3)
	return params
}

func (f FaveRemoveLinkRequest) WithLinkId(f_link_id string) FaveRemoveLinkRequest {
	f["link_id"] = f_link_id
	return f
}

func (f FaveRemoveLinkRequest) WithLink(f_link string) FaveRemoveLinkRequest {
	f["link"] = f_link
	return f
}

func (f FaveRemoveLinkRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removeLink
func (f *Fave) FaveRemoveLink(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removeLink", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemovePage ...
type FaveRemovePageRequest api.Params

func NewFaveRemovePageRequest() FaveRemovePageRequest {
	params := make(FaveRemovePageRequest, 3)
	return params
}

func (f FaveRemovePageRequest) WithUserId(f_user_id int) FaveRemovePageRequest {
	f["user_id"] = f_user_id
	return f
}

func (f FaveRemovePageRequest) WithGroupId(f_group_id int) FaveRemovePageRequest {
	f["group_id"] = f_group_id
	return f
}

func (f FaveRemovePageRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removePage
func (f *Fave) FaveRemovePage(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removePage", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemovePost ...
type FaveRemovePostRequest api.Params

func NewFaveRemovePostRequest() FaveRemovePostRequest {
	params := make(FaveRemovePostRequest, 3)
	return params
}

func (f FaveRemovePostRequest) WithOwnerId(f_owner_id int) FaveRemovePostRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveRemovePostRequest) WithId(f_id int) FaveRemovePostRequest {
	f["id"] = f_id
	return f
}

func (f FaveRemovePostRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removePost
func (f *Fave) FaveRemovePost(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removePost", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemoveProduct ...
type FaveRemoveProductRequest api.Params

func NewFaveRemoveProductRequest() FaveRemoveProductRequest {
	params := make(FaveRemoveProductRequest, 3)
	return params
}

func (f FaveRemoveProductRequest) WithOwnerId(f_owner_id int) FaveRemoveProductRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveRemoveProductRequest) WithId(f_id int) FaveRemoveProductRequest {
	f["id"] = f_id
	return f
}

func (f FaveRemoveProductRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removeProduct
func (f *Fave) FaveRemoveProduct(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removeProduct", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemoveTag ...
type FaveRemoveTagRequest api.Params

func NewFaveRemoveTagRequest() FaveRemoveTagRequest {
	params := make(FaveRemoveTagRequest, 2)
	return params
}

func (f FaveRemoveTagRequest) WithId(f_id int) FaveRemoveTagRequest {
	f["id"] = f_id
	return f
}

func (f FaveRemoveTagRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removeTag
func (f *Fave) FaveRemoveTag(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removeTag", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveRemoveVideo ...
type FaveRemoveVideoRequest api.Params

func NewFaveRemoveVideoRequest() FaveRemoveVideoRequest {
	params := make(FaveRemoveVideoRequest, 3)
	return params
}

func (f FaveRemoveVideoRequest) WithOwnerId(f_owner_id int) FaveRemoveVideoRequest {
	f["owner_id"] = f_owner_id
	return f
}

func (f FaveRemoveVideoRequest) WithId(f_id int) FaveRemoveVideoRequest {
	f["id"] = f_id
	return f
}

func (f FaveRemoveVideoRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.removeVideo
func (f *Fave) FaveRemoveVideo(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.removeVideo", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveReorderTags ...
type FaveReorderTagsRequest api.Params

func NewFaveReorderTagsRequest() FaveReorderTagsRequest {
	params := make(FaveReorderTagsRequest, 2)
	return params
}

func (f FaveReorderTagsRequest) WithIds(f_ids []int) FaveReorderTagsRequest {
	f["ids"] = f_ids
	return f
}

func (f FaveReorderTagsRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.reorderTags
func (f *Fave) FaveReorderTags(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.reorderTags", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveSetPageTags ...
type FaveSetPageTagsRequest api.Params

func NewFaveSetPageTagsRequest() FaveSetPageTagsRequest {
	params := make(FaveSetPageTagsRequest, 4)
	return params
}

func (f FaveSetPageTagsRequest) WithUserId(f_user_id int) FaveSetPageTagsRequest {
	f["user_id"] = f_user_id
	return f
}

func (f FaveSetPageTagsRequest) WithGroupId(f_group_id int) FaveSetPageTagsRequest {
	f["group_id"] = f_group_id
	return f
}

func (f FaveSetPageTagsRequest) WithTagIds(f_tag_ids []int) FaveSetPageTagsRequest {
	f["tag_ids"] = f_tag_ids
	return f
}

func (f FaveSetPageTagsRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global or with listed codes API errors:
//
//	[ Error_NotFound ]
//
// https://dev.vk.com/method/fave.setPageTags
func (f *Fave) FaveSetPageTags(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.setPageTags", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveSetTags ...
type FaveSetTagsRequest api.Params

func NewFaveSetTagsRequest() FaveSetTagsRequest {
	params := make(FaveSetTagsRequest, 7)
	return params
}

func (f FaveSetTagsRequest) WithItemType(f_item_type string) FaveSetTagsRequest {
	f["item_type"] = f_item_type
	return f
}

func (f FaveSetTagsRequest) WithItemOwnerId(f_item_owner_id int) FaveSetTagsRequest {
	f["item_owner_id"] = f_item_owner_id
	return f
}

func (f FaveSetTagsRequest) WithItemId(f_item_id int) FaveSetTagsRequest {
	f["item_id"] = f_item_id
	return f
}

func (f FaveSetTagsRequest) WithTagIds(f_tag_ids []int) FaveSetTagsRequest {
	f["tag_ids"] = f_tag_ids
	return f
}

func (f FaveSetTagsRequest) WithLinkId(f_link_id string) FaveSetTagsRequest {
	f["link_id"] = f_link_id
	return f
}

func (f FaveSetTagsRequest) WithLinkUrl(f_link_url string) FaveSetTagsRequest {
	f["link_url"] = f_link_url
	return f
}

func (f FaveSetTagsRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global or with listed codes API errors:
//
//	[ Error_NotFound, Error_FaveAliexpressTag ]
//
// https://dev.vk.com/method/fave.setTags
func (f *Fave) FaveSetTags(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.setTags", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FaveTrackPageInteraction ...
type FaveTrackPageInteractionRequest api.Params

func NewFaveTrackPageInteractionRequest() FaveTrackPageInteractionRequest {
	params := make(FaveTrackPageInteractionRequest, 3)
	return params
}

func (f FaveTrackPageInteractionRequest) WithUserId(f_user_id int) FaveTrackPageInteractionRequest {
	f["user_id"] = f_user_id
	return f
}

func (f FaveTrackPageInteractionRequest) WithGroupId(f_group_id int) FaveTrackPageInteractionRequest {
	f["group_id"] = f_group_id
	return f
}

func (f FaveTrackPageInteractionRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/fave.trackPageInteraction
func (f *Fave) FaveTrackPageInteraction(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](f.api)

	res, err := req.Execute("fave.trackPageInteraction", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}
