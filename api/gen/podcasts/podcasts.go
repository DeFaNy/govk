// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

type Podcasts struct {
	api *api.API
}

func NewPodcasts(api *api.API) *Podcasts {
	return &Podcasts{
		api: api,
	}
}

// PodcastsSearchPodcast ...
type PodcastsSearchPodcastRequest api.Params

func NewPodcastsSearchPodcastRequest() PodcastsSearchPodcastRequest {
	params := make(PodcastsSearchPodcastRequest, 4)
	return params
}

func (p PodcastsSearchPodcastRequest) WithSearchString(p_search_string string) PodcastsSearchPodcastRequest {
	p["search_string"] = p_search_string
	return p
}

func (p PodcastsSearchPodcastRequest) WithOffset(p_offset int) PodcastsSearchPodcastRequest {
	p["offset"] = p_offset
	return p
}

func (p PodcastsSearchPodcastRequest) WithCount(p_count int) PodcastsSearchPodcastRequest {
	p["count"] = p_count
	return p
}

func (p PodcastsSearchPodcastRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//
//	[ user, group ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/podcasts.searchPodcast
func (p *Podcasts) PodcastsSearchPodcast(params ...api.MethodParams) (resp models.PodcastsSearchPodcastResponse, err error) {
	req := api.NewRequest[models.PodcastsSearchPodcastResponse](p.api)

	res, err := req.Execute("podcasts.searchPodcast", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}
