// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package models

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

//easyjson:skip
type PrettyCardsPrettyCardButton struct{
	Raws []byte
}

func (o *PrettyCardsPrettyCardButton) MarshalJSON() ([]byte, error) {
	return o.Raws, nil
}

func (o *PrettyCardsPrettyCardButton) UnmarshalJSON(body []byte) (err error) {
	o.Raws = body
	return nil
}

func (o PrettyCardsPrettyCardButton) Raw() []byte {
	return o.Raws
}

type PrettyCardsPrettyCard struct {
	// Button key
	Button *PrettyCardsPrettyCardButton `json:"button,omitempty"`
	// Button text in current language
	ButtonText *string `json:"button_text,omitempty"`
	// Card ID (long int returned as string)
	CardId string `json:"card_id"`
	Images *[]BaseImage `json:"images,omitempty"`
	// Link URL
	LinkUrl string `json:"link_url"`
	// Photo ID (format "<owner_id>_<media_id>")
	Photo string `json:"photo"`
	// Price if set (decimal number returned as string)
	Price *string `json:"price,omitempty"`
	// Old price if set (decimal number returned as string)
	PriceOld *string `json:"price_old,omitempty"`
	// Title
	Title string `json:"title"`
}

//easyjson:skip
type PrettyCardsPrettyCardOrError struct{
	Raws []byte
}

func (o *PrettyCardsPrettyCardOrError) MarshalJSON() ([]byte, error) {
	return o.Raws, nil
}

func (o *PrettyCardsPrettyCardOrError) UnmarshalJSON(body []byte) (err error) {
	o.Raws = body
	return nil
}

func (o PrettyCardsPrettyCardOrError) Raw() []byte {
	return o.Raws
}

type PrettyCardsCreateResponse struct {
	Prettycards struct {
		// Card ID of created pretty card
		CardId string `json:"card_id"`
		// Owner ID of created pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"prettycards"`
}

type PrettyCardsDeleteResponse struct {
	Prettycards struct {
		// Card ID of deleted pretty card
		CardId string `json:"card_id"`
		// Error reason if error happened
		Error *string `json:"error,omitempty"`
		// Owner ID of deleted pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"prettycards"`
}

type PrettyCardsEditResponse struct {
	Prettycards struct {
		// Card ID of edited pretty card
		CardId string `json:"card_id"`
		// Owner ID of edited pretty card
		//  Format: int64
		OwnerId int `json:"owner_id"`
	} `json:"prettycards"`
}

type PrettyCardsGetByIdResponse struct {
	Response []PrettyCardsPrettyCardOrError `json:"response"`
}

type PrettyCardsGetUploadURLResponse struct {
	// Upload URL
	Response string `json:"response"`
}

type PrettyCardsGetResponse struct {
	Prettycards struct {
		// Total number
		Count int `json:"count"`
		Items []PrettyCardsPrettyCard `json:"items"`
	} `json:"prettycards"`
}

