// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package models

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

type StoreProductType string

const (
	StoreProductTypeStickers StoreProductType = "stickers"
)

type StoreProduct struct {
	// Information whether the product is active (1 - yes, 0 - no)
	Active *BaseBoolInt `json:"active,omitempty"`
	// Information whether the product is an animated sticker pack (for stickers product type)
	HasAnimation *bool `json:"has_animation,omitempty"`
	// Array of icon images or icon set object of the product (for stickers product type)
	Icon *StoreProductIcon `json:"icon,omitempty"`
	// Id of the product
	Id int `json:"id"`
	// Information whether sticker product wasn't used after being purchased
	IsNew *bool `json:"is_new,omitempty"`
	PaymentRegion *string `json:"payment_region,omitempty"`
	// Array of preview images of the product (for stickers product type)
	Previews *[]BaseImage `json:"previews,omitempty"`
	// Information whether the product is promoted (1 - yes, 0 - no)
	Promoted *BaseBoolInt `json:"promoted,omitempty"`
	// Date (Unix time) when the product was purchased
	//  Minimum: 0
	PurchaseDate *int `json:"purchase_date,omitempty"`
	// Information whether the product is purchased (1 - yes, 0 - no)
	Purchased *BaseBoolInt `json:"purchased,omitempty"`
	Stickers *BaseStickersList `json:"stickers,omitempty"`
	// Array of style sticker ids (for sticker pack styles)
	StyleStickerIds *[]int `json:"style_sticker_ids,omitempty"`
	// Subtitle of the product
	Subtitle *string `json:"subtitle,omitempty"`
	// Title of the product
	Title *string `json:"title,omitempty"`
	// Product type
	Type StoreProductType`json:"type"`
}

type StoreProductIcon []BaseImage

type StoreStickersKeyword struct {
	PromotedStickers *StoreStickersKeywordStickers `json:"promoted_stickers,omitempty"`
	Stickers *[]StoreStickersKeywordSticker `json:"stickers,omitempty"`
	UserStickers *StoreStickersKeywordStickers `json:"user_stickers,omitempty"`
	Words []string `json:"words"`
}

type StoreStickersKeywordSticker struct {
	// Pack id
	PackId int `json:"pack_id"`
	// Sticker id
	StickerId int `json:"sticker_id"`
}

type StoreStickersKeywordStickers BaseStickersList

type StoreGetFavoriteStickersResponse struct {
	Response []BaseSticker `json:"response"`
}

type StoreGetProductsResponse struct {
	Response []StoreProduct `json:"response"`
}

type StoreGetStickersKeywordsResponse struct {
	Store struct {
		// Total count of chunks to load
		//  Minimum: 1
		ChunksCount *int `json:"chunks_count,omitempty"`
		// Chunks version hash
		//  Minimum: 1
		ChunksHash *string `json:"chunks_hash,omitempty"`
		//  Minimum: 0
		Count int `json:"count"`
		Dictionary []StoreStickersKeyword `json:"dictionary"`
	} `json:"store"`
}

