// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package models

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

type AccountAccountCounters struct {
	// New app requests number
	//  Minimum: 1
	AppRequests *int `json:"app_requests,omitempty"`
	// New events number
	//  Minimum: 1
	Events *int `json:"events,omitempty"`
	// New faves number
	//  Minimum: 1
	Faves *int `json:"faves,omitempty"`
	// New friends requests number
	//  Minimum: 1
	Friends *int `json:"friends,omitempty"`
	// New friends recommendations number
	//  Minimum: 1
	FriendsRecommendations *int `json:"friends_recommendations,omitempty"`
	// New friends suggestions number
	//  Minimum: 1
	FriendsSuggestions *int `json:"friends_suggestions,omitempty"`
	// New gifts number
	//  Minimum: 1
	Gifts *int `json:"gifts,omitempty"`
	// New groups number
	//  Minimum: 1
	Groups *int `json:"groups,omitempty"`
	// New memories number
	//  Minimum: 1
	Memories *int `json:"memories,omitempty"`
	MenuClipsBadge *int `json:"menu_clips_badge,omitempty"`
	MenuDiscoverBadge *int `json:"menu_discover_badge,omitempty"`
	// New messages number
	//  Minimum: 1
	Messages *int `json:"messages,omitempty"`
	// New notes number
	//  Minimum: 1
	Notes *int `json:"notes,omitempty"`
	// New notifications number
	//  Minimum: 1
	Notifications *int `json:"notifications,omitempty"`
	// New photo tags number
	//  Minimum: 1
	Photos *int `json:"photos,omitempty"`
	// New sdk number
	//  Minimum: 1
	Sdk *int `json:"sdk,omitempty"`
}

type AccountInfo struct {
	// Two factor authentication is enabled
	TwoFaRequired *BaseBoolInt `json:"2fa_required,omitempty"`
	// Country code
	Country *string `json:"country,omitempty"`
	// Information whether HTTPS-only is enabled
	HttpsRequired *BaseBoolInt `json:"https_required,omitempty"`
	// Information whether user has been processed intro
	Intro *BaseBoolInt `json:"intro,omitempty"`
	// Language ID
	Lang *int `json:"lang,omitempty"`
	LinkRedirects *[]string `json:"link_redirects,omitempty"`
	// Ads slot id for MyTarget
	//  Minimum: 0
	MiniAppsAdsSlotId *int `json:"mini_apps_ads_slot_id,omitempty"`
	// Information whether wall comments should be hidden
	NoWallReplies *BaseBoolInt `json:"no_wall_replies,omitempty"`
	// Information whether only owners posts should be shown
	OwnPostsDefault *BaseBoolInt `json:"own_posts_default,omitempty"`
	//  Minimum: 0
	QrPromotion *int `json:"qr_promotion,omitempty"`
	ShowVkAppsIntro *bool `json:"show_vk_apps_intro,omitempty"`
	Subscriptions *AccountSubscriptions `json:"subscriptions,omitempty"`
	WishlistsAePromoBannerShow *BaseBoolInt `json:"wishlists_ae_promo_banner_show,omitempty"`
}

type AccountNameRequest struct {
	// First name in request
	FirstName *string `json:"first_name,omitempty"`
	// Request ID needed to cancel the request
	Id *int `json:"id,omitempty"`
	// Text to display to user
	Lang *string `json:"lang,omitempty"`
	// Last name in request
	LastName *string `json:"last_name,omitempty"`
	// href for link in lang field
	LinkHref *string `json:"link_href,omitempty"`
	// label to display for link in lang field
	LinkLabel *string `json:"link_label,omitempty"`
	Status *AccountNameRequestStatus `json:"status,omitempty"`
}

// AccountNameRequestStatus Request status
type AccountNameRequestStatus string

const (
	AccountNameRequestStatusSuccess AccountNameRequestStatus = "success"
	AccountNameRequestStatusProcessing AccountNameRequestStatus = "processing"
	AccountNameRequestStatusDeclined AccountNameRequestStatus = "declined"
	AccountNameRequestStatusWasAccepted AccountNameRequestStatus = "was_accepted"
	AccountNameRequestStatusWasDeclined AccountNameRequestStatus = "was_declined"
	AccountNameRequestStatusDeclinedWithLink AccountNameRequestStatus = "declined_with_link"
	AccountNameRequestStatusResponse AccountNameRequestStatus = "response"
	AccountNameRequestStatusResponseWithLink AccountNameRequestStatus = "response_with_link"
)

type AccountOfferLinkType string

const (
	AccountOfferLinkTypeProfile AccountOfferLinkType = "profile"
	AccountOfferLinkTypeGroup AccountOfferLinkType = "group"
	AccountOfferLinkTypeApp AccountOfferLinkType = "app"
)

type AccountOffer struct {
	// Currency amount
	CurrencyAmount *float64 `json:"currency_amount,omitempty"`
	// Offer description
	Description *string `json:"description,omitempty"`
	// Offer ID
	Id *int `json:"id,omitempty"`
	// URL of the preview image
	//  Format: uri
	Img *string `json:"img,omitempty"`
	// Instruction how to process the offer
	Instruction *string `json:"instruction,omitempty"`
	// Instruction how to process the offer (HTML format)
	InstructionHtml *string `json:"instruction_html,omitempty"`
	// Link id
	LinkId *int `json:"link_id,omitempty"`
	// Link type
	LinkType *AccountOfferLinkType`json:"link_type,omitempty"`
	// Offer price
	Price *int `json:"price,omitempty"`
	// Offer short description
	ShortDescription *string `json:"short_description,omitempty"`
	// Offer tag
	Tag *string `json:"tag,omitempty"`
	// Offer title
	Title *string `json:"title,omitempty"`
}

type AccountPushConversations struct {
	// Items count
	//  Minimum: 0
	Count *int `json:"count,omitempty"`
	Items *[]AccountPushConversationsItem `json:"items,omitempty"`
}

type AccountPushConversationsItem struct {
	// Information whether the mass mentions (like '@all', '@online') are disabled. Can be affected by 'disabled_mentions'
	DisabledMassMentions *BaseBoolInt `json:"disabled_mass_mentions,omitempty"`
	// Information whether the mentions are disabled
	DisabledMentions *BaseBoolInt `json:"disabled_mentions,omitempty"`
	// Time until that notifications are disabled in seconds
	DisabledUntil int `json:"disabled_until"`
	// Peer ID
	PeerId int `json:"peer_id"`
	// Information whether the sound are enabled
	Sound BaseBoolInt `json:"sound"`
}

type AccountPushParams struct {
	AppRequest *[]AccountPushParamsOnoff `json:"app_request,omitempty"`
	Birthday *[]AccountPushParamsOnoff `json:"birthday,omitempty"`
	Chat *[]AccountPushParamsMode `json:"chat,omitempty"`
	Comment *[]AccountPushParamsSettings `json:"comment,omitempty"`
	EventSoon *[]AccountPushParamsOnoff `json:"event_soon,omitempty"`
	Friend *[]AccountPushParamsOnoff `json:"friend,omitempty"`
	FriendAccepted *[]AccountPushParamsOnoff `json:"friend_accepted,omitempty"`
	FriendFound *[]AccountPushParamsOnoff `json:"friend_found,omitempty"`
	GroupAccepted *[]AccountPushParamsOnoff `json:"group_accepted,omitempty"`
	GroupInvite *[]AccountPushParamsOnoff `json:"group_invite,omitempty"`
	Like *[]AccountPushParamsSettings `json:"like,omitempty"`
	Mention *[]AccountPushParamsSettings `json:"mention,omitempty"`
	Msg *[]AccountPushParamsMode `json:"msg,omitempty"`
	NewPost *[]AccountPushParamsOnoff `json:"new_post,omitempty"`
	Reply *[]AccountPushParamsOnoff `json:"reply,omitempty"`
	Repost *[]AccountPushParamsSettings `json:"repost,omitempty"`
	SdkOpen *[]AccountPushParamsOnoff `json:"sdk_open,omitempty"`
	WallPost *[]AccountPushParamsOnoff `json:"wall_post,omitempty"`
	WallPublish *[]AccountPushParamsOnoff `json:"wall_publish,omitempty"`
}

// AccountPushParamsMode Settings parameters
type AccountPushParamsMode string

const (
	AccountPushParamsModeOn AccountPushParamsMode = "on"
	AccountPushParamsModeOff AccountPushParamsMode = "off"
	AccountPushParamsModeNoSound AccountPushParamsMode = "no_sound"
	AccountPushParamsModeNoText AccountPushParamsMode = "no_text"
)

// AccountPushParamsOnoff Settings parameters
type AccountPushParamsOnoff string

const (
	AccountPushParamsOnoffOn AccountPushParamsOnoff = "on"
	AccountPushParamsOnoffOff AccountPushParamsOnoff = "off"
)

// AccountPushParamsSettings Settings parameters
type AccountPushParamsSettings string

const (
	AccountPushParamsSettingsOn AccountPushParamsSettings = "on"
	AccountPushParamsSettingsOff AccountPushParamsSettings = "off"
	AccountPushParamsSettingsFrOfFr AccountPushParamsSettings = "fr_of_fr"
)

type AccountPushSettings struct {
	Conversations *AccountPushConversations `json:"conversations,omitempty"`
	// Information whether notifications are disabled
	Disabled *BaseBoolInt `json:"disabled,omitempty"`
	// Time until that notifications are disabled in Unixtime
	DisabledUntil *int `json:"disabled_until,omitempty"`
	Settings *AccountPushParams `json:"settings,omitempty"`
}

type AccountSubscriptions []int

type AccountUserSettings struct {
	UsersUserSettingsXtr
	// flag about service account
	IsServiceAccount *bool `json:"is_service_account,omitempty"`
	// URL of square photo of the user with 200 pixels in width
	//  Format: uri
	Photo200 *string `json:"photo_200,omitempty"`
}

type AccountUserSettingsInterest struct {
	Title string `json:"title"`
	Value string `json:"value"`
}

type AccountUserSettingsInterests struct {
	About *AccountUserSettingsInterest `json:"about,omitempty"`
	Activities *AccountUserSettingsInterest `json:"activities,omitempty"`
	Books *AccountUserSettingsInterest `json:"books,omitempty"`
	Games *AccountUserSettingsInterest `json:"games,omitempty"`
	Interests *AccountUserSettingsInterest `json:"interests,omitempty"`
	Movies *AccountUserSettingsInterest `json:"movies,omitempty"`
	Music *AccountUserSettingsInterest `json:"music,omitempty"`
	Quotes *AccountUserSettingsInterest `json:"quotes,omitempty"`
	Tv *AccountUserSettingsInterest `json:"tv,omitempty"`
}

type AccountChangePasswordResponse struct {
	Account struct {
		// New secret
		Secret *string `json:"secret,omitempty"`
		// New token
		Token string `json:"token"`
	} `json:"account"`
}

type AccountGetActiveOffersResponse struct {
	Account struct {
		// Total number
		Count int `json:"count"`
		Items []AccountOffer `json:"items"`
	} `json:"account"`
}

type AccountGetAppPermissionsResponse struct {
	// Permissions mask
	Response int `json:"response"`
}

type AccountGetBannedResponse struct {
	Account struct {
		// Total number
		Count int `json:"count"`
		Groups *[]GroupsGroup `json:"groups,omitempty"`
		//  Format: int64
		Items []int `json:"items"`
		Profiles *[]UsersUserFull `json:"profiles,omitempty"`
	} `json:"account"`
}

type AccountGetCountersResponse struct {
	Response AccountAccountCounters `json:"response"`
}

type AccountGetInfoResponse struct {
	Response AccountInfo `json:"response"`
}

type AccountGetProfileInfoResponse struct {
	Response AccountUserSettings `json:"response"`
}

type AccountGetPushSettingsResponse struct {
	Response AccountPushSettings `json:"response"`
}

type AccountSaveProfileInfoResponse struct {
	Account struct {
		// 1 if changes has been processed
		Changed BaseBoolInt `json:"changed"`
		NameRequest *AccountNameRequest `json:"name_request,omitempty"`
	} `json:"account"`
}

