// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package models

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

// AdsAccessRole Current user's role
type AdsAccessRole string

const (
	AdsAccessRoleAdmin AdsAccessRole = "admin"
	AdsAccessRoleManager AdsAccessRole = "manager"
	AdsAccessRoleReports AdsAccessRole = "reports"
)

// AdsAccessRolePublic Current user's role
type AdsAccessRolePublic string

const (
	AdsAccessRolePublicManager AdsAccessRolePublic = "manager"
	AdsAccessRolePublicReports AdsAccessRolePublic = "reports"
)

type AdsAccesses struct {
	// Client ID
	ClientId *string `json:"client_id,omitempty"`
	Role *AdsAccessRole `json:"role,omitempty"`
}

type AdsAccount struct {
	AccessRole AdsAccessRole `json:"access_role"`
	// Account ID
	AccountId int `json:"account_id"`
	// Account name
	AccountName string `json:"account_name"`
	// Information whether account is active
	AccountStatus BaseBoolInt `json:"account_status"`
	AccountType AdsAccountType `json:"account_type"`
	// Can user view account budget
	CanViewBudget bool `json:"can_view_budget"`
}

// AdsAccountType Account type
type AdsAccountType string

const (
	AdsAccountTypeGeneral AdsAccountType = "general"
	AdsAccountTypeAgency AdsAccountType = "agency"
)

type AdsAd struct {
	// Ad format
	AdFormat int `json:"ad_format"`
	// Ad platform
	AdPlatform *string `json:"ad_platform,omitempty"`
	// Total limit
	AllLimit int `json:"all_limit"`
	Approved AdsAdApproved `json:"approved"`
	// Max cost of target actions for autobidding, kopecks
	AutobiddingMaxCost *int `json:"autobidding_max_cost,omitempty"`
	// Campaign ID
	CampaignId int `json:"campaign_id"`
	// Category ID
	Category1Id *int `json:"category1_id,omitempty"`
	// Additional category ID
	Category2Id *int `json:"category2_id,omitempty"`
	CostType AdsAdCostType `json:"cost_type"`
	// Cost of an action, kopecks
	Cpa *int `json:"cpa,omitempty"`
	// Cost of a click, kopecks
	Cpc *int `json:"cpc,omitempty"`
	// Cost of 1000 impressions, kopecks
	Cpm *int `json:"cpm,omitempty"`
	// Information whether disclaimer is enabled
	DisclaimerMedical *BaseBoolInt `json:"disclaimer_medical,omitempty"`
	// Information whether disclaimer is enabled
	DisclaimerSpecialist *BaseBoolInt `json:"disclaimer_specialist,omitempty"`
	// Information whether disclaimer is enabled
	DisclaimerSupplements *BaseBoolInt `json:"disclaimer_supplements,omitempty"`
	// Ad ID
	Id int `json:"id"`
	// Impressions limit
	ImpressionsLimit *int `json:"impressions_limit,omitempty"`
	// Information whether impressions are limited
	ImpressionsLimited *BaseBoolInt `json:"impressions_limited,omitempty"`
	// Ad title
	Name string `json:"name"`
	// Cost of 1000 impressions optimized, kopecks
	Ocpm *int `json:"ocpm,omitempty"`
	Status AdsAdStatus `json:"status"`
	// Information whether the ad is a video
	Video *BaseBoolInt `json:"video,omitempty"`
}

// AdsAdApproved Review status
type AdsAdApproved int

const (
	AdsAdApprovedNotModerated AdsAdApproved = 0
	AdsAdApprovedPendingModeration AdsAdApproved = 1
	AdsAdApprovedApproved AdsAdApproved = 2
	AdsAdApprovedRejected AdsAdApproved = 3
)

// AdsAdCostType Cost type
type AdsAdCostType int

const (
	AdsAdCostTypePerClicks AdsAdCostType = 0
	AdsAdCostTypePerImpressions AdsAdCostType = 1
	AdsAdCostTypePerActions AdsAdCostType = 2
	AdsAdCostTypePerImpressionsOptimized AdsAdCostType = 3
)

type AdsAdLayout struct {
	// Ad format
	AdFormat int `json:"ad_format"`
	// Campaign ID
	CampaignId int `json:"campaign_id"`
	CostType AdsAdCostType `json:"cost_type"`
	// Ad description
	Description string `json:"description"`
	// Ad ID
	Id string `json:"id"`
	// Image URL
	//  Format: uri
	ImageSrc string `json:"image_src"`
	// URL of the preview image in double size
	//  Format: uri
	ImageSrc2x *string `json:"image_src_2x,omitempty"`
	// Domain of advertised object
	LinkDomain *string `json:"link_domain,omitempty"`
	// URL of advertised object
	//  Format: uri
	LinkUrl string `json:"link_url"`
	// link to preview an ad as it is shown on the website
	PreviewLink *string `json:"preview_link,omitempty"`
	// Ad title
	Title string `json:"title"`
	// Information whether the ad is a video
	Video *BaseBoolInt `json:"video,omitempty"`
}

// AdsAdStatus Ad atatus
type AdsAdStatus int

const (
	AdsAdStatusStopped AdsAdStatus = 0
	AdsAdStatusStarted AdsAdStatus = 1
	AdsAdStatusDeleted AdsAdStatus = 2
)

type AdsCampaign struct {
	// Amount of active ads in campaign
	AdsCount *int `json:"ads_count,omitempty"`
	// Campaign's total limit, rubles
	AllLimit string `json:"all_limit"`
	// Campaign create time, as Unixtime
	CreateTime *int `json:"create_time,omitempty"`
	// Campaign's day limit, rubles
	DayLimit string `json:"day_limit"`
	// Campaign goal type
	GoalType *int `json:"goal_type,omitempty"`
	// Campaign ID
	Id int `json:"id"`
	// Shows if Campaign Budget Optimization is on
	IsCboEnabled *bool `json:"is_cbo_enabled,omitempty"`
	// Campaign title
	Name string `json:"name"`
	// Campaign start time, as Unixtime
	StartTime int `json:"start_time"`
	Status AdsCampaignStatus `json:"status"`
	// Campaign stop time, as Unixtime
	StopTime int `json:"stop_time"`
	Type AdsCampaignType `json:"type"`
	// Campaign update time, as Unixtime
	UpdateTime *int `json:"update_time,omitempty"`
	// Campaign user goal type
	UserGoalType *int `json:"user_goal_type,omitempty"`
	// Limit of views per user per campaign
	ViewsLimit *int `json:"views_limit,omitempty"`
}

// AdsCampaignStatus Campaign status
type AdsCampaignStatus int

const (
	AdsCampaignStatusStopped AdsCampaignStatus = 0
	AdsCampaignStatusStarted AdsCampaignStatus = 1
	AdsCampaignStatusDeleted AdsCampaignStatus = 2
)

// AdsCampaignType Campaign type
type AdsCampaignType string

const (
	AdsCampaignTypeNormal AdsCampaignType = "normal"
	AdsCampaignTypeVkAppsManaged AdsCampaignType = "vk_apps_managed"
	AdsCampaignTypeMobileApps AdsCampaignType = "mobile_apps"
	AdsCampaignTypePromotedPosts AdsCampaignType = "promoted_posts"
	AdsCampaignTypeAdaptiveAds AdsCampaignType = "adaptive_ads"
	AdsCampaignTypeStories AdsCampaignType = "stories"
)

type AdsCategory struct {
	// Category ID
	//  Minimum: 1
	Id int `json:"id"`
	// Category name
	Name string `json:"name"`
	Subcategories *[]AdsCategory `json:"subcategories,omitempty"`
}

type AdsClient struct {
	// Client's total limit, rubles
	AllLimit string `json:"all_limit"`
	// Client's day limit, rubles
	DayLimit string `json:"day_limit"`
	// Client ID
	Id int `json:"id"`
	// Client name
	Name string `json:"name"`
}

type AdsCreateAdStatus struct {
	// Error code
	//  Minimum: 0
	ErrorCode *int `json:"error_code,omitempty"`
	// Error description
	ErrorDesc *string `json:"error_desc,omitempty"`
	// Ad ID
	//  Minimum: 0
	Id int `json:"id"`
	// Stealth Post ID
	//  Minimum: 0
	PostId *int `json:"post_id,omitempty"`
}

type AdsCreateCampaignStatus struct {
	// Error code
	//  Minimum: 0
	ErrorCode *int `json:"error_code,omitempty"`
	// Error description
	ErrorDesc *string `json:"error_desc,omitempty"`
	// Campaign ID
	//  Minimum: 0
	Id int `json:"id"`
}

type AdsCriteria struct {
	// Age from
	//  Minimum: 0
	AgeFrom *int `json:"age_from,omitempty"`
	// Age to
	//  Minimum: 0
	AgeTo *int `json:"age_to,omitempty"`
	// Apps IDs
	Apps *string `json:"apps,omitempty"`
	// Apps IDs to except
	AppsNot *string `json:"apps_not,omitempty"`
	// Days to birthday
	Birthday *int `json:"birthday,omitempty"`
	// Cities IDs
	Cities *string `json:"cities,omitempty"`
	// Cities IDs to except
	CitiesNot *string `json:"cities_not,omitempty"`
	// Country ID
	//  Minimum: 0
	Country *int `json:"country,omitempty"`
	// Districts IDs
	Districts *string `json:"districts,omitempty"`
	// Communities IDs
	Groups *string `json:"groups,omitempty"`
	// Interests categories IDs
	InterestCategories *string `json:"interest_categories,omitempty"`
	// Interests
	Interests *string `json:"interests,omitempty"`
	// Information whether the user has proceeded VK payments before
	Paying *BaseBoolInt `json:"paying,omitempty"`
	// Positions IDs
	Positions *string `json:"positions,omitempty"`
	// Religions IDs
	Religions *string `json:"religions,omitempty"`
	// Retargeting groups IDs
	RetargetingGroups *string `json:"retargeting_groups,omitempty"`
	// Retargeting groups IDs to except
	RetargetingGroupsNot *string `json:"retargeting_groups_not,omitempty"`
	// School graduation year from
	SchoolFrom *int `json:"school_from,omitempty"`
	// School graduation year to
	SchoolTo *int `json:"school_to,omitempty"`
	// Schools IDs
	Schools *string `json:"schools,omitempty"`
	Sex *AdsCriteriaSex `json:"sex,omitempty"`
	// Stations IDs
	Stations *string `json:"stations,omitempty"`
	// Relationship statuses
	Statuses *string `json:"statuses,omitempty"`
	// Streets IDs
	Streets *string `json:"streets,omitempty"`
	// Travellers only
	Travellers *BasePropertyExists `json:"travellers,omitempty"`
	// University graduation year from
	UniFrom *int `json:"uni_from,omitempty"`
	// University graduation year to
	UniTo *int `json:"uni_to,omitempty"`
	// Browsers
	UserBrowsers *string `json:"user_browsers,omitempty"`
	// Devices
	UserDevices *string `json:"user_devices,omitempty"`
	// Operating systems
	UserOs *string `json:"user_os,omitempty"`
}

// AdsCriteriaSex Sex
type AdsCriteriaSex int

const (
	AdsCriteriaSexAny AdsCriteriaSex = 0
	AdsCriteriaSexMale AdsCriteriaSex = 1
	AdsCriteriaSexFemale AdsCriteriaSex = 2
)

type AdsDemoStats struct {
	// Object ID
	Id *int `json:"id,omitempty"`
	Stats *AdsDemostatsFormat `json:"stats,omitempty"`
	Type *AdsObjectType `json:"type,omitempty"`
}

type AdsDemostatsFormat struct {
	Age *[]AdsStatsAge `json:"age,omitempty"`
	Cities *[]AdsStatsCities `json:"cities,omitempty"`
	// Day as YYYY-MM-DD
	Day *string `json:"day,omitempty"`
	// Month as YYYY-MM
	Month *string `json:"month,omitempty"`
	// 1 if period=overall
	Overall *int `json:"overall,omitempty"`
	Sex *[]AdsStatsSex `json:"sex,omitempty"`
	SexAge *[]AdsStatsSexAge `json:"sex_age,omitempty"`
}

type AdsFloodStats struct {
	// Requests left
	Left int `json:"left"`
	// Time to refresh in seconds
	Refresh int `json:"refresh"`
}

type AdsLinkStatus struct {
	// Reject reason
	Description string `json:"description"`
	// URL
	//  Format: uri
	RedirectUrl string `json:"redirect_url"`
	// Link status
	Status string `json:"status"`
}

type AdsLookalikeRequestSourceType string

const (
	AdsLookalikeRequestSourceTypeRetargetingGroup AdsLookalikeRequestSourceType = "retargeting_group"
)

type AdsLookalikeRequestStatus string

const (
	AdsLookalikeRequestStatusSearchInProgress AdsLookalikeRequestStatus = "search_in_progress"
	AdsLookalikeRequestStatusSearchFailed AdsLookalikeRequestStatus = "search_failed"
	AdsLookalikeRequestStatusSearchDone AdsLookalikeRequestStatus = "search_done"
	AdsLookalikeRequestStatusSaveInProgress AdsLookalikeRequestStatus = "save_in_progress"
	AdsLookalikeRequestStatusSaveFailed AdsLookalikeRequestStatus = "save_failed"
	AdsLookalikeRequestStatusSaveDone AdsLookalikeRequestStatus = "save_done"
)

type AdsLookalikeRequest struct {
	// Lookalike request seed audience size
	//  Minimum: 0
	AudienceCount *int `json:"audience_count,omitempty"`
	// Lookalike request create time, as Unixtime
	CreateTime int `json:"create_time"`
	// Lookalike request ID
	//  Minimum: 1
	Id int `json:"id"`
	SaveAudienceLevels *[]AdsLookalikeRequestSaveAudienceLevel `json:"save_audience_levels,omitempty"`
	// Time by which lookalike request would be deleted, as Unixtime
	ScheduledDeleteTime *int `json:"scheduled_delete_time,omitempty"`
	// Lookalike request seed name (retargeting group name)
	SourceName *string `json:"source_name,omitempty"`
	// Retargeting group id, which was used as lookalike seed
	//  Minimum: 1
	SourceRetargetingGroupId *int `json:"source_retargeting_group_id,omitempty"`
	// Lookalike request source type
	SourceType AdsLookalikeRequestSourceType`json:"source_type"`
	// Lookalike request status
	Status AdsLookalikeRequestStatus`json:"status"`
	// Lookalike request update time, as Unixtime
	UpdateTime int `json:"update_time"`
}

type AdsLookalikeRequestSaveAudienceLevel struct {
	// Saved audience audience size for according level
	//  Minimum: 0
	AudienceCount *int `json:"audience_count,omitempty"`
	// Save audience level id, which is used in save audience queries
	//  Minimum: 1
	Level *int `json:"level,omitempty"`
}

type AdsMusician struct {
	// Music artist photo
	Avatar *string `json:"avatar,omitempty"`
	// Targeting music artist ID
	//  Minimum: 1
	Id int `json:"id"`
	// Music artist name
	Name string `json:"name"`
}

// AdsObjectType Object type
type AdsObjectType string

const (
	AdsObjectTypeAd AdsObjectType = "ad"
	AdsObjectTypeCampaign AdsObjectType = "campaign"
	AdsObjectTypeClient AdsObjectType = "client"
	AdsObjectTypeOffice AdsObjectType = "office"
)

type AdsParagraphs struct {
	// Rules paragraph
	Paragraph *string `json:"paragraph,omitempty"`
}

type AdsPromotedPostReach struct {
	// Hides amount
	Hide int `json:"hide"`
	// Object ID from 'ids' parameter
	Id int `json:"id"`
	// Community joins
	JoinGroup int `json:"join_group"`
	// Link clicks
	Links int `json:"links"`
	// Subscribers reach
	ReachSubscribers int `json:"reach_subscribers"`
	// Total reach
	ReachTotal int `json:"reach_total"`
	// Reports amount
	Report int `json:"report"`
	// Community clicks
	ToGroup int `json:"to_group"`
	// 'Unsubscribe' events amount
	Unsubscribe int `json:"unsubscribe"`
	// Video views for 100 percent
	VideoViews100p *int `json:"video_views_100p,omitempty"`
	// Video views for 25 percent
	VideoViews25p *int `json:"video_views_25p,omitempty"`
	// Video views for 3 seconds
	VideoViews3s *int `json:"video_views_3s,omitempty"`
	// Video views for 50 percent
	VideoViews50p *int `json:"video_views_50p,omitempty"`
	// Video views for 75 percent
	VideoViews75p *int `json:"video_views_75p,omitempty"`
	// Video starts
	VideoViewsStart *int `json:"video_views_start,omitempty"`
}

type AdsRejectReason struct {
	// Comment text
	Comment *string `json:"comment,omitempty"`
	Rules *[]AdsRules `json:"rules,omitempty"`
}

type AdsRules struct {
	Paragraphs *[]AdsParagraphs `json:"paragraphs,omitempty"`
	// Comment
	Title *string `json:"title,omitempty"`
}

type AdsStats struct {
	// Object ID
	Id *int `json:"id,omitempty"`
	Stats *AdsStatsFormat `json:"stats,omitempty"`
	Type *AdsObjectType `json:"type,omitempty"`
	ViewsTimes *AdsStatsViewsTimes `json:"views_times,omitempty"`
}

type AdsStatsAge struct {
	// Clicks rate
	ClicksRate *float64 `json:"clicks_rate,omitempty"`
	// Impressions rate
	ImpressionsRate *float64 `json:"impressions_rate,omitempty"`
	// Age interval
	Value *string `json:"value,omitempty"`
}

type AdsStatsCities struct {
	// Clicks rate
	ClicksRate *float64 `json:"clicks_rate,omitempty"`
	// Impressions rate
	ImpressionsRate *float64 `json:"impressions_rate,omitempty"`
	// City name
	Name *string `json:"name,omitempty"`
	// City ID
	Value *int `json:"value,omitempty"`
}

type AdsStatsFormat struct {
	// Clicks number
	Clicks *int `json:"clicks,omitempty"`
	// Day as YYYY-MM-DD
	Day *string `json:"day,omitempty"`
	// Impressions number
	Impressions *int `json:"impressions,omitempty"`
	// Events number
	JoinRate *int `json:"join_rate,omitempty"`
	// External clicks number
	LinkExternalClicks *int `json:"link_external_clicks,omitempty"`
	// Month as YYYY-MM
	Month *string `json:"month,omitempty"`
	// 1 if period=overall
	Overall *int `json:"overall,omitempty"`
	// Reach 
	Reach *int `json:"reach,omitempty"`
	// Spent funds
	Spent *int `json:"spent,omitempty"`
	// Clickthoughs to the advertised site
	VideoClicksSite *int `json:"video_clicks_site,omitempty"`
	// Video views number
	VideoViews *int `json:"video_views,omitempty"`
	// Video views (full video)
	VideoViewsFull *int `json:"video_views_full,omitempty"`
	// Video views (half of video)
	VideoViewsHalf *int `json:"video_views_half,omitempty"`
}

type AdsStatsSex struct {
	// Clicks rate
	ClicksRate *float64 `json:"clicks_rate,omitempty"`
	// Impressions rate
	ImpressionsRate *float64 `json:"impressions_rate,omitempty"`
	Value *AdsStatsSexValue `json:"value,omitempty"`
}

type AdsStatsSexAge struct {
	// Clicks rate
	ClicksRate *float64 `json:"clicks_rate,omitempty"`
	// Impressions rate
	ImpressionsRate *float64 `json:"impressions_rate,omitempty"`
	// Sex and age interval
	Value *string `json:"value,omitempty"`
}

// AdsStatsSexValue Sex
type AdsStatsSexValue string

const (
	AdsStatsSexValueFemale AdsStatsSexValue = "f"
	AdsStatsSexValueMale AdsStatsSexValue = "m"
)

type AdsStatsViewsTimes struct {
	ViewsAdsTimes1 *int `json:"views_ads_times_1,omitempty"`
	ViewsAdsTimes10 *int `json:"views_ads_times_10,omitempty"`
	ViewsAdsTimes11Plus *int `json:"views_ads_times_11_plus,omitempty"`
	ViewsAdsTimes2 *int `json:"views_ads_times_2,omitempty"`
	ViewsAdsTimes3 *int `json:"views_ads_times_3,omitempty"`
	ViewsAdsTimes4 *int `json:"views_ads_times_4,omitempty"`
	ViewsAdsTimes5 *string `json:"views_ads_times_5,omitempty"`
	ViewsAdsTimes6 *int `json:"views_ads_times_6,omitempty"`
	ViewsAdsTimes7 *int `json:"views_ads_times_7,omitempty"`
	ViewsAdsTimes8 *int `json:"views_ads_times_8,omitempty"`
	ViewsAdsTimes9 *int `json:"views_ads_times_9,omitempty"`
}

type AdsTargSettings struct {
	// Campaign ID
	CampaignId *int `json:"campaign_id,omitempty"`
	// Ad ID
	Id *int `json:"id,omitempty"`
	AdsCriteria
}

type AdsTargStats struct {
	// Audience
	AudienceCount int `json:"audience_count"`
	// Recommended CPC value for 50% reach (old format)
	RecommendedCpc *float64 `json:"recommended_cpc,omitempty"`
	// Recommended CPC value for 50% reach
	RecommendedCpc50 *float64 `json:"recommended_cpc_50,omitempty"`
	// Recommended CPC value for 70% reach
	RecommendedCpc70 *float64 `json:"recommended_cpc_70,omitempty"`
	// Recommended CPC value for 90% reach
	RecommendedCpc90 *float64 `json:"recommended_cpc_90,omitempty"`
	// Recommended CPM value for 50% reach (old format)
	RecommendedCpm *float64 `json:"recommended_cpm,omitempty"`
	// Recommended CPM value for 50% reach
	RecommendedCpm50 *float64 `json:"recommended_cpm_50,omitempty"`
	// Recommended CPM value for 70% reach
	RecommendedCpm70 *float64 `json:"recommended_cpm_70,omitempty"`
	// Recommended CPM value for 90% reach
	RecommendedCpm90 *float64 `json:"recommended_cpm_90,omitempty"`
}

type AdsTargSuggestions struct {
	// Object ID
	Id *int `json:"id,omitempty"`
	// Object name
	Name *string `json:"name,omitempty"`
}

type AdsTargSuggestionsCities struct {
	// Object ID
	Id *int `json:"id,omitempty"`
	// Object name
	Name *string `json:"name,omitempty"`
	// Parent object
	Parent *string `json:"parent,omitempty"`
}

type AdsTargSuggestionsRegions struct {
	// Object ID
	Id *int `json:"id,omitempty"`
	// Object name
	Name *string `json:"name,omitempty"`
	// Object type
	Type *string `json:"type,omitempty"`
}

type AdsTargSuggestionsSchools struct {
	// Full school title
	Desc *string `json:"desc,omitempty"`
	// School ID
	Id *int `json:"id,omitempty"`
	// School title
	Name *string `json:"name,omitempty"`
	// City name
	Parent *string `json:"parent,omitempty"`
	Type *AdsTargSuggestionsSchoolsType `json:"type,omitempty"`
}

// AdsTargSuggestionsSchoolsType School type
type AdsTargSuggestionsSchoolsType string

const (
	AdsTargSuggestionsSchoolsTypeSchool AdsTargSuggestionsSchoolsType = "school"
	AdsTargSuggestionsSchoolsTypeUniversity AdsTargSuggestionsSchoolsType = "university"
	AdsTargSuggestionsSchoolsTypeFaculty AdsTargSuggestionsSchoolsType = "faculty"
	AdsTargSuggestionsSchoolsTypeChair AdsTargSuggestionsSchoolsType = "chair"
)

type AdsTargetGroup struct {
	// Audience
	AudienceCount *int `json:"audience_count,omitempty"`
	// Site domain
	Domain *string `json:"domain,omitempty"`
	// Group ID
	Id *int `json:"id,omitempty"`
	// Number of days for user to be in group
	Lifetime *int `json:"lifetime,omitempty"`
	// Group name
	Name *string `json:"name,omitempty"`
	// Pixel code
	Pixel *string `json:"pixel,omitempty"`
}

type AdsUpdateOfficeUsersResult struct {
	Error *BaseError `json:"error,omitempty"`
	//  Default: true
	IsSuccess bool `json:"is_success"`
	//  Format: int64
	//  Minimum: 0
	UserId int `json:"user_id"`
}

type AdsUserSpecification struct {
	//  Minimum: 0
	ClientIds *[]int `json:"client_ids,omitempty"`
	//  Default: false
	GrantAccessToAllClients *bool `json:"grant_access_to_all_clients,omitempty"`
	Role AdsAccessRolePublic `json:"role"`
	//  Format: int64
	//  Minimum: 0
	UserId int `json:"user_id"`
	ViewBudget *bool `json:"view_budget,omitempty"`
}

type AdsUserSpecificationCutted struct {
	//  Minimum: 0
	ClientId *int `json:"client_id,omitempty"`
	Role AdsAccessRolePublic `json:"role"`
	//  Format: int64
	//  Minimum: 0
	UserId int `json:"user_id"`
	ViewBudget *bool `json:"view_budget,omitempty"`
}

type AdsUsers struct {
	Accesses []AdsAccesses `json:"accesses"`
	// User ID
	//  Format: int64
	UserId int `json:"user_id"`
}

type AdsAddOfficeUsersResponse struct {
	// true if success
	Response bool `json:"response"`
}

type AdsCheckLinkResponse struct {
	Response AdsLinkStatus `json:"response"`
}

type AdsCreateAdsResponse struct {
	Response []AdsCreateAdStatus `json:"response"`
}

type AdsCreateCampaignsResponse struct {
	Response []AdsCreateCampaignStatus `json:"response"`
}

type AdsCreateClientsResponse struct {
	Response []int `json:"response"`
}

type AdsCreateTargetGroupResponse struct {
	Ads struct {
		// Group ID
		Id *int `json:"id,omitempty"`
		// Pixel code
		Pixel *string `json:"pixel,omitempty"`
	} `json:"ads"`
}

type AdsDeleteAdsResponse struct {
	Response []int `json:"response"`
}

type AdsDeleteCampaignsResponse struct {
	Response []int `json:"response"`
}

type AdsDeleteClientsResponse struct {
	Response []int `json:"response"`
}

type AdsGetAccountsResponse struct {
	Response []AdsAccount `json:"response"`
}

type AdsGetAdsLayoutResponse struct {
	Response []AdsAdLayout `json:"response"`
}

type AdsGetAdsTargetingResponse struct {
	Response []AdsTargSettings `json:"response"`
}

type AdsGetAdsResponse struct {
	Response []AdsAd `json:"response"`
}

type AdsGetBudgetResponse struct {
	// Budget
	Response int `json:"response"`
}

type AdsGetCampaignsResponse struct {
	Response []AdsCampaign `json:"response"`
}

type AdsGetCategoriesResponse struct {
	Ads struct {
		// Old categories
		V1 *[]AdsCategory `json:"v1,omitempty"`
		// Actual categories
		V2 *[]AdsCategory `json:"v2,omitempty"`
	} `json:"ads"`
}

type AdsGetClientsResponse struct {
	Response []AdsClient `json:"response"`
}

type AdsGetDemographicsResponse struct {
	Response []AdsDemoStats `json:"response"`
}

type AdsGetFloodStatsResponse struct {
	Response AdsFloodStats `json:"response"`
}

type AdsGetLookalikeRequestsResponse struct {
	Ads struct {
		// Total count of found lookalike requests
		//  Minimum: 0
		Count int `json:"count"`
		// found lookalike requests
		Items []AdsLookalikeRequest `json:"items"`
	} `json:"ads"`
}

type AdsGetMusiciansResponse struct {
	Ads struct {
		// Musicians
		Items []AdsMusician `json:"items"`
	} `json:"ads"`
}

type AdsGetOfficeUsersResponse struct {
	Response []AdsUsers `json:"response"`
}

type AdsGetPostsReachResponse struct {
	Response []AdsPromotedPostReach `json:"response"`
}

type AdsGetRejectionReasonResponse struct {
	Response AdsRejectReason `json:"response"`
}

type AdsGetStatisticsResponse struct {
	Response []AdsStats `json:"response"`
}

type AdsGetSuggestionsCitiesResponse struct {
	Response []AdsTargSuggestionsCities `json:"response"`
}

type AdsGetSuggestionsRegionsResponse struct {
	Response []AdsTargSuggestionsRegions `json:"response"`
}

type AdsGetSuggestionsResponse struct {
	Response []AdsTargSuggestions `json:"response"`
}

type AdsGetSuggestionsSchoolsResponse struct {
	Response []AdsTargSuggestionsSchools `json:"response"`
}

type AdsGetTargetGroupsResponse struct {
	Response []AdsTargetGroup `json:"response"`
}

type AdsGetTargetingStatsResponse struct {
	Response AdsTargStats `json:"response"`
}

type AdsGetUploadURLResponse struct {
	// Photo upload URL
	Response string `json:"response"`
}

type AdsGetVideoUploadURLResponse struct {
	// Video upload URL
	Response string `json:"response"`
}

type AdsImportTargetContactsResponse struct {
	// Imported contacts number
	Response int `json:"response"`
}

type AdsRemoveOfficeUsersResponse struct {
	// true if success
	Response bool `json:"response"`
}

type AdsUpdateAdsResponse struct {
	Response []int `json:"response"`
}

type AdsUpdateCampaignsResponse struct {
	// Campaign ID
	Response int `json:"response"`
}

type AdsUpdateClientsResponse struct {
	// Client ID
	Response int `json:"response"`
}

type AdsUpdateOfficeUsersResponse struct {
	Response []AdsUpdateOfficeUsersResult `json:"response"`
}

