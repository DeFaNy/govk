// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package models

import (
	"encoding/json"
)

// suppress unused package warning
var _ *json.RawMessage

type PagesPrivacySettings int

const (
	PagesPrivacySettingsCommunityManagersOnly PagesPrivacySettings = 0
	PagesPrivacySettingsCommunityMembersOnly PagesPrivacySettings = 1
	PagesPrivacySettingsEveryone PagesPrivacySettings = 2
)

type PagesWikipage struct {
	// Page creator ID
	CreatorId *int `json:"creator_id,omitempty"`
	// Page creator name
	CreatorName *string `json:"creator_name,omitempty"`
	// Last editor ID
	EditorId *int `json:"editor_id,omitempty"`
	// Last editor name
	EditorName *string `json:"editor_name,omitempty"`
	// Community ID
	//  Format: int64
	//  Minimum: 1
	GroupId int `json:"group_id"`
	// Page ID
	//  Minimum: 1
	Id int `json:"id"`
	// Page title
	Title string `json:"title"`
	// Views number
	Views int `json:"views"`
	// Edit settings of the page
	WhoCanEdit PagesPrivacySettings `json:"who_can_edit"`
	// View settings of the page
	WhoCanView PagesPrivacySettings `json:"who_can_view"`
}

type PagesWikipageFull struct {
	// Date when the page has been created in Unixtime
	Created int `json:"created"`
	// Page creator ID
	CreatorId *int `json:"creator_id,omitempty"`
	// Information whether current user can edit the page
	CurrentUserCanEdit *BaseBoolInt `json:"current_user_can_edit,omitempty"`
	// Information whether current user can edit the page access settings
	CurrentUserCanEditAccess *BaseBoolInt `json:"current_user_can_edit_access,omitempty"`
	// Date when the page has been edited in Unixtime
	Edited int `json:"edited"`
	// Last editor ID
	EditorId *int `json:"editor_id,omitempty"`
	// Community ID
	//  Format: int64
	//  Minimum: 1
	GroupId int `json:"group_id"`
	// Page content, HTML
	Html *string `json:"html,omitempty"`
	// Page ID
	//  Minimum: 1
	Id int `json:"id"`
	// Owner ID
	//  Format: int64
	OwnerId *int `json:"owner_id,omitempty"`
	// Parent
	Parent *string `json:"parent,omitempty"`
	// Parent2
	Parent2 *string `json:"parent2,omitempty"`
	// Page content, wiki
	Source *string `json:"source,omitempty"`
	// Page title
	Title string `json:"title"`
	// URL
	//  Format: uri
	Url *string `json:"url,omitempty"`
	// URL of the page preview
	//  Format: uri
	ViewUrl string `json:"view_url"`
	// Views number
	Views int `json:"views"`
	// Edit settings of the page
	WhoCanEdit PagesPrivacySettings `json:"who_can_edit"`
	// View settings of the page
	WhoCanView PagesPrivacySettings `json:"who_can_view"`
}

type PagesWikipageHistory struct {
	// Date when the page has been edited in Unixtime
	//  Minimum: 0
	Date int `json:"date"`
	// Last editor ID
	EditorId int `json:"editor_id"`
	// Last editor name
	EditorName string `json:"editor_name"`
	// Version ID
	//  Minimum: 0
	Id int `json:"id"`
	// Page size in bytes
	//  Minimum: 0
	Length int `json:"length"`
}

type PagesGetHistoryResponse struct {
	Response []PagesWikipageHistory `json:"response"`
}

type PagesGetTitlesResponse struct {
	Response []PagesWikipage `json:"response"`
}

type PagesGetVersionResponse struct {
	Response PagesWikipageFull `json:"response"`
}

type PagesGetResponse struct {
	Response PagesWikipageFull `json:"response"`
}

type PagesParseWikiResponse struct {
	// HTML source
	Response string `json:"response"`
}

type PagesSaveAccessResponse struct {
	// Page ID
	Response int `json:"response"`
}

type PagesSaveResponse struct {
	// Page ID
	Response int `json:"response"`
}

