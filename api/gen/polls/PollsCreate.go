// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PollsCreate Creates polls that can be attached to the users' or communities' posts.
type PollsCreateRequest api.Params

func NewPollsCreateRequest() PollsCreateRequest {
	params := make(PollsCreateRequest, 11)
	return params
}

func (p PollsCreateRequest) WithQuestion(p_question string) PollsCreateRequest{
	p["question"] = p_question
	return p
}

func (p PollsCreateRequest) WithIsAnonymous(p_is_anonymous bool) PollsCreateRequest{
	p["is_anonymous"] = p_is_anonymous
	return p
}

func (p PollsCreateRequest) WithIsMultiple(p_is_multiple bool) PollsCreateRequest{
	p["is_multiple"] = p_is_multiple
	return p
}

func (p PollsCreateRequest) WithEndDate(p_end_date int) PollsCreateRequest{
	p["end_date"] = p_end_date
	return p
}

func (p PollsCreateRequest) WithOwnerId(p_owner_id int) PollsCreateRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PollsCreateRequest) WithAppId(p_app_id int) PollsCreateRequest{
	p["app_id"] = p_app_id
	return p
}

func (p PollsCreateRequest) WithAddAnswers(p_add_answers string) PollsCreateRequest{
	p["add_answers"] = p_add_answers
	return p
}

func (p PollsCreateRequest) WithPhotoId(p_photo_id int) PollsCreateRequest{
	p["photo_id"] = p_photo_id
	return p
}

func (p PollsCreateRequest) WithBackgroundId(p_background_id int) PollsCreateRequest{
	p["background_id"] = p_background_id
	return p
}

func (p PollsCreateRequest) WithDisableUnvote(p_disable_unvote bool) PollsCreateRequest{
	p["disable_unvote"] = p_disable_unvote
	return p
}

func (p PollsCreateRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/polls.create
func (p *Polls) PollsCreate(params ...api.MethodParams) (resp models.PollsCreateResponse, err error) {
	req := api.NewRequest[models.PollsCreateResponse](p.api)

	res, err := req.Execute("polls.create", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

