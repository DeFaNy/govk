// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PollsDeleteVote Deletes the current user's vote from the selected answer in the poll.
type PollsDeleteVoteRequest api.Params

func NewPollsDeleteVoteRequest() PollsDeleteVoteRequest {
	params := make(PollsDeleteVoteRequest, 5)
	return params
}

func (p PollsDeleteVoteRequest) WithOwnerId(p_owner_id int) PollsDeleteVoteRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PollsDeleteVoteRequest) WithPollId(p_poll_id int) PollsDeleteVoteRequest{
	p["poll_id"] = p_poll_id
	return p
}

func (p PollsDeleteVoteRequest) WithAnswerId(p_answer_id int) PollsDeleteVoteRequest{
	p["answer_id"] = p_answer_id
	return p
}

func (p PollsDeleteVoteRequest) WithIsBoard(p_is_board bool) PollsDeleteVoteRequest{
	p["is_board"] = p_is_board
	return p
}

func (p PollsDeleteVoteRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_PollsAccess, Error_PollsAnswerId, Error_PollsPollId ]
//
// https://dev.vk.com/method/polls.deleteVote
func (p *Polls) PollsDeleteVote(params ...api.MethodParams) (resp models.PollsDeleteVoteResponse, err error) {
	req := api.NewRequest[models.PollsDeleteVoteResponse](p.api)

	res, err := req.Execute("polls.deleteVote", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

