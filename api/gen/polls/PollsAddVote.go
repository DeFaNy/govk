// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PollsAddVote Adds the current user's vote to the selected answer in the poll.
type PollsAddVoteRequest api.Params

func NewPollsAddVoteRequest() PollsAddVoteRequest {
	params := make(PollsAddVoteRequest, 5)
	return params
}

func (p PollsAddVoteRequest) WithOwnerId(p_owner_id int) PollsAddVoteRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PollsAddVoteRequest) WithPollId(p_poll_id int) PollsAddVoteRequest{
	p["poll_id"] = p_poll_id
	return p
}

func (p PollsAddVoteRequest) WithAnswerIds(p_answer_ids []int) PollsAddVoteRequest{
	p["answer_ids"] = p_answer_ids
	return p
}

func (p PollsAddVoteRequest) WithIsBoard(p_is_board bool) PollsAddVoteRequest{
	p["is_board"] = p_is_board
	return p
}

func (p PollsAddVoteRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_PollsAccess, Error_PollsAnswerId, Error_PollsPollId ]
//
// https://dev.vk.com/method/polls.addVote
func (p *Polls) PollsAddVote(params ...api.MethodParams) (resp models.PollsAddVoteResponse, err error) {
	req := api.NewRequest[models.PollsAddVoteResponse](p.api)

	res, err := req.Execute("polls.addVote", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

