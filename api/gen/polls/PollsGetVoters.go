// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PollsGetVoters Returns a list of IDs of users who selected specific answers in the poll.
type PollsGetVotersRequest api.Params

func NewPollsGetVotersRequest() PollsGetVotersRequest {
	params := make(PollsGetVotersRequest, 10)
	return params
}

func (p PollsGetVotersRequest) WithOwnerId(p_owner_id int) PollsGetVotersRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PollsGetVotersRequest) WithPollId(p_poll_id int) PollsGetVotersRequest{
	p["poll_id"] = p_poll_id
	return p
}

func (p PollsGetVotersRequest) WithAnswerIds(p_answer_ids []int) PollsGetVotersRequest{
	p["answer_ids"] = p_answer_ids
	return p
}

func (p PollsGetVotersRequest) WithIsBoard(p_is_board bool) PollsGetVotersRequest{
	p["is_board"] = p_is_board
	return p
}

func (p PollsGetVotersRequest) WithFriendsOnly(p_friends_only bool) PollsGetVotersRequest{
	p["friends_only"] = p_friends_only
	return p
}

func (p PollsGetVotersRequest) WithOffset(p_offset int) PollsGetVotersRequest{
	p["offset"] = p_offset
	return p
}

func (p PollsGetVotersRequest) WithCount(p_count int) PollsGetVotersRequest{
	p["count"] = p_count
	return p
}

func (p PollsGetVotersRequest) WithFields(p_fields []models.UsersFields) PollsGetVotersRequest{
	p["fields"] = p_fields
	return p
}

func (p PollsGetVotersRequest) WithNameCase(p_name_case string) PollsGetVotersRequest{
	p["name_case"] = p_name_case
	return p
}

func (p PollsGetVotersRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_PollsAccess, Error_PollsAnswerId, Error_PollsPollId, Error_PollsAccessWithoutVote ]
//
// https://dev.vk.com/method/polls.getVoters
func (p *Polls) PollsGetVoters(params ...api.MethodParams) (resp models.PollsGetVotersResponse, err error) {
	req := api.NewRequest[models.PollsGetVotersResponse](p.api)

	res, err := req.Execute("polls.getVoters", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

