// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// PollsEdit Edits created polls
type PollsEditRequest api.Params

func NewPollsEditRequest() PollsEditRequest {
	params := make(PollsEditRequest, 10)
	return params
}

func (p PollsEditRequest) WithOwnerId(p_owner_id int) PollsEditRequest{
	p["owner_id"] = p_owner_id
	return p
}

func (p PollsEditRequest) WithPollId(p_poll_id int) PollsEditRequest{
	p["poll_id"] = p_poll_id
	return p
}

func (p PollsEditRequest) WithQuestion(p_question string) PollsEditRequest{
	p["question"] = p_question
	return p
}

func (p PollsEditRequest) WithAddAnswers(p_add_answers string) PollsEditRequest{
	p["add_answers"] = p_add_answers
	return p
}

func (p PollsEditRequest) WithEditAnswers(p_edit_answers string) PollsEditRequest{
	p["edit_answers"] = p_edit_answers
	return p
}

func (p PollsEditRequest) WithDeleteAnswers(p_delete_answers string) PollsEditRequest{
	p["delete_answers"] = p_delete_answers
	return p
}

func (p PollsEditRequest) WithEndDate(p_end_date int) PollsEditRequest{
	p["end_date"] = p_end_date
	return p
}

func (p PollsEditRequest) WithPhotoId(p_photo_id int) PollsEditRequest{
	p["photo_id"] = p_photo_id
	return p
}

func (p PollsEditRequest) WithBackgroundId(p_background_id int) PollsEditRequest{
	p["background_id"] = p_background_id
	return p
}

func (p PollsEditRequest) Params() api.Params {
	return api.Params(p)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/polls.edit
func (p *Polls) PollsEdit(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](p.api)

	res, err := req.Execute("polls.edit", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

