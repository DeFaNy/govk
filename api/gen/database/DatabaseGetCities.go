// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// DatabaseGetCities Returns a list of cities.
type DatabaseGetCitiesRequest api.Params

func NewDatabaseGetCitiesRequest() DatabaseGetCitiesRequest {
	params := make(DatabaseGetCitiesRequest, 7)
	return params
}

func (d DatabaseGetCitiesRequest) WithCountryId(d_country_id int) DatabaseGetCitiesRequest{
	d["country_id"] = d_country_id
	return d
}

func (d DatabaseGetCitiesRequest) WithRegionId(d_region_id int) DatabaseGetCitiesRequest{
	d["region_id"] = d_region_id
	return d
}

func (d DatabaseGetCitiesRequest) WithQ(d_q string) DatabaseGetCitiesRequest{
	d["q"] = d_q
	return d
}

func (d DatabaseGetCitiesRequest) WithNeedAll(d_need_all bool) DatabaseGetCitiesRequest{
	d["need_all"] = d_need_all
	return d
}

func (d DatabaseGetCitiesRequest) WithOffset(d_offset int) DatabaseGetCitiesRequest{
	d["offset"] = d_offset
	return d
}

func (d DatabaseGetCitiesRequest) WithCount(d_count int) DatabaseGetCitiesRequest{
	d["count"] = d_count
	return d
}

func (d DatabaseGetCitiesRequest) Params() api.Params {
	return api.Params(d)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/database.getCities
func (d *Database) DatabaseGetCities(params ...api.MethodParams) (resp models.DatabaseGetCitiesResponse, err error) {
	req := api.NewRequest[models.DatabaseGetCitiesResponse](d.api)

	res, err := req.Execute("database.getCities", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

