// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

type Gifts struct {
	api *api.API
}

func NewGifts(api *api.API) *Gifts {
	return &Gifts{
		api: api,
	}
}

// GiftsGet Returns a list of user gifts.
type GiftsGetRequest api.Params

func NewGiftsGetRequest() GiftsGetRequest {
	params := make(GiftsGetRequest, 4)
	return params
}

func (g GiftsGetRequest) WithUserId(g_user_id int) GiftsGetRequest {
	g["user_id"] = g_user_id
	return g
}

func (g GiftsGetRequest) WithCount(g_count int) GiftsGetRequest {
	g["count"] = g_count
	return g
}

func (g GiftsGetRequest) WithOffset(g_offset int) GiftsGetRequest {
	g["offset"] = g_offset
	return g
}

func (g GiftsGetRequest) Params() api.Params {
	return api.Params(g)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/gifts.get
func (g *Gifts) GiftsGet(params ...api.MethodParams) (resp models.GiftsGetResponse, err error) {
	req := api.NewRequest[models.GiftsGetResponse](g.api)

	res, err := req.Execute("gifts.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}
