// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package tests

import (
	"github.com/defany/govk/api/gen/models"
	"github.com/defany/govk/pkg/random"
)

func fillRandomlyAccountChangePasswordResponse(o *models.AccountChangePasswordResponse) {
	(*o).Account.Secret = new(string)
	*(*o).Account.Secret = random.RandString()
	(*o).Account.Token = random.RandString()
}

func fillRandomlyAccountGetActiveOffersResponse(o *models.AccountGetActiveOffersResponse) {
	(*o).Account.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Account.Items = make([]models.AccountOffer, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAccountOffer(&((*o).Account.Items)[i0])
	}
}

func fillRandomlyAccountGetAppPermissionsResponse(o *models.AccountGetAppPermissionsResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAccountGetBannedResponse(o *models.AccountGetBannedResponse) {
	(*o).Account.Count = random.RandInt()
	(*o).Account.Groups = new([]models.GroupsGroup)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Account.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Account.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Account.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Account.Items)[i0] = random.RandInt()
	}
	(*o).Account.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Account.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Account.Profiles)[i0])
	}
}

func fillRandomlyAccountGetCountersResponse(o *models.AccountGetCountersResponse) {
	fillRandomlyAccountAccountCounters(&(*o).Response)
}

func fillRandomlyAccountGetInfoResponse(o *models.AccountGetInfoResponse) {
	fillRandomlyAccountInfo(&(*o).Response)
}

func fillRandomlyAccountGetProfileInfoResponse(o *models.AccountGetProfileInfoResponse) {
	fillRandomlyAccountUserSettings(&(*o).Response)
}

func fillRandomlyAccountGetPushSettingsResponse(o *models.AccountGetPushSettingsResponse) {
	fillRandomlyAccountPushSettings(&(*o).Response)
}

func fillRandomlyAccountSaveProfileInfoResponse(o *models.AccountSaveProfileInfoResponse) {
	fillRandomlyBaseBoolInt(&(*o).Account.Changed)
	(*o).Account.NameRequest = new(models.AccountNameRequest)
	fillRandomlyAccountNameRequest((*o).Account.NameRequest)
}

func fillRandomlyAdsAddOfficeUsersResponse(o *models.AdsAddOfficeUsersResponse) {
	(*o).Response = random.RandBool()
}

func fillRandomlyAdsCheckLinkResponse(o *models.AdsCheckLinkResponse) {
	fillRandomlyAdsLinkStatus(&(*o).Response)
}

func fillRandomlyAdsCreateAdsResponse(o *models.AdsCreateAdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsCreateAdStatus, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsCreateAdStatus(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsCreateCampaignsResponse(o *models.AdsCreateCampaignsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsCreateCampaignStatus, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsCreateCampaignStatus(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsCreateClientsResponse(o *models.AdsCreateClientsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyAdsCreateTargetGroupResponse(o *models.AdsCreateTargetGroupResponse) {
	(*o).Ads.Id = new(int)
	*(*o).Ads.Id = random.RandInt()
	(*o).Ads.Pixel = new(string)
	*(*o).Ads.Pixel = random.RandString()
}

func fillRandomlyAdsDeleteAdsResponse(o *models.AdsDeleteAdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyAdsDeleteCampaignsResponse(o *models.AdsDeleteCampaignsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyAdsDeleteClientsResponse(o *models.AdsDeleteClientsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyAdsGetAccountsResponse(o *models.AdsGetAccountsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsAccount, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsAccount(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetAdsLayoutResponse(o *models.AdsGetAdsLayoutResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsAdLayout, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsAdLayout(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetAdsTargetingResponse(o *models.AdsGetAdsTargetingResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargSettings, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargSettings(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetAdsResponse(o *models.AdsGetAdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsAd, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsAd(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetBudgetResponse(o *models.AdsGetBudgetResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAdsGetCampaignsResponse(o *models.AdsGetCampaignsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsCampaign, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsCampaign(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetCategoriesResponse(o *models.AdsGetCategoriesResponse) {
	(*o).Ads.V1 = new([]models.AdsCategory)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Ads.V1 = make([]models.AdsCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsCategory(&(*(*o).Ads.V1)[i0])
	}
	(*o).Ads.V2 = new([]models.AdsCategory)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Ads.V2 = make([]models.AdsCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsCategory(&(*(*o).Ads.V2)[i0])
	}
}

func fillRandomlyAdsGetClientsResponse(o *models.AdsGetClientsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsClient, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsClient(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetDemographicsResponse(o *models.AdsGetDemographicsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsDemoStats, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsDemoStats(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetFloodStatsResponse(o *models.AdsGetFloodStatsResponse) {
	fillRandomlyAdsFloodStats(&(*o).Response)
}

func fillRandomlyAdsGetLookalikeRequestsResponse(o *models.AdsGetLookalikeRequestsResponse) {
	(*o).Ads.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Ads.Items = make([]models.AdsLookalikeRequest, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsLookalikeRequest(&((*o).Ads.Items)[i0])
	}
}

func fillRandomlyAdsGetMusiciansResponse(o *models.AdsGetMusiciansResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Ads.Items = make([]models.AdsMusician, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsMusician(&((*o).Ads.Items)[i0])
	}
}

func fillRandomlyAdsGetOfficeUsersResponse(o *models.AdsGetOfficeUsersResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsUsers, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsUsers(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetPostsReachResponse(o *models.AdsGetPostsReachResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsPromotedPostReach, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsPromotedPostReach(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetRejectionReasonResponse(o *models.AdsGetRejectionReasonResponse) {
	fillRandomlyAdsRejectReason(&(*o).Response)
}

func fillRandomlyAdsGetStatisticsResponse(o *models.AdsGetStatisticsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsStats, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsStats(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetSuggestionsCitiesResponse(o *models.AdsGetSuggestionsCitiesResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargSuggestionsCities, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargSuggestionsCities(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetSuggestionsRegionsResponse(o *models.AdsGetSuggestionsRegionsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargSuggestionsRegions, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargSuggestionsRegions(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetSuggestionsResponse(o *models.AdsGetSuggestionsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargSuggestions, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargSuggestions(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetSuggestionsSchoolsResponse(o *models.AdsGetSuggestionsSchoolsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargSuggestionsSchools, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargSuggestionsSchools(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetTargetGroupsResponse(o *models.AdsGetTargetGroupsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsTargetGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsTargetGroup(&((*o).Response)[i0])
	}
}

func fillRandomlyAdsGetTargetingStatsResponse(o *models.AdsGetTargetingStatsResponse) {
	fillRandomlyAdsTargStats(&(*o).Response)
}

func fillRandomlyAdsGetUploadURLResponse(o *models.AdsGetUploadURLResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyAdsGetVideoUploadURLResponse(o *models.AdsGetVideoUploadURLResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyAdsImportTargetContactsResponse(o *models.AdsImportTargetContactsResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAdsRemoveOfficeUsersResponse(o *models.AdsRemoveOfficeUsersResponse) {
	(*o).Response = random.RandBool()
}

func fillRandomlyAdsUpdateAdsResponse(o *models.AdsUpdateAdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyAdsUpdateCampaignsResponse(o *models.AdsUpdateCampaignsResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAdsUpdateClientsResponse(o *models.AdsUpdateClientsResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAdsUpdateOfficeUsersResponse(o *models.AdsUpdateOfficeUsersResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AdsUpdateOfficeUsersResult, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdsUpdateOfficeUsersResult(&((*o).Response)[i0])
	}
}

func fillRandomlyAdswebGetAdCategoriesResponse(o *models.AdswebGetAdCategoriesResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Adsweb.Categories = make([]models.AdswebGetAdCategoriesResponseCategoriesCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdswebGetAdCategoriesResponseCategoriesCategory(&((*o).Adsweb.Categories)[i0])
	}
}

func fillRandomlyAdswebGetAdUnitCodeResponse(o *models.AdswebGetAdUnitCodeResponse) {
	(*o).Adsweb.Html = random.RandString()
}

func fillRandomlyAdswebGetAdUnitsResponse(o *models.AdswebGetAdUnitsResponse) {
	(*o).Adsweb.AdUnits = new([]models.AdswebGetAdUnitsResponseAdUnitsAdUnit)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Adsweb.AdUnits = make([]models.AdswebGetAdUnitsResponseAdUnitsAdUnit, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdswebGetAdUnitsResponseAdUnitsAdUnit(&(*(*o).Adsweb.AdUnits)[i0])
	}
	(*o).Adsweb.Count = random.RandInt()
}

func fillRandomlyAdswebGetFraudHistoryResponse(o *models.AdswebGetFraudHistoryResponse) {
	(*o).Adsweb.Count = random.RandInt()
	(*o).Adsweb.Entries = new([]models.AdswebGetFraudHistoryResponseEntriesEntry)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Adsweb.Entries = make([]models.AdswebGetFraudHistoryResponseEntriesEntry, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdswebGetFraudHistoryResponseEntriesEntry(&(*(*o).Adsweb.Entries)[i0])
	}
}

func fillRandomlyAdswebGetSitesResponse(o *models.AdswebGetSitesResponse) {
	(*o).Adsweb.Count = random.RandInt()
	(*o).Adsweb.Sites = new([]models.AdswebGetSitesResponseSitesSite)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Adsweb.Sites = make([]models.AdswebGetSitesResponseSitesSite, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdswebGetSitesResponseSitesSite(&(*(*o).Adsweb.Sites)[i0])
	}
}

func fillRandomlyAdswebGetStatisticsResponse(o *models.AdswebGetStatisticsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Adsweb.Items = make([]models.AdswebGetStatisticsResponseItemsItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAdswebGetStatisticsResponseItemsItem(&((*o).Adsweb.Items)[i0])
	}
	(*o).Adsweb.NextPageId = new(string)
	*(*o).Adsweb.NextPageId = random.RandString()
}

func fillRandomlyAppWidgetsGetAppImageUploadServerResponse(o *models.AppWidgetsGetAppImageUploadServerResponse) {
	(*o).Appwidgets.UploadUrl = new(string)
	*(*o).Appwidgets.UploadUrl = random.RandString()
}

func fillRandomlyAppWidgetsGetAppImagesResponse(o *models.AppWidgetsGetAppImagesResponse) {
	fillRandomlyAppWidgetsPhotos(&(*o).Response)
}

func fillRandomlyAppWidgetsGetGroupImageUploadServerResponse(o *models.AppWidgetsGetGroupImageUploadServerResponse) {
	(*o).Appwidgets.UploadUrl = new(string)
	*(*o).Appwidgets.UploadUrl = random.RandString()
}

func fillRandomlyAppWidgetsGetGroupImagesResponse(o *models.AppWidgetsGetGroupImagesResponse) {
	fillRandomlyAppWidgetsPhotos(&(*o).Response)
}

func fillRandomlyAppWidgetsGetImagesByIdResponse(o *models.AppWidgetsGetImagesByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.AppWidgetsPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppWidgetsPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyAppWidgetsSaveAppImageResponse(o *models.AppWidgetsSaveAppImageResponse) {
	fillRandomlyAppWidgetsPhoto(&(*o).Response)
}

func fillRandomlyAppWidgetsSaveGroupImageResponse(o *models.AppWidgetsSaveGroupImageResponse) {
	fillRandomlyAppWidgetsPhoto(&(*o).Response)
}

func fillRandomlyAppsGetCatalogResponse(o *models.AppsGetCatalogResponse) {
	fillRandomlyAppsCatalogList(&(*o).Response)
}

func fillRandomlyAppsGetFriendsListExtendedResponse(o *models.AppsGetFriendsListExtendedResponse) {
	(*o).Apps.Count = random.RandInt()
	(*o).Apps.Items = new([]models.UsersUserFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Apps.Items)[i0])
	}
}

func fillRandomlyAppsGetFriendsListResponse(o *models.AppsGetFriendsListResponse) {
	(*o).Apps.Count = random.RandInt()
	(*o).Apps.Items = new([]int)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Apps.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyAppsGetLeaderboardExtendedResponse(o *models.AppsGetLeaderboardExtendedResponse) {
	(*o).Apps.Count = new(int)
	*(*o).Apps.Count = random.RandInt()
	(*o).Apps.Items = new([]models.AppsLeaderboard)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Items = make([]models.AppsLeaderboard, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppsLeaderboard(&(*(*o).Apps.Items)[i0])
	}
	(*o).Apps.Profiles = new([]models.UsersUser)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&(*(*o).Apps.Profiles)[i0])
	}
}

func fillRandomlyAppsGetLeaderboardResponse(o *models.AppsGetLeaderboardResponse) {
	(*o).Apps.Count = new(int)
	*(*o).Apps.Count = random.RandInt()
	(*o).Apps.Items = new([]models.AppsLeaderboard)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Items = make([]models.AppsLeaderboard, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppsLeaderboard(&(*(*o).Apps.Items)[i0])
	}
}

func fillRandomlyAppsGetMiniAppPoliciesResponse(o *models.AppsGetMiniAppPoliciesResponse) {
	(*o).Apps.PrivacyPolicy = new(string)
	*(*o).Apps.PrivacyPolicy = random.RandString()
	(*o).Apps.Terms = new(string)
	*(*o).Apps.Terms = random.RandString()
}

func fillRandomlyAppsGetScopesResponse(o *models.AppsGetScopesResponse) {
	(*o).Apps.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Apps.Items = make([]models.AppsScope, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppsScope(&((*o).Apps.Items)[i0])
	}
}

func fillRandomlyAppsGetScoreResponse(o *models.AppsGetScoreResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAppsGetResponse(o *models.AppsGetResponse) {
	(*o).Apps.Count = new(int)
	*(*o).Apps.Count = random.RandInt()
	(*o).Apps.Items = new([]models.AppsApp)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Apps.Items = make([]models.AppsApp, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppsApp(&(*(*o).Apps.Items)[i0])
	}
}

func fillRandomlyAppsImageUploadResponse(o *models.AppsImageUploadResponse) {
	(*o).Apps.Hash = new(string)
	*(*o).Apps.Hash = random.RandString()
	(*o).Apps.Image = new(string)
	*(*o).Apps.Image = random.RandString()
}

func fillRandomlyAppsSendRequestResponse(o *models.AppsSendRequestResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyAuthRestoreResponseAuthSuccess(o *models.AuthRestoreResponseAuthSuccess) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyAuthRestoreResponse(o *models.AuthRestoreResponse) {
	(*o).Auth.Sid = new(string)
	*(*o).Auth.Sid = random.RandString()
	(*o).Auth.Success = new(models.AuthRestoreResponseAuthSuccess)
	fillRandomlyAuthRestoreResponseAuthSuccess((*o).Auth.Success)
}

func fillRandomlyBaseBoolResponse(o *models.BaseBoolResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyBaseGetUploadServerResponse(o *models.BaseGetUploadServerResponse) {
	fillRandomlyBaseUploadServer(&(*o).Response)
}

func fillRandomlyBaseOkResponseResponse(o *models.BaseOkResponseResponse) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyBaseOkResponse(o *models.BaseOkResponse) {
	fillRandomlyBaseOkResponseResponse(&(*o).Response)
}

func fillRandomlyBoardAddTopicResponse(o *models.BoardAddTopicResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyBoardCreateCommentResponse(o *models.BoardCreateCommentResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyBoardGetCommentsExtendedResponse(o *models.BoardGetCommentsExtendedResponse) {
	(*o).Board.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Board.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Items = make([]models.BoardTopicComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBoardTopicComment(&((*o).Board.Items)[i0])
	}
	(*o).Board.Poll = new(models.PollsPoll)
	fillRandomlyPollsPoll((*o).Board.Poll)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Board.Profiles)[i0])
	}
	(*o).Board.RealOffset = new(int)
	*(*o).Board.RealOffset = random.RandInt()
}

func fillRandomlyBoardGetCommentsResponse(o *models.BoardGetCommentsResponse) {
	(*o).Board.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Items = make([]models.BoardTopicComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBoardTopicComment(&((*o).Board.Items)[i0])
	}
	(*o).Board.Poll = new(models.PollsPoll)
	fillRandomlyPollsPoll((*o).Board.Poll)
	(*o).Board.RealOffset = new(int)
	*(*o).Board.RealOffset = random.RandInt()
}

func fillRandomlyBoardGetTopicsExtendedResponse(o *models.BoardGetTopicsExtendedResponse) {
	fillRandomlyBaseBoolInt(&(*o).Board.CanAddTopics)
	(*o).Board.Count = random.RandInt()
	fillRandomlyBoardDefaultOrder(&(*o).Board.DefaultOrder)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Board.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Items = make([]models.BoardTopic, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBoardTopic(&((*o).Board.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Board.Profiles)[i0])
	}
}

func fillRandomlyBoardGetTopicsResponse(o *models.BoardGetTopicsResponse) {
	fillRandomlyBaseBoolInt(&(*o).Board.CanAddTopics)
	(*o).Board.Count = random.RandInt()
	fillRandomlyBoardDefaultOrder(&(*o).Board.DefaultOrder)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Board.Items = make([]models.BoardTopic, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBoardTopic(&((*o).Board.Items)[i0])
	}
}

func fillRandomlyDatabaseGetChairsResponse(o *models.DatabaseGetChairsResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.BaseObject, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBaseObject(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetCitiesByIdResponse(o *models.DatabaseGetCitiesByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.DatabaseCityById, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseCityById(&((*o).Response)[i0])
	}
}

func fillRandomlyDatabaseGetCitiesResponse(o *models.DatabaseGetCitiesResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseCity, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseCity(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetCountriesByIdResponse(o *models.DatabaseGetCountriesByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.BaseCountry, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBaseCountry(&((*o).Response)[i0])
	}
}

func fillRandomlyDatabaseGetCountriesResponse(o *models.DatabaseGetCountriesResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.BaseCountry, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBaseCountry(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetFacultiesResponse(o *models.DatabaseGetFacultiesResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseFaculty, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseFaculty(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetMetroStationsByIdResponse(o *models.DatabaseGetMetroStationsByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.DatabaseStation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseStation(&((*o).Response)[i0])
	}
}

func fillRandomlyDatabaseGetMetroStationsResponse(o *models.DatabaseGetMetroStationsResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseStation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseStation(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetRegionsResponse(o *models.DatabaseGetRegionsResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseRegion, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseRegion(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetSchoolClassesResponse(o *models.DatabaseGetSchoolClassesResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([][]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		l1 := random.RandIntn(random.MaxArrayLength + 1)
		((*o).Response)[i0] = make([]string, l1)
		for i1 := 0; i1 < l1; i1++ {
			((*o).Response)[i0][i1] = random.RandString()
		}
	}
}

func fillRandomlyDatabaseGetSchoolsResponse(o *models.DatabaseGetSchoolsResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseSchool, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseSchool(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDatabaseGetUniversitiesResponse(o *models.DatabaseGetUniversitiesResponse) {
	(*o).Database.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Database.Items = make([]models.DatabaseUniversity, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDatabaseUniversity(&((*o).Database.Items)[i0])
	}
}

func fillRandomlyDocsAddResponse(o *models.DocsAddResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyDocsDocUploadResponse(o *models.DocsDocUploadResponse) {
	(*o).Docs.File = new(string)
	*(*o).Docs.File = random.RandString()
}

func fillRandomlyDocsGetByIdResponse(o *models.DocsGetByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.DocsDoc, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDocsDoc(&((*o).Response)[i0])
	}
}

func fillRandomlyDocsGetTypesResponse(o *models.DocsGetTypesResponse) {
	(*o).Docs.Count = new(int)
	*(*o).Docs.Count = random.RandInt()
	(*o).Docs.Items = new([]models.DocsDocTypes)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Docs.Items = make([]models.DocsDocTypes, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDocsDocTypes(&(*(*o).Docs.Items)[i0])
	}
}

func fillRandomlyDocsGetUploadServerResponse(o *models.DocsGetUploadServerResponse) {
	fillRandomlyBaseUploadServer(&(*o).Response)
}

func fillRandomlyDocsGetResponse(o *models.DocsGetResponse) {
	(*o).Docs.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Docs.Items = make([]models.DocsDoc, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDocsDoc(&((*o).Docs.Items)[i0])
	}
}

func fillRandomlyDocsSaveResponse(o *models.DocsSaveResponse) {
	(*o).Docs.AudioMessage = new(models.MessagesAudioMessage)
	fillRandomlyMessagesAudioMessage((*o).Docs.AudioMessage)
	(*o).Docs.Doc = new(models.DocsDoc)
	fillRandomlyDocsDoc((*o).Docs.Doc)
	(*o).Docs.Graffiti = new(models.MessagesGraffiti)
	fillRandomlyMessagesGraffiti((*o).Docs.Graffiti)
	(*o).Docs.Type = new(models.DocsDocAttachmentType)
	fillRandomlyDocsDocAttachmentType((*o).Docs.Type)
}

func fillRandomlyDocsSearchResponse(o *models.DocsSearchResponse) {
	(*o).Docs.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Docs.Items = make([]models.DocsDoc, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDocsDoc(&((*o).Docs.Items)[i0])
	}
}

func fillRandomlyDonutGetSubscriptionResponse(o *models.DonutGetSubscriptionResponse) {
	fillRandomlyDonutDonatorSubscriptionInfo(&(*o).Response)
}

func fillRandomlyDonutGetSubscriptionsResponse(o *models.DonutGetSubscriptionsResponse) {
	(*o).Donut.Count = new(int)
	*(*o).Donut.Count = random.RandInt()
	(*o).Donut.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Donut.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Donut.Groups)[i0])
	}
	(*o).Donut.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Donut.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Donut.Profiles)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Donut.Subscriptions = make([]models.DonutDonatorSubscriptionInfo, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyDonutDonatorSubscriptionInfo(&((*o).Donut.Subscriptions)[i0])
	}
}

func fillRandomlyDownloadedGamesPaidStatusResponse(o *models.DownloadedGamesPaidStatusResponse) {
	(*o).Downloadedgames.IsPaid = random.RandBool()
}

func fillRandomlyFaveAddTagResponse(o *models.FaveAddTagResponse) {
	fillRandomlyFaveTag(&(*o).Response)
}

func fillRandomlyFaveGetPagesResponse(o *models.FaveGetPagesResponse) {
	(*o).Fave.Count = new(int)
	*(*o).Fave.Count = random.RandInt()
	(*o).Fave.Items = new([]models.FavePage)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Items = make([]models.FavePage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFavePage(&(*(*o).Fave.Items)[i0])
	}
}

func fillRandomlyFaveGetTagsResponse(o *models.FaveGetTagsResponse) {
	(*o).Fave.Count = new(int)
	*(*o).Fave.Count = random.RandInt()
	(*o).Fave.Items = new([]models.FaveTag)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Items = make([]models.FaveTag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFaveTag(&(*(*o).Fave.Items)[i0])
	}
}

func fillRandomlyFaveGetExtendedResponse(o *models.FaveGetExtendedResponse) {
	(*o).Fave.Count = new(int)
	*(*o).Fave.Count = random.RandInt()
	(*o).Fave.Groups = new([]models.GroupsGroup)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Fave.Groups)[i0])
	}
	(*o).Fave.Items = new([]models.FaveBookmark)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Items = make([]models.FaveBookmark, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFaveBookmark(&(*(*o).Fave.Items)[i0])
	}
	(*o).Fave.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Fave.Profiles)[i0])
	}
}

func fillRandomlyFaveGetResponse(o *models.FaveGetResponse) {
	(*o).Fave.Count = new(int)
	*(*o).Fave.Count = random.RandInt()
	(*o).Fave.Items = new([]models.FaveBookmark)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Fave.Items = make([]models.FaveBookmark, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFaveBookmark(&(*(*o).Fave.Items)[i0])
	}
}

func fillRandomlyFriendsAddListResponse(o *models.FriendsAddListResponse) {
	(*o).Friends.ListId = random.RandInt()
}

func fillRandomlyFriendsAddResponseResponse(o *models.FriendsAddResponseResponse) {
	switch random.RandIntn(3) {
	case 0:
		*o = 1
	case 1:
		*o = 2
	case 2:
		*o = 4
	}
}

func fillRandomlyFriendsAddResponse(o *models.FriendsAddResponse) {
	fillRandomlyFriendsAddResponseResponse(&(*o).Response)
}

func fillRandomlyFriendsAreFriendsExtendedResponse(o *models.FriendsAreFriendsExtendedResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.FriendsFriendExtendedStatus, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsFriendExtendedStatus(&((*o).Response)[i0])
	}
}

func fillRandomlyFriendsAreFriendsResponse(o *models.FriendsAreFriendsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.FriendsFriendStatus, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsFriendStatus(&((*o).Response)[i0])
	}
}

func fillRandomlyFriendsDeleteResponseFriendsFriendDeleted(o *models.FriendsDeleteResponseFriendsFriendDeleted) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyFriendsDeleteResponseFriendsInRequestDeleted(o *models.FriendsDeleteResponseFriendsInRequestDeleted) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyFriendsDeleteResponseFriendsOutRequestDeleted(o *models.FriendsDeleteResponseFriendsOutRequestDeleted) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyFriendsDeleteResponseFriendsSuggestionDeleted(o *models.FriendsDeleteResponseFriendsSuggestionDeleted) {
	switch random.RandIntn(1) {
	case 0:
		*o = 1
	}
}

func fillRandomlyFriendsDeleteResponse(o *models.FriendsDeleteResponse) {
	(*o).Friends.FriendDeleted = new(models.FriendsDeleteResponseFriendsFriendDeleted)
	fillRandomlyFriendsDeleteResponseFriendsFriendDeleted((*o).Friends.FriendDeleted)
	(*o).Friends.InRequestDeleted = new(models.FriendsDeleteResponseFriendsInRequestDeleted)
	fillRandomlyFriendsDeleteResponseFriendsInRequestDeleted((*o).Friends.InRequestDeleted)
	(*o).Friends.OutRequestDeleted = new(models.FriendsDeleteResponseFriendsOutRequestDeleted)
	fillRandomlyFriendsDeleteResponseFriendsOutRequestDeleted((*o).Friends.OutRequestDeleted)
	(*o).Friends.Success = random.RandInt()
	(*o).Friends.SuggestionDeleted = new(models.FriendsDeleteResponseFriendsSuggestionDeleted)
	fillRandomlyFriendsDeleteResponseFriendsSuggestionDeleted((*o).Friends.SuggestionDeleted)
}

func fillRandomlyFriendsGetAppUsersResponse(o *models.FriendsGetAppUsersResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetByPhonesResponse(o *models.FriendsGetByPhonesResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.FriendsUserXtrPhone, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsUserXtrPhone(&((*o).Response)[i0])
	}
}

func fillRandomlyFriendsGetListsResponse(o *models.FriendsGetListsResponse) {
	(*o).Friends.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Items = make([]models.FriendsFriendsList, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsFriendsList(&((*o).Friends.Items)[i0])
	}
}

func fillRandomlyFriendsGetMutualResponse(o *models.FriendsGetMutualResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetMutualTargetUidsResponse(o *models.FriendsGetMutualTargetUidsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.FriendsMutualFriend, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsMutualFriend(&((*o).Response)[i0])
	}
}

func fillRandomlyFriendsGetOnlineOnlineMobileResponse(o *models.FriendsGetOnlineOnlineMobileResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Online = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Friends.Online)[i0] = random.RandInt()
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.OnlineMobile = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Friends.OnlineMobile)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetOnlineResponse(o *models.FriendsGetOnlineResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetRecentResponse(o *models.FriendsGetRecentResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetRequestsExtendedResponse(o *models.FriendsGetRequestsExtendedResponse) {
	(*o).Friends.Count = new(int)
	*(*o).Friends.Count = random.RandInt()
	(*o).Friends.Items = new([]models.FriendsRequestsXtrMessage)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Friends.Items = make([]models.FriendsRequestsXtrMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsRequestsXtrMessage(&(*(*o).Friends.Items)[i0])
	}
}

func fillRandomlyFriendsGetRequestsNeedMutualResponse(o *models.FriendsGetRequestsNeedMutualResponse) {
	(*o).Friends.Count = new(int)
	*(*o).Friends.Count = random.RandInt()
	(*o).Friends.Items = new([]models.FriendsRequests)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Friends.Items = make([]models.FriendsRequests, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyFriendsRequests(&(*(*o).Friends.Items)[i0])
	}
}

func fillRandomlyFriendsGetRequestsResponse(o *models.FriendsGetRequestsResponse) {
	(*o).Friends.Count = new(int)
	*(*o).Friends.Count = random.RandInt()
	(*o).Friends.CountUnread = new(int)
	*(*o).Friends.CountUnread = random.RandInt()
	(*o).Friends.Items = new([]int)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Friends.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Friends.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsGetSuggestionsResponse(o *models.FriendsGetSuggestionsResponse) {
	(*o).Friends.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Friends.Items)[i0])
	}
}

func fillRandomlyFriendsGetFieldsResponse(o *models.FriendsGetFieldsResponse) {
	(*o).Friends.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Friends.Items)[i0])
	}
}

func fillRandomlyFriendsGetResponse(o *models.FriendsGetResponse) {
	(*o).Friends.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Friends.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyFriendsSearchResponse(o *models.FriendsSearchResponse) {
	(*o).Friends.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Friends.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Friends.Items)[i0])
	}
}

func fillRandomlyGiftsGetResponse(o *models.GiftsGetResponse) {
	(*o).Gifts.Count = new(int)
	*(*o).Gifts.Count = random.RandInt()
	(*o).Gifts.Items = new([]models.GiftsGift)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Gifts.Items = make([]models.GiftsGift, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGiftsGift(&(*(*o).Gifts.Items)[i0])
	}
}

func fillRandomlyGroupsAddAddressResponse(o *models.GroupsAddAddressResponse) {
	fillRandomlyGroupsAddress(&(*o).Response)
}

func fillRandomlyGroupsAddCallbackServerResponse(o *models.GroupsAddCallbackServerResponse) {
	(*o).Groups.ServerId = random.RandInt()
}

func fillRandomlyGroupsAddLinkResponse(o *models.GroupsAddLinkResponse) {
	fillRandomlyGroupsLinksItem(&(*o).Response)
}

func fillRandomlyGroupsCreateResponse(o *models.GroupsCreateResponse) {
	fillRandomlyGroupsGroup(&(*o).Response)
}

func fillRandomlyGroupsEditAddressResponse(o *models.GroupsEditAddressResponse) {
	fillRandomlyGroupsAddress(&(*o).Response)
}

func fillRandomlyGroupsGetAddressesResponse(o *models.GroupsGetAddressesResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsAddress, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsAddress(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetBannedResponse(o *models.GroupsGetBannedResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsBannedItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsBannedItem(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetByIdObjectLegacyResponse(o *models.GroupsGetByIdObjectLegacyResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Response)[i0])
	}
}

func fillRandomlyGroupsGetCallbackConfirmationCodeResponse(o *models.GroupsGetCallbackConfirmationCodeResponse) {
	(*o).Groups.Code = random.RandString()
}

func fillRandomlyGroupsGetCallbackServersResponse(o *models.GroupsGetCallbackServersResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsCallbackServer, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsCallbackServer(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetCallbackSettingsResponse(o *models.GroupsGetCallbackSettingsResponse) {
	fillRandomlyGroupsCallbackSettings(&(*o).Response)
}

func fillRandomlyGroupsGetCatalogInfoExtendedResponse(o *models.GroupsGetCatalogInfoExtendedResponse) {
	(*o).Groups.Categories = new([]models.GroupsGroupCategoryFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Groups.Categories = make([]models.GroupsGroupCategoryFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupCategoryFull(&(*(*o).Groups.Categories)[i0])
	}
	fillRandomlyBaseBoolInt(&(*o).Groups.Enabled)
}

func fillRandomlyGroupsGetCatalogInfoResponse(o *models.GroupsGetCatalogInfoResponse) {
	(*o).Groups.Categories = new([]models.GroupsGroupCategory)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Groups.Categories = make([]models.GroupsGroupCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupCategory(&(*(*o).Groups.Categories)[i0])
	}
	fillRandomlyBaseBoolInt(&(*o).Groups.Enabled)
}

func fillRandomlyGroupsGetCatalogResponse(o *models.GroupsGetCatalogResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetInvitedUsersResponse(o *models.GroupsGetInvitedUsersResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetInvitesExtendedResponse(o *models.GroupsGetInvitesExtendedResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Groups.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Groups.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Profiles = make([]models.UsersUserMin, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserMin(&((*o).Groups.Profiles)[i0])
	}
}

func fillRandomlyGroupsGetInvitesResponse(o *models.GroupsGetInvitesResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetLongPollServerResponse(o *models.GroupsGetLongPollServerResponse) {
	fillRandomlyGroupsLongPollServer(&(*o).Response)
}

func fillRandomlyGroupsGetLongPollSettingsResponse(o *models.GroupsGetLongPollSettingsResponse) {
	fillRandomlyGroupsLongPollSettings(&(*o).Response)
}

func fillRandomlyGroupsGetMembersFieldsResponse(o *models.GroupsGetMembersFieldsResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsUserXtrRole, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsUserXtrRole(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetMembersFilterResponse(o *models.GroupsGetMembersFilterResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsMemberRole, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsMemberRole(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetMembersResponse(o *models.GroupsGetMembersResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Groups.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyGroupsGetRequestsFieldsResponse(o *models.GroupsGetRequestsFieldsResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetRequestsResponse(o *models.GroupsGetRequestsResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Groups.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyGroupsGetSettingsResponse(o *models.GroupsGetSettingsResponse) {
	(*o).Groups.Access = new(models.GroupsGroupAccess)
	fillRandomlyGroupsGroupAccess((*o).Groups.Access)
	(*o).Groups.Address = new(string)
	*(*o).Groups.Address = random.RandString()
	(*o).Groups.AgeLimits = new(models.GroupsGroupAgeLimits)
	fillRandomlyGroupsGroupAgeLimits((*o).Groups.AgeLimits)
	(*o).Groups.Articles = random.RandInt()
	fillRandomlyGroupsGroupAudio(&(*o).Groups.Audio)
	(*o).Groups.CityId = random.RandInt()
	(*o).Groups.CityName = random.RandString()
	(*o).Groups.Contacts = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.Contacts)
	(*o).Groups.CountryId = random.RandInt()
	(*o).Groups.CountryName = random.RandString()
	(*o).Groups.Description = random.RandString()
	fillRandomlyGroupsGroupDocs(&(*o).Groups.Docs)
	(*o).Groups.Email = new(string)
	*(*o).Groups.Email = random.RandString()
	(*o).Groups.EventGroupId = new(int)
	*(*o).Groups.EventGroupId = random.RandInt()
	(*o).Groups.Events = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.Events)
	(*o).Groups.FinishDate = new(int)
	*(*o).Groups.FinishDate = random.RandInt()
	(*o).Groups.Links = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.Links)
	(*o).Groups.MainSection = new(models.GroupsGroupFullSection)
	fillRandomlyGroupsGroupFullSection((*o).Groups.MainSection)
	fillRandomlyBaseBoolInt(&(*o).Groups.ObsceneFilter)
	fillRandomlyBaseBoolInt(&(*o).Groups.ObsceneStopwords)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.ObsceneWords = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Groups.ObsceneWords)[i0] = random.RandString()
	}
	(*o).Groups.Phone = new(string)
	*(*o).Groups.Phone = random.RandString()
	fillRandomlyGroupsGroupPhotos(&(*o).Groups.Photos)
	(*o).Groups.PublicCategory = new(int)
	*(*o).Groups.PublicCategory = random.RandInt()
	(*o).Groups.PublicCategoryList = new([]models.GroupsGroupPublicCategoryList)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Groups.PublicCategoryList = make([]models.GroupsGroupPublicCategoryList, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupPublicCategoryList(&(*(*o).Groups.PublicCategoryList)[i0])
	}
	(*o).Groups.PublicDate = new(string)
	*(*o).Groups.PublicDate = random.RandString()
	(*o).Groups.PublicDateLabel = new(string)
	*(*o).Groups.PublicDateLabel = random.RandString()
	(*o).Groups.PublicSubcategory = new(int)
	*(*o).Groups.PublicSubcategory = random.RandInt()
	(*o).Groups.RecognizePhoto = new(int)
	*(*o).Groups.RecognizePhoto = random.RandInt()
	(*o).Groups.Rss = new(string)
	*(*o).Groups.Rss = random.RandString()
	(*o).Groups.SecondarySection = new(models.GroupsGroupFullSection)
	fillRandomlyGroupsGroupFullSection((*o).Groups.SecondarySection)
	(*o).Groups.SectionsList = new([]models.GroupsSectionsListItem)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Groups.SectionsList = make([]models.GroupsSectionsListItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsSectionsListItem(&(*(*o).Groups.SectionsList)[i0])
	}
	(*o).Groups.StartDate = new(int)
	*(*o).Groups.StartDate = random.RandInt()
	(*o).Groups.Subject = new(int)
	*(*o).Groups.Subject = random.RandInt()
	(*o).Groups.SubjectList = new([]models.GroupsSubjectItem)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Groups.SubjectList = make([]models.GroupsSubjectItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsSubjectItem(&(*(*o).Groups.SubjectList)[i0])
	}
	(*o).Groups.SuggestedPrivacy = new(models.GroupsGroupSuggestedPrivacy)
	fillRandomlyGroupsGroupSuggestedPrivacy((*o).Groups.SuggestedPrivacy)
	(*o).Groups.Title = random.RandString()
	fillRandomlyGroupsGroupTopics(&(*o).Groups.Topics)
	(*o).Groups.Twitter = new(models.GroupsSettingsTwitter)
	fillRandomlyGroupsSettingsTwitter((*o).Groups.Twitter)
	fillRandomlyGroupsGroupVideo(&(*o).Groups.Video)
	fillRandomlyGroupsGroupWall(&(*o).Groups.Wall)
	(*o).Groups.Website = new(string)
	*(*o).Groups.Website = random.RandString()
	fillRandomlyGroupsGroupWiki(&(*o).Groups.Wiki)
}

func fillRandomlyGroupsGetTagListResponse(o *models.GroupsGetTagListResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.GroupsGroupTag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupTag(&((*o).Response)[i0])
	}
}

func fillRandomlyGroupsGetTokenPermissionsResponse(o *models.GroupsGetTokenPermissionsResponse) {
	(*o).Groups.Mask = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Permissions = make([]models.GroupsTokenPermissionSetting, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsTokenPermissionSetting(&((*o).Groups.Permissions)[i0])
	}
}

func fillRandomlyGroupsGetObjectExtendedResponse(o *models.GroupsGetObjectExtendedResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyGroupsGetResponse(o *models.GroupsGetResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Groups.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyGroupsIsMemberExtendedResponse(o *models.GroupsIsMemberExtendedResponse) {
	(*o).Groups.CanInvite = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.CanInvite)
	(*o).Groups.CanRecall = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.CanRecall)
	(*o).Groups.Invitation = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.Invitation)
	fillRandomlyBaseBoolInt(&(*o).Groups.Member)
	(*o).Groups.Request = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Groups.Request)
}

func fillRandomlyGroupsIsMemberResponse(o *models.GroupsIsMemberResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyGroupsIsMemberUserIdsExtendedResponse(o *models.GroupsIsMemberUserIdsExtendedResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.GroupsMemberStatusFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsMemberStatusFull(&((*o).Response)[i0])
	}
}

func fillRandomlyGroupsIsMemberUserIdsResponse(o *models.GroupsIsMemberUserIdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.GroupsMemberStatus, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsMemberStatus(&((*o).Response)[i0])
	}
}

func fillRandomlyGroupsSearchResponse(o *models.GroupsSearchResponse) {
	(*o).Groups.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Groups.Items = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Groups.Items)[i0])
	}
}

func fillRandomlyLeadFormsCreateResponse(o *models.LeadFormsCreateResponse) {
	(*o).Leadforms.FormId = random.RandInt()
	(*o).Leadforms.Url = random.RandString()
}

func fillRandomlyLeadFormsDeleteResponse(o *models.LeadFormsDeleteResponse) {
	(*o).Leadforms.FormId = random.RandInt()
}

func fillRandomlyLeadFormsGetLeadsResponse(o *models.LeadFormsGetLeadsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Leadforms.Leads = make([]models.LeadFormsLead, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyLeadFormsLead(&((*o).Leadforms.Leads)[i0])
	}
	(*o).Leadforms.NextPageToken = new(string)
	*(*o).Leadforms.NextPageToken = random.RandString()
}

func fillRandomlyLeadFormsGetResponse(o *models.LeadFormsGetResponse) {
	fillRandomlyLeadFormsForm(&(*o).Response)
}

func fillRandomlyLeadFormsListResponse(o *models.LeadFormsListResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.LeadFormsForm, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyLeadFormsForm(&((*o).Response)[i0])
	}
}

func fillRandomlyLeadFormsUploadUrlResponse(o *models.LeadFormsUploadUrlResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyLikesAddResponse(o *models.LikesAddResponse) {
	(*o).Likes.Likes = random.RandInt()
}

func fillRandomlyLikesDeleteResponse(o *models.LikesDeleteResponse) {
	(*o).Likes.Likes = random.RandInt()
}

func fillRandomlyLikesGetListExtendedResponse(o *models.LikesGetListExtendedResponse) {
	(*o).Likes.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Likes.Items = make([]models.UsersUserMin, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserMin(&((*o).Likes.Items)[i0])
	}
}

func fillRandomlyLikesGetListResponse(o *models.LikesGetListResponse) {
	(*o).Likes.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Likes.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Likes.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyLikesIsLikedResponse(o *models.LikesIsLikedResponse) {
	fillRandomlyBaseBoolInt(&(*o).Likes.Copied)
	fillRandomlyBaseBoolInt(&(*o).Likes.Liked)
}

func fillRandomlyMarketAddAlbumResponse(o *models.MarketAddAlbumResponse) {
	(*o).Market.AlbumsCount = new(int)
	*(*o).Market.AlbumsCount = random.RandInt()
	(*o).Market.MarketAlbumId = new(int)
	*(*o).Market.MarketAlbumId = random.RandInt()
}

func fillRandomlyMarketAddResponse(o *models.MarketAddResponse) {
	(*o).Market.MarketItemId = random.RandInt()
}

func fillRandomlyMarketCreateCommentResponse(o *models.MarketCreateCommentResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyMarketDeleteCommentResponse(o *models.MarketDeleteCommentResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyMarketGetAlbumByIdResponse(o *models.MarketGetAlbumByIdResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketAlbum)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketAlbum, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketAlbum(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetAlbumsResponse(o *models.MarketGetAlbumsResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketAlbum)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketAlbum, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketAlbum(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetByIdExtendedResponse(o *models.MarketGetByIdExtendedResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketItemFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketItemFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItemFull(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetByIdResponse(o *models.MarketGetByIdResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketItem)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItem(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetCategoriesNewResponse(o *models.MarketGetCategoriesNewResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketMarketCategoryTree, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketCategoryTree(&((*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetCategoriesResponse(o *models.MarketGetCategoriesResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketCategory)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketCategory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketCategory(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetCommentsResponse(o *models.MarketGetCommentsResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.WallWallComment)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&(*(*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetGroupOrdersResponse(o *models.MarketGetGroupOrdersResponse) {
	(*o).Market.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketOrder, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketOrder(&((*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetOrderByIdResponse(o *models.MarketGetOrderByIdResponse) {
	(*o).Market.Order = new(models.MarketOrder)
	fillRandomlyMarketOrder((*o).Market.Order)
}

func fillRandomlyMarketGetOrderItemsResponse(o *models.MarketGetOrderItemsResponse) {
	(*o).Market.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketOrderItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketOrderItem(&((*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetOrdersExtendedResponse(o *models.MarketGetOrdersExtendedResponse) {
	(*o).Market.Count = random.RandInt()
	(*o).Market.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Market.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketOrder, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketOrder(&((*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetOrdersResponse(o *models.MarketGetOrdersResponse) {
	(*o).Market.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketOrder, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketOrder(&((*o).Market.Items)[i0])
	}
}

func fillRandomlyMarketGetExtendedResponse(o *models.MarketGetExtendedResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketItemFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketItemFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItemFull(&(*(*o).Market.Items)[i0])
	}
	(*o).Market.Variants = new([]models.MarketMarketItemFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Variants = make([]models.MarketMarketItemFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItemFull(&(*(*o).Market.Variants)[i0])
	}
}

func fillRandomlyMarketGetResponse(o *models.MarketGetResponse) {
	(*o).Market.Count = new(int)
	*(*o).Market.Count = random.RandInt()
	(*o).Market.Items = new([]models.MarketMarketItem)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Items = make([]models.MarketMarketItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItem(&(*(*o).Market.Items)[i0])
	}
	(*o).Market.Variants = new([]models.MarketMarketItem)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Variants = make([]models.MarketMarketItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItem(&(*(*o).Market.Variants)[i0])
	}
}

func fillRandomlyMarketRestoreCommentResponse(o *models.MarketRestoreCommentResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyMarketSearchExtendedResponse(o *models.MarketSearchExtendedResponse) {
	(*o).Market.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketMarketItemFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItemFull(&((*o).Market.Items)[i0])
	}
	(*o).Market.Variants = new([]models.MarketMarketItemFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Variants = make([]models.MarketMarketItemFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItemFull(&(*(*o).Market.Variants)[i0])
	}
	fillRandomlyMarketServicesViewType(&(*o).Market.ViewType)
}

func fillRandomlyMarketSearchResponse(o *models.MarketSearchResponse) {
	(*o).Market.Count = random.RandInt()
	(*o).Market.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Market.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Market.Items = make([]models.MarketMarketItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItem(&((*o).Market.Items)[i0])
	}
	(*o).Market.Variants = new([]models.MarketMarketItem)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Market.Variants = make([]models.MarketMarketItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMarketMarketItem(&(*(*o).Market.Variants)[i0])
	}
	fillRandomlyMarketServicesViewType(&(*o).Market.ViewType)
}

func fillRandomlyMessagesCreateChatResponse(o *models.MessagesCreateChatResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyMessagesDeleteChatPhotoResponse(o *models.MessagesDeleteChatPhotoResponse) {
	(*o).Messages.Chat = new(models.MessagesChat)
	fillRandomlyMessagesChat((*o).Messages.Chat)
	(*o).Messages.MessageId = new(int)
	*(*o).Messages.MessageId = random.RandInt()
}

func fillRandomlyMessagesDeleteConversationResponse(o *models.MessagesDeleteConversationResponse) {
	(*o).Messages.LastDeletedId = random.RandInt()
}

func fillRandomlyMessagesDeleteResponse(o *models.MessagesDeleteResponse) {
}

func fillRandomlyMessagesEditResponse(o *models.MessagesEditResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyMessagesGetByConversationMessageIdExtendedResponse(o *models.MessagesGetByConversationMessageIdExtendedResponse) {
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetByConversationMessageIdResponse(o *models.MessagesGetByConversationMessageIdResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
}

func fillRandomlyMessagesGetByIdExtendedResponse(o *models.MessagesGetByIdExtendedResponse) {
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetByIdResponse(o *models.MessagesGetByIdResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
}

func fillRandomlyMessagesGetChatPreviewResponse(o *models.MessagesGetChatPreviewResponse) {
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	(*o).Messages.Preview = new(models.MessagesChatPreview)
	fillRandomlyMessagesChatPreview((*o).Messages.Preview)
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetChatChatIdsFieldsResponse(o *models.MessagesGetChatChatIdsFieldsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.MessagesChatFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesChatFull(&((*o).Response)[i0])
	}
}

func fillRandomlyMessagesGetChatChatIdsResponse(o *models.MessagesGetChatChatIdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.MessagesChat, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesChat(&((*o).Response)[i0])
	}
}

func fillRandomlyMessagesGetChatFieldsResponse(o *models.MessagesGetChatFieldsResponse) {
	fillRandomlyMessagesChatFull(&(*o).Response)
}

func fillRandomlyMessagesGetChatResponse(o *models.MessagesGetChatResponse) {
	fillRandomlyMessagesChat(&(*o).Response)
}

func fillRandomlyMessagesGetConversationMembersResponse(o *models.MessagesGetConversationMembersResponse) {
	fillRandomlyMessagesGetConversationMembers(&(*o).Response)
}

func fillRandomlyMessagesGetConversationsByIdExtendedResponse(o *models.MessagesGetConversationsByIdExtendedResponse) {
	fillRandomlyMessagesGetConversationByIdExtended(&(*o).Response)
}

func fillRandomlyMessagesGetConversationsByIdResponse(o *models.MessagesGetConversationsByIdResponse) {
	fillRandomlyMessagesGetConversationById(&(*o).Response)
}

func fillRandomlyMessagesGetConversationsResponse(o *models.MessagesGetConversationsResponse) {
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesConversationWithMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversationWithMessage(&((*o).Messages.Items)[i0])
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
	(*o).Messages.UnreadCount = new(int)
	*(*o).Messages.UnreadCount = random.RandInt()
}

func fillRandomlyMessagesGetHistoryAttachmentsResponse(o *models.MessagesGetHistoryAttachmentsResponse) {
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	(*o).Messages.Items = new([]models.MessagesHistoryAttachment)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Items = make([]models.MessagesHistoryAttachment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesHistoryAttachment(&(*(*o).Messages.Items)[i0])
	}
	(*o).Messages.NextFrom = new(string)
	*(*o).Messages.NextFrom = random.RandString()
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetHistoryExtendedResponse(o *models.MessagesGetHistoryExtendedResponse) {
	(*o).Messages.Conversations = new([]models.MessagesConversation)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Conversations = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&(*(*o).Messages.Conversations)[i0])
	}
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetHistoryResponse(o *models.MessagesGetHistoryResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
}

func fillRandomlyMessagesGetImportantMessagesExtendedResponse(o *models.MessagesGetImportantMessagesExtendedResponse) {
	(*o).Messages.Conversations = new([]models.MessagesConversation)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Conversations = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&(*(*o).Messages.Conversations)[i0])
	}
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	fillRandomlyMessagesMessagesArray(&(*o).Messages.Messages)
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetImportantMessagesResponse(o *models.MessagesGetImportantMessagesResponse) {
	(*o).Messages.Conversations = new([]models.MessagesConversation)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Conversations = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&(*(*o).Messages.Conversations)[i0])
	}
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	fillRandomlyMessagesMessagesArray(&(*o).Messages.Messages)
	(*o).Messages.Profiles = new([]models.UsersUser)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetIntentUsersResponse(o *models.MessagesGetIntentUsersResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Messages.Items)[i0] = random.RandInt()
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetInviteLinkResponse(o *models.MessagesGetInviteLinkResponse) {
	(*o).Messages.Link = new(string)
	*(*o).Messages.Link = random.RandString()
}

func fillRandomlyMessagesGetLastActivityResponse(o *models.MessagesGetLastActivityResponse) {
	fillRandomlyMessagesLastActivity(&(*o).Response)
}

func fillRandomlyMessagesGetLongPollHistoryResponse(o *models.MessagesGetLongPollHistoryResponse) {
	(*o).Messages.Chats = new([]models.MessagesChat)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Chats = make([]models.MessagesChat, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesChat(&(*(*o).Messages.Chats)[i0])
	}
	(*o).Messages.Conversations = new([]models.MessagesConversation)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Conversations = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&(*(*o).Messages.Conversations)[i0])
	}
	(*o).Messages.Credentials = new(models.MessagesLongpollParams)
	fillRandomlyMessagesLongpollParams((*o).Messages.Credentials)
	(*o).Messages.FromPts = new(int)
	*(*o).Messages.FromPts = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	(*o).Messages.History = new([][]int)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.History = make([][]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		l1 := random.RandIntn(random.MaxArrayLength + 1)
		(*(*o).Messages.History)[i0] = make([]int, l1)
		for i1 := 0; i1 < l1; i1++ {
			(*(*o).Messages.History)[i0][i1] = random.RandInt()
		}
	}
	(*o).Messages.Messages = new(models.MessagesLongpollMessages)
	fillRandomlyMessagesLongpollMessages((*o).Messages.Messages)
	(*o).Messages.More = new(bool)
	*(*o).Messages.More = random.RandBool()
	(*o).Messages.NewPts = new(int)
	*(*o).Messages.NewPts = random.RandInt()
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesGetLongPollServerResponse(o *models.MessagesGetLongPollServerResponse) {
	fillRandomlyMessagesLongpollParams(&(*o).Response)
}

func fillRandomlyMessagesIsMessagesFromGroupAllowedResponse(o *models.MessagesIsMessagesFromGroupAllowedResponse) {
	(*o).Messages.IsAllowed = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Messages.IsAllowed)
}

func fillRandomlyMessagesJoinChatByInviteLinkResponse(o *models.MessagesJoinChatByInviteLinkResponse) {
	(*o).Messages.ChatId = new(int)
	*(*o).Messages.ChatId = random.RandInt()
}

func fillRandomlyMessagesMarkAsImportantResponse(o *models.MessagesMarkAsImportantResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyMessagesPinResponse(o *models.MessagesPinResponse) {
	fillRandomlyMessagesPinnedMessage(&(*o).Response)
}

func fillRandomlyMessagesSearchConversationsExtendedResponse(o *models.MessagesSearchConversationsExtendedResponse) {
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&((*o).Messages.Items)[i0])
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesSearchConversationsResponse(o *models.MessagesSearchConversationsResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&((*o).Messages.Items)[i0])
	}
}

func fillRandomlyMessagesSearchExtendedResponse(o *models.MessagesSearchExtendedResponse) {
	(*o).Messages.Conversations = new([]models.MessagesConversation)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Conversations = make([]models.MessagesConversation, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesConversation(&(*(*o).Messages.Conversations)[i0])
	}
	(*o).Messages.Count = random.RandInt()
	(*o).Messages.Groups = new([]models.GroupsGroupFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Messages.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
	(*o).Messages.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Messages.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Messages.Profiles)[i0])
	}
}

func fillRandomlyMessagesSearchResponse(o *models.MessagesSearchResponse) {
	(*o).Messages.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Messages.Items = make([]models.MessagesMessage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesMessage(&((*o).Messages.Items)[i0])
	}
}

func fillRandomlyMessagesSendResponse(o *models.MessagesSendResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyMessagesSendUserIdsResponse(o *models.MessagesSendUserIdsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.MessagesSendUserIdsResponseItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyMessagesSendUserIdsResponseItem(&((*o).Response)[i0])
	}
}

func fillRandomlyMessagesSetChatPhotoResponse(o *models.MessagesSetChatPhotoResponse) {
	(*o).Messages.Chat = new(models.MessagesChat)
	fillRandomlyMessagesChat((*o).Messages.Chat)
	(*o).Messages.MessageId = new(int)
	*(*o).Messages.MessageId = random.RandInt()
}

func fillRandomlyNewsfeedGenericResponse(o *models.NewsfeedGenericResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Newsfeed.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Items = make([]models.NewsfeedNewsfeedItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNewsfeedNewsfeedItem(&((*o).Newsfeed.Items)[i0])
	}
	(*o).Newsfeed.NewReturnedNewsItemsCount = new(int)
	*(*o).Newsfeed.NewReturnedNewsItemsCount = random.RandInt()
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Newsfeed.Profiles)[i0])
	}
}

func fillRandomlyNewsfeedGetBannedExtendedResponse(o *models.NewsfeedGetBannedExtendedResponse) {
	(*o).Newsfeed.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Newsfeed.Groups)[i0])
	}
	(*o).Newsfeed.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Newsfeed.Profiles)[i0])
	}
}

func fillRandomlyNewsfeedGetBannedResponse(o *models.NewsfeedGetBannedResponse) {
	(*o).Newsfeed.Groups = new([]int)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Groups = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Newsfeed.Groups)[i0] = random.RandInt()
	}
	(*o).Newsfeed.Members = new([]int)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Members = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Newsfeed.Members)[i0] = random.RandInt()
	}
}

func fillRandomlyNewsfeedGetCommentsResponse(o *models.NewsfeedGetCommentsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Newsfeed.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Items = make([]models.NewsfeedNewsfeedItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNewsfeedNewsfeedItem(&((*o).Newsfeed.Items)[i0])
	}
	(*o).Newsfeed.NextFrom = new(string)
	*(*o).Newsfeed.NextFrom = random.RandString()
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Newsfeed.Profiles)[i0])
	}
}

func fillRandomlyNewsfeedGetListsExtendedResponse(o *models.NewsfeedGetListsExtendedResponse) {
	(*o).Newsfeed.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Items = make([]models.NewsfeedListFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNewsfeedListFull(&((*o).Newsfeed.Items)[i0])
	}
}

func fillRandomlyNewsfeedGetListsResponse(o *models.NewsfeedGetListsResponse) {
	(*o).Newsfeed.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Items = make([]models.NewsfeedList, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNewsfeedList(&((*o).Newsfeed.Items)[i0])
	}
}

func fillRandomlyNewsfeedGetMentionsResponse(o *models.NewsfeedGetMentionsResponse) {
	(*o).Newsfeed.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Newsfeed.Items = make([]models.WallWallpostToId, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostToId(&((*o).Newsfeed.Items)[i0])
	}
}

func fillRandomlyNewsfeedGetSuggestedSourcesResponse(o *models.NewsfeedGetSuggestedSourcesResponse) {
	(*o).Newsfeed.Count = new(int)
	*(*o).Newsfeed.Count = random.RandInt()
	(*o).Newsfeed.Items = new([]models.UsersSubscriptionsItem)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Items = make([]models.UsersSubscriptionsItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersSubscriptionsItem(&(*(*o).Newsfeed.Items)[i0])
	}
}

func fillRandomlyNewsfeedIgnoreItemResponse(o *models.NewsfeedIgnoreItemResponse) {
	(*o).Newsfeed.Status = random.RandBool()
}

func fillRandomlyNewsfeedSaveListResponse(o *models.NewsfeedSaveListResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyNewsfeedSearchExtendedResponse(o *models.NewsfeedSearchExtendedResponse) {
	(*o).Newsfeed.Count = new(int)
	*(*o).Newsfeed.Count = random.RandInt()
	(*o).Newsfeed.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Newsfeed.Groups)[i0])
	}
	(*o).Newsfeed.Items = new([]models.WallWallpostFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&(*(*o).Newsfeed.Items)[i0])
	}
	(*o).Newsfeed.NextFrom = new(string)
	*(*o).Newsfeed.NextFrom = random.RandString()
	(*o).Newsfeed.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Newsfeed.Profiles)[i0])
	}
	(*o).Newsfeed.SuggestedQueries = new([]string)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.SuggestedQueries = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Newsfeed.SuggestedQueries)[i0] = random.RandString()
	}
	(*o).Newsfeed.TotalCount = new(int)
	*(*o).Newsfeed.TotalCount = random.RandInt()
}

func fillRandomlyNewsfeedSearchResponse(o *models.NewsfeedSearchResponse) {
	(*o).Newsfeed.Count = new(int)
	*(*o).Newsfeed.Count = random.RandInt()
	(*o).Newsfeed.Items = new([]models.WallWallpostFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&(*(*o).Newsfeed.Items)[i0])
	}
	(*o).Newsfeed.NextFrom = new(string)
	*(*o).Newsfeed.NextFrom = random.RandString()
	(*o).Newsfeed.SuggestedQueries = new([]string)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Newsfeed.SuggestedQueries = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Newsfeed.SuggestedQueries)[i0] = random.RandString()
	}
	(*o).Newsfeed.TotalCount = new(int)
	*(*o).Newsfeed.TotalCount = random.RandInt()
}

func fillRandomlyNotesAddResponse(o *models.NotesAddResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyNotesCreateCommentResponse(o *models.NotesCreateCommentResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyNotesGetByIdResponse(o *models.NotesGetByIdResponse) {
	fillRandomlyNotesNote(&(*o).Response)
}

func fillRandomlyNotesGetCommentsResponse(o *models.NotesGetCommentsResponse) {
	(*o).Notes.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Notes.Items = make([]models.NotesNoteComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNotesNoteComment(&((*o).Notes.Items)[i0])
	}
}

func fillRandomlyNotesGetResponse(o *models.NotesGetResponse) {
	(*o).Notes.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Notes.Items = make([]models.NotesNote, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNotesNote(&((*o).Notes.Items)[i0])
	}
}

func fillRandomlyNotificationsGetResponse(o *models.NotificationsGetResponse) {
	(*o).Notifications.Apps = new([]models.AppsApp)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Apps = make([]models.AppsApp, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyAppsApp(&(*(*o).Notifications.Apps)[i0])
	}
	(*o).Notifications.Count = new(int)
	*(*o).Notifications.Count = random.RandInt()
	(*o).Notifications.Groups = new([]models.GroupsGroup)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Notifications.Groups)[i0])
	}
	(*o).Notifications.Items = new([]models.NotificationsNotificationItem)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Items = make([]models.NotificationsNotificationItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNotificationsNotificationItem(&(*(*o).Notifications.Items)[i0])
	}
	(*o).Notifications.LastViewed = new(int)
	*(*o).Notifications.LastViewed = random.RandInt()
	(*o).Notifications.NextFrom = new(string)
	*(*o).Notifications.NextFrom = random.RandString()
	(*o).Notifications.Photos = new([]models.PhotosPhoto)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Photos = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&(*(*o).Notifications.Photos)[i0])
	}
	(*o).Notifications.Profiles = new([]models.UsersUser)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&(*(*o).Notifications.Profiles)[i0])
	}
	(*o).Notifications.Ttl = new(int)
	*(*o).Notifications.Ttl = random.RandInt()
	(*o).Notifications.Videos = new([]models.VideoVideo)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Notifications.Videos = make([]models.VideoVideo, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideo(&(*(*o).Notifications.Videos)[i0])
	}
}

func fillRandomlyNotificationsMarkAsViewedResponse(o *models.NotificationsMarkAsViewedResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyNotificationsSendMessageResponse(o *models.NotificationsSendMessageResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.NotificationsSendMessageItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyNotificationsSendMessageItem(&((*o).Response)[i0])
	}
}

func fillRandomlyOrdersCancelSubscriptionResponse(o *models.OrdersCancelSubscriptionResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyOrdersChangeStateResponse(o *models.OrdersChangeStateResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyOrdersGetAmountResponse(o *models.OrdersGetAmountResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.OrdersAmount, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyOrdersAmount(&((*o).Response)[i0])
	}
}

func fillRandomlyOrdersGetByIdResponse(o *models.OrdersGetByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.OrdersOrder, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyOrdersOrder(&((*o).Response)[i0])
	}
}

func fillRandomlyOrdersGetUserSubscriptionByIdResponse(o *models.OrdersGetUserSubscriptionByIdResponse) {
	fillRandomlyOrdersSubscription(&(*o).Response)
}

func fillRandomlyOrdersGetUserSubscriptionsResponse(o *models.OrdersGetUserSubscriptionsResponse) {
	(*o).Orders.Count = new(int)
	*(*o).Orders.Count = random.RandInt()
	(*o).Orders.Items = new([]models.OrdersSubscription)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Orders.Items = make([]models.OrdersSubscription, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyOrdersSubscription(&(*(*o).Orders.Items)[i0])
	}
}

func fillRandomlyOrdersGetResponse(o *models.OrdersGetResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.OrdersOrder, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyOrdersOrder(&((*o).Response)[i0])
	}
}

func fillRandomlyOrdersUpdateSubscriptionResponse(o *models.OrdersUpdateSubscriptionResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyPagesGetHistoryResponse(o *models.PagesGetHistoryResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PagesWikipageHistory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPagesWikipageHistory(&((*o).Response)[i0])
	}
}

func fillRandomlyPagesGetTitlesResponse(o *models.PagesGetTitlesResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PagesWikipage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPagesWikipage(&((*o).Response)[i0])
	}
}

func fillRandomlyPagesGetVersionResponse(o *models.PagesGetVersionResponse) {
	fillRandomlyPagesWikipageFull(&(*o).Response)
}

func fillRandomlyPagesGetResponse(o *models.PagesGetResponse) {
	fillRandomlyPagesWikipageFull(&(*o).Response)
}

func fillRandomlyPagesParseWikiResponse(o *models.PagesParseWikiResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyPagesSaveAccessResponse(o *models.PagesSaveAccessResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPagesSaveResponse(o *models.PagesSaveResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPhotosCopyResponse(o *models.PhotosCopyResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPhotosCreateAlbumResponse(o *models.PhotosCreateAlbumResponse) {
	fillRandomlyPhotosPhotoAlbumFull(&(*o).Response)
}

func fillRandomlyPhotosCreateCommentResponse(o *models.PhotosCreateCommentResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPhotosDeleteCommentResponse(o *models.PhotosDeleteCommentResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyPhotosGetAlbumsCountResponse(o *models.PhotosGetAlbumsCountResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPhotosGetAlbumsResponse(o *models.PhotosGetAlbumsResponse) {
	(*o).Photos.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Items = make([]models.PhotosPhotoAlbumFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhotoAlbumFull(&((*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosGetAllCommentsResponse(o *models.PhotosGetAllCommentsResponse) {
	(*o).Photos.Count = new(int)
	*(*o).Photos.Count = random.RandInt()
	(*o).Photos.Items = new([]models.WallWallComment)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&(*(*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosGetAllExtendedResponse(o *models.PhotosGetAllExtendedResponse) {
	(*o).Photos.Count = new(int)
	*(*o).Photos.Count = random.RandInt()
	(*o).Photos.Items = new([]models.PhotosPhotoFullXtrRealOffset)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Items = make([]models.PhotosPhotoFullXtrRealOffset, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhotoFullXtrRealOffset(&(*(*o).Photos.Items)[i0])
	}
	(*o).Photos.More = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Photos.More)
}

func fillRandomlyPhotosGetAllResponse(o *models.PhotosGetAllResponse) {
	(*o).Photos.Count = new(int)
	*(*o).Photos.Count = random.RandInt()
	(*o).Photos.Items = new([]models.PhotosPhotoXtrRealOffset)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Items = make([]models.PhotosPhotoXtrRealOffset, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhotoXtrRealOffset(&(*(*o).Photos.Items)[i0])
	}
	(*o).Photos.More = new(models.BaseBoolInt)
	fillRandomlyBaseBoolInt((*o).Photos.More)
}

func fillRandomlyPhotosGetByIdResponse(o *models.PhotosGetByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosGetCommentsExtendedResponse(o *models.PhotosGetCommentsExtendedResponse) {
	(*o).Photos.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Photos.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Photos.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Photos.Profiles)[i0])
	}
	(*o).Photos.RealOffset = new(int)
	*(*o).Photos.RealOffset = random.RandInt()
}

func fillRandomlyPhotosGetCommentsResponse(o *models.PhotosGetCommentsResponse) {
	(*o).Photos.Count = new(int)
	*(*o).Photos.Count = random.RandInt()
	(*o).Photos.Items = new([]models.WallWallComment)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&(*(*o).Photos.Items)[i0])
	}
	(*o).Photos.RealOffset = new(int)
	*(*o).Photos.RealOffset = random.RandInt()
}

func fillRandomlyPhotosGetMarketUploadServerResponse(o *models.PhotosGetMarketUploadServerResponse) {
	fillRandomlyBaseUploadServer(&(*o).Response)
}

func fillRandomlyPhotosGetMessagesUploadServerResponse(o *models.PhotosGetMessagesUploadServerResponse) {
	fillRandomlyPhotosPhotoUpload(&(*o).Response)
}

func fillRandomlyPhotosGetNewTagsResponse(o *models.PhotosGetNewTagsResponse) {
	(*o).Photos.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Items = make([]models.PhotosPhotoXtrTagInfo, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhotoXtrTagInfo(&((*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosGetTagsResponse(o *models.PhotosGetTagsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhotoTag, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhotoTag(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosGetUploadServerResponse(o *models.PhotosGetUploadServerResponse) {
	fillRandomlyPhotosPhotoUpload(&(*o).Response)
}

func fillRandomlyPhotosGetUserPhotosResponse(o *models.PhotosGetUserPhotosResponse) {
	(*o).Photos.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Items = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosGetWallUploadServerResponse(o *models.PhotosGetWallUploadServerResponse) {
	fillRandomlyPhotosPhotoUpload(&(*o).Response)
}

func fillRandomlyPhotosGetResponse(o *models.PhotosGetResponse) {
	(*o).Photos.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Photos.Items = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosMarketAlbumUploadResponse(o *models.PhotosMarketAlbumUploadResponse) {
	(*o).Photos.Gid = new(int)
	*(*o).Photos.Gid = random.RandInt()
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPhotosMarketUploadResponse(o *models.PhotosMarketUploadResponse) {
	(*o).Photos.CropData = new(string)
	*(*o).Photos.CropData = random.RandString()
	(*o).Photos.CropHash = new(string)
	*(*o).Photos.CropHash = random.RandString()
	(*o).Photos.GroupId = new(int)
	*(*o).Photos.GroupId = random.RandInt()
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPhotosMessageUploadResponse(o *models.PhotosMessageUploadResponse) {
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPhotosOwnerCoverUploadResponse(o *models.PhotosOwnerCoverUploadResponse) {
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
}

func fillRandomlyPhotosOwnerUploadResponse(o *models.PhotosOwnerUploadResponse) {
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPhotosPhotoUploadResponse(o *models.PhotosPhotoUploadResponse) {
	(*o).Photos.Aid = new(int)
	*(*o).Photos.Aid = random.RandInt()
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.PhotosList = new(string)
	*(*o).Photos.PhotosList = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPhotosPutTagResponse(o *models.PhotosPutTagResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyPhotosRestoreCommentResponse(o *models.PhotosRestoreCommentResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyPhotosSaveMarketAlbumPhotoResponse(o *models.PhotosSaveMarketAlbumPhotoResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosSaveMarketPhotoResponse(o *models.PhotosSaveMarketPhotoResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosSaveMessagesPhotoResponse(o *models.PhotosSaveMessagesPhotoResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosSaveOwnerCoverPhotoResponse(o *models.PhotosSaveOwnerCoverPhotoResponse) {
	(*o).Photos.Images = new([]models.BaseImage)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Images = make([]models.BaseImage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBaseImage(&(*(*o).Photos.Images)[i0])
	}
}

func fillRandomlyPhotosSaveOwnerPhotoResponse(o *models.PhotosSaveOwnerPhotoResponse) {
	(*o).Photos.PhotoHash = random.RandString()
	(*o).Photos.PhotoSrc = random.RandString()
	(*o).Photos.PhotoSrcBig = new(string)
	*(*o).Photos.PhotoSrcBig = random.RandString()
	(*o).Photos.PhotoSrcSmall = new(string)
	*(*o).Photos.PhotoSrcSmall = random.RandString()
	(*o).Photos.PostId = new(int)
	*(*o).Photos.PostId = random.RandInt()
	(*o).Photos.Saved = new(int)
	*(*o).Photos.Saved = random.RandInt()
}

func fillRandomlyPhotosSaveWallPhotoResponse(o *models.PhotosSaveWallPhotoResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosSaveResponse(o *models.PhotosSaveResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&((*o).Response)[i0])
	}
}

func fillRandomlyPhotosSearchResponse(o *models.PhotosSearchResponse) {
	(*o).Photos.Count = new(int)
	*(*o).Photos.Count = random.RandInt()
	(*o).Photos.Items = new([]models.PhotosPhoto)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Photos.Items = make([]models.PhotosPhoto, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPhotosPhoto(&(*(*o).Photos.Items)[i0])
	}
}

func fillRandomlyPhotosWallUploadResponse(o *models.PhotosWallUploadResponse) {
	(*o).Photos.Hash = new(string)
	*(*o).Photos.Hash = random.RandString()
	(*o).Photos.Photo = new(string)
	*(*o).Photos.Photo = random.RandString()
	(*o).Photos.Server = new(int)
	*(*o).Photos.Server = random.RandInt()
}

func fillRandomlyPodcastsSearchPodcastResponse(o *models.PodcastsSearchPodcastResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Podcasts.Podcasts = make([]models.PodcastExternalData, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPodcastExternalData(&((*o).Podcasts.Podcasts)[i0])
	}
	(*o).Podcasts.ResultsTotal = random.RandInt()
}

func fillRandomlyPollsAddVoteResponse(o *models.PollsAddVoteResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyPollsCreateResponse(o *models.PollsCreateResponse) {
	fillRandomlyPollsPoll(&(*o).Response)
}

func fillRandomlyPollsDeleteVoteResponse(o *models.PollsDeleteVoteResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyPollsGetBackgroundsResponse(o *models.PollsGetBackgroundsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PollsBackground, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPollsBackground(&((*o).Response)[i0])
	}
}

func fillRandomlyPollsGetByIdResponse(o *models.PollsGetByIdResponse) {
	fillRandomlyPollsPoll(&(*o).Response)
}

func fillRandomlyPollsGetVotersResponse(o *models.PollsGetVotersResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PollsVoters, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPollsVoters(&((*o).Response)[i0])
	}
}

func fillRandomlyPollsSavePhotoResponse(o *models.PollsSavePhotoResponse) {
	fillRandomlyPollsBackground(&(*o).Response)
}

func fillRandomlyPrettyCardsCreateResponse(o *models.PrettyCardsCreateResponse) {
	(*o).Prettycards.CardId = random.RandString()
	(*o).Prettycards.OwnerId = random.RandInt()
}

func fillRandomlyPrettyCardsDeleteResponse(o *models.PrettyCardsDeleteResponse) {
	(*o).Prettycards.CardId = random.RandString()
	(*o).Prettycards.Error = new(string)
	*(*o).Prettycards.Error = random.RandString()
	(*o).Prettycards.OwnerId = random.RandInt()
}

func fillRandomlyPrettyCardsEditResponse(o *models.PrettyCardsEditResponse) {
	(*o).Prettycards.CardId = random.RandString()
	(*o).Prettycards.OwnerId = random.RandInt()
}

func fillRandomlyPrettyCardsGetByIdResponse(o *models.PrettyCardsGetByIdResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.PrettyCardsPrettyCardOrError, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPrettyCardsPrettyCardOrError(&((*o).Response)[i0])
	}
}

func fillRandomlyPrettyCardsGetUploadURLResponse(o *models.PrettyCardsGetUploadURLResponse) {
	(*o).Response = random.RandString()
}

func fillRandomlyPrettyCardsGetResponse(o *models.PrettyCardsGetResponse) {
	(*o).Prettycards.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Prettycards.Items = make([]models.PrettyCardsPrettyCard, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyPrettyCardsPrettyCard(&((*o).Prettycards.Items)[i0])
	}
}

func fillRandomlySearchGetHintsResponse(o *models.SearchGetHintsResponse) {
	(*o).Search.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Search.Items = make([]models.SearchHint, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySearchHint(&((*o).Search.Items)[i0])
	}
	(*o).Search.SuggestedQueries = new([]string)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Search.SuggestedQueries = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		(*(*o).Search.SuggestedQueries)[i0] = random.RandString()
	}
}

func fillRandomlySecureCheckTokenResponse(o *models.SecureCheckTokenResponse) {
	fillRandomlySecureTokenChecked(&(*o).Response)
}

func fillRandomlySecureGetAppBalanceResponse(o *models.SecureGetAppBalanceResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlySecureGetSMSHistoryResponse(o *models.SecureGetSMSHistoryResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.SecureSmsNotification, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySecureSmsNotification(&((*o).Response)[i0])
	}
}

func fillRandomlySecureGetTransactionsHistoryResponse(o *models.SecureGetTransactionsHistoryResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.SecureTransaction, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySecureTransaction(&((*o).Response)[i0])
	}
}

func fillRandomlySecureGetUserLevelResponse(o *models.SecureGetUserLevelResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.SecureLevel, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySecureLevel(&((*o).Response)[i0])
	}
}

func fillRandomlySecureGiveEventStickerResponse(o *models.SecureGiveEventStickerResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.SecureGiveEventStickerItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySecureGiveEventStickerItem(&((*o).Response)[i0])
	}
}

func fillRandomlySecureSendNotificationResponse(o *models.SecureSendNotificationResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlySecureSetCounterArrayResponse(o *models.SecureSetCounterArrayResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.SecureSetCounterItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlySecureSetCounterItem(&((*o).Response)[i0])
	}
}

func fillRandomlyStatsGetPostReachResponse(o *models.StatsGetPostReachResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.StatsWallpostStat, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStatsWallpostStat(&((*o).Response)[i0])
	}
}

func fillRandomlyStatsGetResponse(o *models.StatsGetResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.StatsPeriod, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStatsPeriod(&((*o).Response)[i0])
	}
}

func fillRandomlyStatusGetResponse(o *models.StatusGetResponse) {
	fillRandomlyStatusStatus(&(*o).Response)
}

func fillRandomlyStorageGetKeysResponse(o *models.StorageGetKeysResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]string, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandString()
	}
}

func fillRandomlyStorageGetResponse(o *models.StorageGetResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.StorageValue, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStorageValue(&((*o).Response)[i0])
	}
}

func fillRandomlyStoreGetFavoriteStickersResponse(o *models.StoreGetFavoriteStickersResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.BaseSticker, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyBaseSticker(&((*o).Response)[i0])
	}
}

func fillRandomlyStoreGetProductsResponse(o *models.StoreGetProductsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.StoreProduct, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoreProduct(&((*o).Response)[i0])
	}
}

func fillRandomlyStoreGetStickersKeywordsResponse(o *models.StoreGetStickersKeywordsResponse) {
	(*o).Store.ChunksCount = new(int)
	*(*o).Store.ChunksCount = random.RandInt()
	(*o).Store.ChunksHash = new(string)
	*(*o).Store.ChunksHash = random.RandString()
	(*o).Store.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Store.Dictionary = make([]models.StoreStickersKeyword, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoreStickersKeyword(&((*o).Store.Dictionary)[i0])
	}
}

func fillRandomlyStoriesGetBannedExtendedResponse(o *models.StoriesGetBannedExtendedResponse) {
	(*o).Stories.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Stories.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Stories.Items)[i0] = random.RandInt()
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Stories.Profiles)[i0])
	}
}

func fillRandomlyStoriesGetBannedResponse(o *models.StoriesGetBannedResponse) {
	(*o).Stories.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Stories.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyStoriesGetByIdExtendedResponse(o *models.StoriesGetByIdExtendedResponse) {
	(*o).Stories.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Stories.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]models.StoriesStory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoriesStory(&((*o).Stories.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Stories.Profiles)[i0])
	}
}

func fillRandomlyStoriesGetPhotoUploadServerResponse(o *models.StoriesGetPhotoUploadServerResponse) {
	(*o).Stories.UploadUrl = random.RandString()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.UserIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Stories.UserIds)[i0] = random.RandInt()
	}
}

func fillRandomlyStoriesGetStatsResponse(o *models.StoriesGetStatsResponse) {
	fillRandomlyStoriesStoryStats(&(*o).Response)
}

func fillRandomlyStoriesGetVideoUploadServerResponse(o *models.StoriesGetVideoUploadServerResponse) {
	(*o).Stories.UploadUrl = random.RandString()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.UserIds = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Stories.UserIds)[i0] = random.RandInt()
	}
}

func fillRandomlyStoriesGetViewersExtendedV5115Response(o *models.StoriesGetViewersExtendedV5115Response) {
	(*o).Stories.Count = random.RandInt()
	(*o).Stories.HiddenReason = new(string)
	*(*o).Stories.HiddenReason = random.RandString()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]models.StoriesViewersItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoriesViewersItem(&((*o).Stories.Items)[i0])
	}
	(*o).Stories.NextFrom = new(string)
	*(*o).Stories.NextFrom = random.RandString()
}

func fillRandomlyStoriesGetViewersExtendedResponse(o *models.StoriesGetViewersExtendedResponse) {
	(*o).Stories.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Stories.Items)[i0])
	}
}

func fillRandomlyStoriesGetV5113Response(o *models.StoriesGetV5113Response) {
	(*o).Stories.Count = random.RandInt()
	(*o).Stories.Groups = new([]models.GroupsGroup)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Stories.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]models.StoriesFeedItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoriesFeedItem(&((*o).Stories.Items)[i0])
	}
	(*o).Stories.NeedUploadScreen = new(bool)
	*(*o).Stories.NeedUploadScreen = random.RandBool()
	(*o).Stories.NextFrom = new(string)
	*(*o).Stories.NextFrom = random.RandString()
	(*o).Stories.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Stories.Profiles)[i0])
	}
}

func fillRandomlyStoriesGetResponse(o *models.StoriesGetResponse) {
	(*o).Stories.Count = random.RandInt()
	(*o).Stories.Groups = new([]models.GroupsGroup)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Stories.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([][]models.StoriesStory, l0)
	for i0 := 0; i0 < l0; i0++ {
		l1 := random.RandIntn(random.MaxArrayLength + 1)
		((*o).Stories.Items)[i0] = make([]models.StoriesStory, l1)
		for i1 := 0; i1 < l1; i1++ {
			fillRandomlyStoriesStory(&((*o).Stories.Items)[i0][i1])
		}
	}
	(*o).Stories.NeedUploadScreen = new(bool)
	*(*o).Stories.NeedUploadScreen = random.RandBool()
	(*o).Stories.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Stories.Profiles)[i0])
	}
	(*o).Stories.PromoData = new(models.StoriesPromoBlock)
	fillRandomlyStoriesPromoBlock((*o).Stories.PromoData)
}

func fillRandomlyStoriesSaveResponse(o *models.StoriesSaveResponse) {
	(*o).Stories.Count = random.RandInt()
	(*o).Stories.Groups = new([]models.GroupsGroup)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&(*(*o).Stories.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Stories.Items = make([]models.StoriesStory, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyStoriesStory(&((*o).Stories.Items)[i0])
	}
	(*o).Stories.Profiles = new([]models.UsersUser)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Stories.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&(*(*o).Stories.Profiles)[i0])
	}
}

func fillRandomlyStoriesUploadResponse(o *models.StoriesUploadResponse) {
	(*o).Stories.UploadResult = new(string)
	*(*o).Stories.UploadResult = random.RandString()
}

func fillRandomlyStreamingGetServerUrlResponse(o *models.StreamingGetServerUrlResponse) {
	(*o).Streaming.Endpoint = new(string)
	*(*o).Streaming.Endpoint = random.RandString()
	(*o).Streaming.Key = new(string)
	*(*o).Streaming.Key = random.RandString()
}

func fillRandomlyUsersGetFollowersFieldsResponse(o *models.UsersGetFollowersFieldsResponse) {
	(*o).Users.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Users.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Users.Items)[i0])
	}
}

func fillRandomlyUsersGetFollowersResponse(o *models.UsersGetFollowersResponse) {
	(*o).Users.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Users.Items = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Users.Items)[i0] = random.RandInt()
	}
}

func fillRandomlyUsersGetSubscriptionsExtendedResponse(o *models.UsersGetSubscriptionsExtendedResponse) {
	(*o).Users.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Users.Items = make([]models.UsersSubscriptionsItem, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersSubscriptionsItem(&((*o).Users.Items)[i0])
	}
}

func fillRandomlyUsersGetSubscriptionsResponse(o *models.UsersGetSubscriptionsResponse) {
	fillRandomlyGroupsGroupsArray(&(*o).Users.Groups)
	fillRandomlyUsersUsersArray(&(*o).Users.Users)
}

func fillRandomlyUsersGetResponse(o *models.UsersGetResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Response)[i0])
	}
}

func fillRandomlyUsersSearchResponse(o *models.UsersSearchResponse) {
	(*o).Users.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Users.Items = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Users.Items)[i0])
	}
}

func fillRandomlyUtilsCheckLinkResponse(o *models.UtilsCheckLinkResponse) {
	fillRandomlyUtilsLinkChecked(&(*o).Response)
}

func fillRandomlyUtilsGetLastShortenedLinksResponse(o *models.UtilsGetLastShortenedLinksResponse) {
	(*o).Utils.Count = new(int)
	*(*o).Utils.Count = random.RandInt()
	(*o).Utils.Items = new([]models.UtilsLastShortenedLink)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Utils.Items = make([]models.UtilsLastShortenedLink, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUtilsLastShortenedLink(&(*(*o).Utils.Items)[i0])
	}
}

func fillRandomlyUtilsGetLinkStatsExtendedResponse(o *models.UtilsGetLinkStatsExtendedResponse) {
	fillRandomlyUtilsLinkStatsExtended(&(*o).Response)
}

func fillRandomlyUtilsGetLinkStatsResponse(o *models.UtilsGetLinkStatsResponse) {
	fillRandomlyUtilsLinkStats(&(*o).Response)
}

func fillRandomlyUtilsGetServerTimeResponse(o *models.UtilsGetServerTimeResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyUtilsGetShortLinkResponse(o *models.UtilsGetShortLinkResponse) {
	fillRandomlyUtilsShortLink(&(*o).Response)
}

func fillRandomlyUtilsResolveScreenNameResponse(o *models.UtilsResolveScreenNameResponse) {
	fillRandomlyUtilsDomainResolved(&(*o).Response)
}

func fillRandomlyVideoAddAlbumResponse(o *models.VideoAddAlbumResponse) {
	(*o).Video.AlbumId = random.RandInt()
}

func fillRandomlyVideoChangeVideoAlbumsResponse(o *models.VideoChangeVideoAlbumsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyVideoCreateCommentResponse(o *models.VideoCreateCommentResponse) {
	(*o).Response = random.RandInt()
}

func fillRandomlyVideoGetAlbumByIdResponse(o *models.VideoGetAlbumByIdResponse) {
	fillRandomlyVideoVideoAlbumFull(&(*o).Response)
}

func fillRandomlyVideoGetAlbumsByVideoExtendedResponse(o *models.VideoGetAlbumsByVideoExtendedResponse) {
	(*o).Video.Count = new(int)
	*(*o).Video.Count = random.RandInt()
	(*o).Video.Items = new([]models.VideoVideoAlbumFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Video.Items = make([]models.VideoVideoAlbumFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoAlbumFull(&(*(*o).Video.Items)[i0])
	}
}

func fillRandomlyVideoGetAlbumsByVideoResponse(o *models.VideoGetAlbumsByVideoResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]int, l0)
	for i0 := 0; i0 < l0; i0++ {
		((*o).Response)[i0] = random.RandInt()
	}
}

func fillRandomlyVideoGetAlbumsExtendedResponse(o *models.VideoGetAlbumsExtendedResponse) {
	(*o).Video.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.VideoVideoAlbumFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoAlbumFull(&((*o).Video.Items)[i0])
	}
}

func fillRandomlyVideoGetAlbumsResponse(o *models.VideoGetAlbumsResponse) {
	(*o).Video.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.VideoVideoAlbum, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoAlbum(&((*o).Video.Items)[i0])
	}
}

func fillRandomlyVideoGetCommentsExtendedResponse(o *models.VideoGetCommentsExtendedResponse) {
	(*o).Video.CanPost = new(bool)
	*(*o).Video.CanPost = random.RandBool()
	(*o).Video.Count = random.RandInt()
	(*o).Video.CurrentLevelCount = new(int)
	*(*o).Video.CurrentLevelCount = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Video.Groups)[i0])
	}
	(*o).Video.GroupsCanPost = new(bool)
	*(*o).Video.GroupsCanPost = random.RandBool()
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Video.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&((*o).Video.Profiles)[i0])
	}
	(*o).Video.RealOffset = new(int)
	*(*o).Video.RealOffset = random.RandInt()
	(*o).Video.ShowReplyButton = new(bool)
	*(*o).Video.ShowReplyButton = random.RandBool()
}

func fillRandomlyVideoGetCommentsResponse(o *models.VideoGetCommentsResponse) {
	(*o).Video.CanPost = new(bool)
	*(*o).Video.CanPost = random.RandBool()
	(*o).Video.Count = random.RandInt()
	(*o).Video.CurrentLevelCount = new(int)
	*(*o).Video.CurrentLevelCount = random.RandInt()
	(*o).Video.GroupsCanPost = new(bool)
	*(*o).Video.GroupsCanPost = random.RandBool()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Video.Items)[i0])
	}
	(*o).Video.RealOffset = new(int)
	*(*o).Video.RealOffset = random.RandInt()
	(*o).Video.ShowReplyButton = new(bool)
	*(*o).Video.ShowReplyButton = random.RandBool()
}

func fillRandomlyVideoGetResponse(o *models.VideoGetResponse) {
	(*o).Video.Count = random.RandInt()
	(*o).Video.Groups = new([]models.GroupsGroupFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Video.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&(*(*o).Video.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.VideoVideoFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoFull(&((*o).Video.Items)[i0])
	}
	(*o).Video.Profiles = new([]models.UsersUserFull)
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Video.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&(*(*o).Video.Profiles)[i0])
	}
}

func fillRandomlyVideoRestoreCommentResponse(o *models.VideoRestoreCommentResponse) {
	fillRandomlyBaseBoolInt(&(*o).Response)
}

func fillRandomlyVideoSaveResponse(o *models.VideoSaveResponse) {
	fillRandomlyVideoSaveResult(&(*o).Response)
}

func fillRandomlyVideoSearchExtendedResponse(o *models.VideoSearchExtendedResponse) {
	(*o).Video.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Video.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.VideoVideoFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoFull(&((*o).Video.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&((*o).Video.Profiles)[i0])
	}
}

func fillRandomlyVideoSearchResponse(o *models.VideoSearchResponse) {
	(*o).Video.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Video.Items = make([]models.VideoVideoFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyVideoVideoFull(&((*o).Video.Items)[i0])
	}
}

func fillRandomlyVideoUploadResponse(o *models.VideoUploadResponse) {
	(*o).Video.Size = new(int)
	*(*o).Video.Size = random.RandInt()
	(*o).Video.VideoId = new(int)
	*(*o).Video.VideoId = random.RandInt()
}

func fillRandomlyWallCreateCommentResponse(o *models.WallCreateCommentResponse) {
	(*o).Wall.CommentId = random.RandInt()
}

func fillRandomlyWallEditResponse(o *models.WallEditResponse) {
	(*o).Wall.PostId = random.RandInt()
}

func fillRandomlyWallGetByIdExtendedResponse(o *models.WallGetByIdExtendedResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Wall.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Wall.Profiles)[i0])
	}
}

func fillRandomlyWallGetByIdLegacyResponse(o *models.WallGetByIdLegacyResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Response = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Response)[i0])
	}
}

func fillRandomlyWallGetByIdResponse(o *models.WallGetByIdResponse) {
	(*o).Wall.Items = new([]models.WallWallpostFull)
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	*(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&(*(*o).Wall.Items)[i0])
	}
}

func fillRandomlyWallGetCommentExtendedResponse(o *models.WallGetCommentExtendedResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Wall.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&((*o).Wall.Profiles)[i0])
	}
}

func fillRandomlyWallGetCommentResponse(o *models.WallGetCommentResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Wall.Items)[i0])
	}
}

func fillRandomlyWallGetCommentsExtendedResponse(o *models.WallGetCommentsExtendedResponse) {
	(*o).Wall.CanPost = new(bool)
	*(*o).Wall.CanPost = random.RandBool()
	(*o).Wall.Count = random.RandInt()
	(*o).Wall.CurrentLevelCount = new(int)
	*(*o).Wall.CurrentLevelCount = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Wall.Groups)[i0])
	}
	(*o).Wall.GroupsCanPost = new(bool)
	*(*o).Wall.GroupsCanPost = random.RandBool()
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&((*o).Wall.Profiles)[i0])
	}
	(*o).Wall.ShowReplyButton = new(bool)
	*(*o).Wall.ShowReplyButton = random.RandBool()
}

func fillRandomlyWallGetCommentsResponse(o *models.WallGetCommentsResponse) {
	(*o).Wall.CanPost = new(bool)
	*(*o).Wall.CanPost = random.RandBool()
	(*o).Wall.Count = random.RandInt()
	(*o).Wall.CurrentLevelCount = new(int)
	*(*o).Wall.CurrentLevelCount = random.RandInt()
	(*o).Wall.GroupsCanPost = new(bool)
	*(*o).Wall.GroupsCanPost = random.RandBool()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallComment(&((*o).Wall.Items)[i0])
	}
	(*o).Wall.ShowReplyButton = new(bool)
	*(*o).Wall.ShowReplyButton = random.RandBool()
}

func fillRandomlyWallGetRepostsResponse(o *models.WallGetRepostsResponse) {
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroup, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroup(&((*o).Wall.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUser, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUser(&((*o).Wall.Profiles)[i0])
	}
}

func fillRandomlyWallGetExtendedResponse(o *models.WallGetExtendedResponse) {
	(*o).Wall.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Wall.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Wall.Profiles)[i0])
	}
}

func fillRandomlyWallGetResponse(o *models.WallGetResponse) {
	(*o).Wall.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
}

func fillRandomlyWallPostAdsStealthResponse(o *models.WallPostAdsStealthResponse) {
	(*o).Wall.PostId = random.RandInt()
}

func fillRandomlyWallPostResponse(o *models.WallPostResponse) {
	(*o).Wall.PostId = random.RandInt()
}

func fillRandomlyWallRepostResponse(o *models.WallRepostResponse) {
	(*o).Wall.LikesCount = random.RandInt()
	(*o).Wall.MailRepostCount = new(int)
	*(*o).Wall.MailRepostCount = random.RandInt()
	(*o).Wall.PostId = random.RandInt()
	(*o).Wall.RepostsCount = random.RandInt()
	(*o).Wall.Success = random.RandInt()
	(*o).Wall.WallRepostCount = new(int)
	*(*o).Wall.WallRepostCount = random.RandInt()
}

func fillRandomlyWallSearchExtendedResponse(o *models.WallSearchExtendedResponse) {
	(*o).Wall.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Groups = make([]models.GroupsGroupFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyGroupsGroupFull(&((*o).Wall.Groups)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
	l0 = random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Profiles = make([]models.UsersUserFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyUsersUserFull(&((*o).Wall.Profiles)[i0])
	}
}

func fillRandomlyWallSearchResponse(o *models.WallSearchResponse) {
	(*o).Wall.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Wall.Items = make([]models.WallWallpostFull, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWallWallpostFull(&((*o).Wall.Items)[i0])
	}
}

func fillRandomlyWidgetsGetCommentsResponse(o *models.WidgetsGetCommentsResponse) {
	(*o).Widgets.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Widgets.Posts = make([]models.WidgetsWidgetComment, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWidgetsWidgetComment(&((*o).Widgets.Posts)[i0])
	}
}

func fillRandomlyWidgetsGetPagesResponse(o *models.WidgetsGetPagesResponse) {
	(*o).Widgets.Count = random.RandInt()
	l0 := random.RandIntn(random.MaxArrayLength + 1)
	(*o).Widgets.Pages = make([]models.WidgetsWidgetPage, l0)
	for i0 := 0; i0 < l0; i0++ {
		fillRandomlyWidgetsWidgetPage(&((*o).Widgets.Pages)[i0])
	}
}
