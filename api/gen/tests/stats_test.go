// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package tests

import (
	"encoding/json"
	"github.com/defany/govk/api/gen/models"
	"github.com/defany/govk/api/gen/stats"
	"github.com/defany/govk/pkg/random"
	"github.com/defany/govk/vk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func fillRandomlyStatsGetRequest(r *requests.StatsGetRequest) {
	r.WithGroupId(random.RandInt())
	r.WithAppId(random.RandInt())
	r.WithTimestampFrom(random.RandInt())
	r.WithTimestampTo(random.RandInt())
	r.WithInterval(random.RandString())
	r.WithIntervalsCount(random.RandInt())
	lFilters := random.RandIntn(random.MaxArrayLength + 1)
	r.WithFilters(random.RandStringArr(lFilters))
	lStatsGroups := random.RandIntn(random.MaxArrayLength + 1)
	r.WithStatsGroups(random.RandStringArr(lStatsGroups))
	r.WithExtended(random.RandBool())
}

func TestVKStatsGetSuccess(t *testing.T) {
	params := requests.NewStatsGetRequest()
	fillRandomlyStatsGetRequest(&params)
	var expected models.StatsGetResponse
	fillRandomlyStatsGetResponse(&expected)
	expectedJSON, err := json.Marshal(expected)
	require.NoError(t, err)
	token := random.RandString()
	vk, err := govk.NewVK(token)
	assert.NoError(t, err)
	vk.Api.WithHTTP(NewTestClient(t, "stats.get", params.Params(), expectedJSON))
	resp, err := vk.Api.Stats.StatsGet(params)
	assert.EqualValues(t, expected, resp)
	assert.NoError(t, err)
}

func fillRandomlyStatsGetPostReachRequest(r *requests.StatsGetPostReachRequest) {
	r.WithOwnerId(random.RandString())
	lPostIds := random.RandIntn(random.MaxArrayLength + 1)
	r.WithPostIds(random.RandIntArr(lPostIds))
}

func TestVKStatsGetPostReachSuccess(t *testing.T) {
	params := requests.NewStatsGetPostReachRequest()
	fillRandomlyStatsGetPostReachRequest(&params)
	var expected models.StatsGetPostReachResponse
	fillRandomlyStatsGetPostReachResponse(&expected)
	expectedJSON, err := json.Marshal(expected)
	require.NoError(t, err)
	token := random.RandString()
	vk, err := govk.NewVK(token)
	assert.NoError(t, err)
	vk.Api.WithHTTP(NewTestClient(t, "stats.getPostReach", params.Params(), expectedJSON))
	resp, err := vk.Api.Stats.StatsGetPostReach(params)
	assert.EqualValues(t, expected, resp)
	assert.NoError(t, err)
}

func TestVKStatsTrackVisitorSuccess(t *testing.T) {
	var expected models.BaseOkResponse
	fillRandomlyBaseOkResponse(&expected)
	expectedJSON, err := json.Marshal(expected)
	require.NoError(t, err)
	token := random.RandString()
	vk, err := govk.NewVK(token)
	assert.NoError(t, err)
	vk.Api.WithHTTP(NewTestClient(t, "stats.trackVisitor", nil, expectedJSON))
	resp, err := vk.Api.Stats.StatsTrackVisitor()
	assert.EqualValues(t, expected, resp)
	assert.NoError(t, err)
}
