// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// NewsfeedGetBanned Returns a list of users and communities banned from the current user's newsfeed.
type NewsfeedGetBannedRequest api.Params

func NewNewsfeedGetBannedRequest() NewsfeedGetBannedRequest {
	params := make(NewsfeedGetBannedRequest, 5)
	return params
}

func (n NewsfeedGetBannedRequest) WithExtended(n_extended bool) NewsfeedGetBannedRequest{
	n["extended"] = n_extended
	return n
}

func (n NewsfeedGetBannedRequest) WithFields(n_fields []models.UsersFields) NewsfeedGetBannedRequest{
	n["fields"] = n_fields
	return n
}

func (n NewsfeedGetBannedRequest) WithNameCase(n_name_case string) NewsfeedGetBannedRequest{
	n["name_case"] = n_name_case
	return n
}

func (n NewsfeedGetBannedRequest) Params() api.Params {
	return api.Params(n)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/newsfeed.getBanned
func (n *Newsfeed) NewsfeedGetBanned(params ...api.MethodParams) (resp models.NewsfeedGetBannedResponse, err error) {
	req := api.NewRequest[models.NewsfeedGetBannedResponse](n.api)

	res, err := req.Execute("newsfeed.getBanned", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// NewsfeedGetBannedExtended Returns a list of users and communities banned from the current user's newsfeed.
// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/newsfeed.getBanned
func (n *Newsfeed) NewsfeedGetBannedExtended(params ...api.MethodParams) (resp models.NewsfeedGetBannedExtendedResponse, err error) {
	req := api.NewRequest[models.NewsfeedGetBannedExtendedResponse](n.api)

	res, err := req.Execute("newsfeed.getBanned", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

