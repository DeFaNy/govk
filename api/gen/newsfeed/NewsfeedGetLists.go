// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// NewsfeedGetLists Returns a list of newsfeeds followed by the current user.
type NewsfeedGetListsRequest api.Params

func NewNewsfeedGetListsRequest() NewsfeedGetListsRequest {
	params := make(NewsfeedGetListsRequest, 4)
	return params
}

func (n NewsfeedGetListsRequest) WithListIds(n_list_ids []int) NewsfeedGetListsRequest{
	n["list_ids"] = n_list_ids
	return n
}

func (n NewsfeedGetListsRequest) WithExtended(n_extended bool) NewsfeedGetListsRequest{
	n["extended"] = n_extended
	return n
}

func (n NewsfeedGetListsRequest) Params() api.Params {
	return api.Params(n)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/newsfeed.getLists
func (n *Newsfeed) NewsfeedGetLists(params ...api.MethodParams) (resp models.NewsfeedGetListsResponse, err error) {
	req := api.NewRequest[models.NewsfeedGetListsResponse](n.api)

	res, err := req.Execute("newsfeed.getLists", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// NewsfeedGetListsExtended Returns a list of newsfeeds followed by the current user.
// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/newsfeed.getLists
func (n *Newsfeed) NewsfeedGetListsExtended(params ...api.MethodParams) (resp models.NewsfeedGetListsExtendedResponse, err error) {
	req := api.NewRequest[models.NewsfeedGetListsExtendedResponse](n.api)

	res, err := req.Execute("newsfeed.getLists", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

