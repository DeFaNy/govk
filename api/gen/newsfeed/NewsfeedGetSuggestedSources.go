// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// NewsfeedGetSuggestedSources Returns communities and users that current user is suggested to follow.
type NewsfeedGetSuggestedSourcesRequest api.Params

func NewNewsfeedGetSuggestedSourcesRequest() NewsfeedGetSuggestedSourcesRequest {
	params := make(NewsfeedGetSuggestedSourcesRequest, 5)
	return params
}

func (n NewsfeedGetSuggestedSourcesRequest) WithOffset(n_offset int) NewsfeedGetSuggestedSourcesRequest{
	n["offset"] = n_offset
	return n
}

func (n NewsfeedGetSuggestedSourcesRequest) WithCount(n_count int) NewsfeedGetSuggestedSourcesRequest{
	n["count"] = n_count
	return n
}

func (n NewsfeedGetSuggestedSourcesRequest) WithShuffle(n_shuffle bool) NewsfeedGetSuggestedSourcesRequest{
	n["shuffle"] = n_shuffle
	return n
}

func (n NewsfeedGetSuggestedSourcesRequest) WithFields(n_fields []models.BaseUserGroupFields) NewsfeedGetSuggestedSourcesRequest{
	n["fields"] = n_fields
	return n
}

func (n NewsfeedGetSuggestedSourcesRequest) Params() api.Params {
	return api.Params(n)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/newsfeed.getSuggestedSources
func (n *Newsfeed) NewsfeedGetSuggestedSources(params ...api.MethodParams) (resp models.NewsfeedGetSuggestedSourcesResponse, err error) {
	req := api.NewRequest[models.NewsfeedGetSuggestedSourcesResponse](n.api)

	res, err := req.Execute("newsfeed.getSuggestedSources", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

