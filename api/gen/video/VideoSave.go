// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// VideoSave Returns a server address (required for upload) and video data.
type VideoSaveRequest api.Params

func NewVideoSaveRequest() VideoSaveRequest {
	params := make(VideoSaveRequest, 13)
	return params
}

func (v VideoSaveRequest) WithName(v_name string) VideoSaveRequest{
	v["name"] = v_name
	return v
}

func (v VideoSaveRequest) WithDescription(v_description string) VideoSaveRequest{
	v["description"] = v_description
	return v
}

func (v VideoSaveRequest) WithIsPrivate(v_is_private bool) VideoSaveRequest{
	v["is_private"] = v_is_private
	return v
}

func (v VideoSaveRequest) WithWallpost(v_wallpost bool) VideoSaveRequest{
	v["wallpost"] = v_wallpost
	return v
}

func (v VideoSaveRequest) WithLink(v_link string) VideoSaveRequest{
	v["link"] = v_link
	return v
}

func (v VideoSaveRequest) WithGroupId(v_group_id int) VideoSaveRequest{
	v["group_id"] = v_group_id
	return v
}

func (v VideoSaveRequest) WithAlbumId(v_album_id int) VideoSaveRequest{
	v["album_id"] = v_album_id
	return v
}

func (v VideoSaveRequest) WithPrivacyView(v_privacy_view []string) VideoSaveRequest{
	v["privacy_view"] = v_privacy_view
	return v
}

func (v VideoSaveRequest) WithPrivacyComment(v_privacy_comment []string) VideoSaveRequest{
	v["privacy_comment"] = v_privacy_comment
	return v
}

func (v VideoSaveRequest) WithNoComments(v_no_comments bool) VideoSaveRequest{
	v["no_comments"] = v_no_comments
	return v
}

func (v VideoSaveRequest) WithRepeat(v_repeat bool) VideoSaveRequest{
	v["repeat"] = v_repeat
	return v
}

func (v VideoSaveRequest) WithCompression(v_compression bool) VideoSaveRequest{
	v["compression"] = v_compression
	return v
}

func (v VideoSaveRequest) Params() api.Params {
	return api.Params(v)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_AccessVideo, Error_WallAddPost, Error_WallAdsPublished, Error_Upload, Error_GroupHostNeed2fa ]
//
// https://dev.vk.com/method/video.save
func (v *Video) VideoSave(params ...api.MethodParams) (resp models.VideoSaveResponse, err error) {
	req := api.NewRequest[models.VideoSaveResponse](v.api)

	res, err := req.Execute("video.save", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

