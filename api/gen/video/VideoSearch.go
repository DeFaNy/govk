// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// VideoSearch Returns a list of videos under the set search criterion.
type VideoSearchRequest api.Params

func NewVideoSearchRequest() VideoSearchRequest {
	params := make(VideoSearchRequest, 14)
	return params
}

func (v VideoSearchRequest) WithQ(v_q string) VideoSearchRequest{
	v["q"] = v_q
	return v
}

func (v VideoSearchRequest) WithSort(v_sort int) VideoSearchRequest{
	v["sort"] = v_sort
	return v
}

func (v VideoSearchRequest) WithHd(v_hd int) VideoSearchRequest{
	v["hd"] = v_hd
	return v
}

func (v VideoSearchRequest) WithAdult(v_adult bool) VideoSearchRequest{
	v["adult"] = v_adult
	return v
}

func (v VideoSearchRequest) WithLive(v_live bool) VideoSearchRequest{
	v["live"] = v_live
	return v
}

func (v VideoSearchRequest) WithFilters(v_filters []string) VideoSearchRequest{
	v["filters"] = v_filters
	return v
}

func (v VideoSearchRequest) WithSearchOwn(v_search_own bool) VideoSearchRequest{
	v["search_own"] = v_search_own
	return v
}

func (v VideoSearchRequest) WithOffset(v_offset int) VideoSearchRequest{
	v["offset"] = v_offset
	return v
}

func (v VideoSearchRequest) WithLonger(v_longer int) VideoSearchRequest{
	v["longer"] = v_longer
	return v
}

func (v VideoSearchRequest) WithShorter(v_shorter int) VideoSearchRequest{
	v["shorter"] = v_shorter
	return v
}

func (v VideoSearchRequest) WithCount(v_count int) VideoSearchRequest{
	v["count"] = v_count
	return v
}

func (v VideoSearchRequest) WithExtended(v_extended bool) VideoSearchRequest{
	v["extended"] = v_extended
	return v
}

func (v VideoSearchRequest) Params() api.Params {
	return api.Params(v)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ActionFailed ]
//
// https://dev.vk.com/method/video.search
func (v *Video) VideoSearch(params ...api.MethodParams) (resp models.VideoSearchResponse, err error) {
	req := api.NewRequest[models.VideoSearchResponse](v.api)

	res, err := req.Execute("video.search", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// VideoSearchExtended Returns a list of videos under the set search criterion.
// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_ActionFailed ]
//
// https://dev.vk.com/method/video.search
func (v *Video) VideoSearchExtended(params ...api.MethodParams) (resp models.VideoSearchExtendedResponse, err error) {
	req := api.NewRequest[models.VideoSearchExtendedResponse](v.api)

	res, err := req.Execute("video.search", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

