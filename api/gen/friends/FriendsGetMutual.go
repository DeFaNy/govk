// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// FriendsGetMutual Returns a list of user IDs of the mutual friends of two users.
type FriendsGetMutualRequest api.Params

func NewFriendsGetMutualRequest() FriendsGetMutualRequest {
	params := make(FriendsGetMutualRequest, 7)
	return params
}

func (f FriendsGetMutualRequest) WithSourceUid(f_source_uid int) FriendsGetMutualRequest{
	f["source_uid"] = f_source_uid
	return f
}

func (f FriendsGetMutualRequest) WithTargetUid(f_target_uid int) FriendsGetMutualRequest{
	f["target_uid"] = f_target_uid
	return f
}

func (f FriendsGetMutualRequest) WithTargetUids(f_target_uids []int) FriendsGetMutualRequest{
	f["target_uids"] = f_target_uids
	return f
}

func (f FriendsGetMutualRequest) WithOrder(f_order string) FriendsGetMutualRequest{
	f["order"] = f_order
	return f
}

func (f FriendsGetMutualRequest) WithCount(f_count int) FriendsGetMutualRequest{
	f["count"] = f_count
	return f
}

func (f FriendsGetMutualRequest) WithOffset(f_offset int) FriendsGetMutualRequest{
	f["offset"] = f_offset
	return f
}

func (f FriendsGetMutualRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/friends.getMutual
func (f *Friends) FriendsGetMutual(params ...api.MethodParams) (resp models.FriendsGetMutualResponse, err error) {
	req := api.NewRequest[models.FriendsGetMutualResponse](f.api)

	res, err := req.Execute("friends.getMutual", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// FriendsGetMutualTargetUIDs Returns a list of user IDs of the mutual friends of two users.
type FriendsGetMutualTargetUIDsRequest api.Params

func NewFriendsGetMutualTargetUIDsRequest() FriendsGetMutualTargetUIDsRequest {
	params := make(FriendsGetMutualTargetUIDsRequest, 7)
	return params
}

func (f FriendsGetMutualTargetUIDsRequest) WithSourceUid(f_source_uid int) FriendsGetMutualTargetUIDsRequest{
	f["source_uid"] = f_source_uid
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) WithTargetUid(f_target_uid int) FriendsGetMutualTargetUIDsRequest{
	f["target_uid"] = f_target_uid
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) WithTargetUids(f_target_uids []int) FriendsGetMutualTargetUIDsRequest{
	f["target_uids"] = f_target_uids
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) WithOrder(f_order string) FriendsGetMutualTargetUIDsRequest{
	f["order"] = f_order
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) WithCount(f_count int) FriendsGetMutualTargetUIDsRequest{
	f["count"] = f_count
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) WithOffset(f_offset int) FriendsGetMutualTargetUIDsRequest{
	f["offset"] = f_offset
	return f
}

func (f FriendsGetMutualTargetUIDsRequest) Params() api.Params {
	return api.Params(f)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/friends.getMutual
func (f *Friends) FriendsGetMutualTargetUIDs(params ...api.MethodParams) (resp models.FriendsGetMutualTargetUidsResponse, err error) {
	req := api.NewRequest[models.FriendsGetMutualTargetUidsResponse](f.api)

	res, err := req.Execute("friends.getMutual", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

