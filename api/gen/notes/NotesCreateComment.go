// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// NotesCreateComment Adds a new comment on a note.
type NotesCreateCommentRequest api.Params

func NewNotesCreateCommentRequest() NotesCreateCommentRequest {
	params := make(NotesCreateCommentRequest, 6)
	return params
}

func (n NotesCreateCommentRequest) WithNoteId(n_note_id int) NotesCreateCommentRequest{
	n["note_id"] = n_note_id
	return n
}

func (n NotesCreateCommentRequest) WithOwnerId(n_owner_id int) NotesCreateCommentRequest{
	n["owner_id"] = n_owner_id
	return n
}

func (n NotesCreateCommentRequest) WithReplyTo(n_reply_to int) NotesCreateCommentRequest{
	n["reply_to"] = n_reply_to
	return n
}

func (n NotesCreateCommentRequest) WithMessage(n_message string) NotesCreateCommentRequest{
	n["message"] = n_message
	return n
}

func (n NotesCreateCommentRequest) WithGuid(n_guid string) NotesCreateCommentRequest{
	n["guid"] = n_guid
	return n
}

func (n NotesCreateCommentRequest) Params() api.Params {
	return api.Params(n)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_AccessNote, Error_AccessNoteComment ]
//
// https://dev.vk.com/method/notes.createComment
func (n *Notes) NotesCreateComment(params ...api.MethodParams) (resp models.NotesCreateCommentResponse, err error) {
	req := api.NewRequest[models.NotesCreateCommentResponse](n.api)

	res, err := req.Execute("notes.createComment", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

