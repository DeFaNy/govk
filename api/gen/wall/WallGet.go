// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// WallGet Returns a list of posts on a user wall or community wall.
type WallGetRequest api.Params

func NewWallGetRequest() WallGetRequest {
	params := make(WallGetRequest, 9)
	return params
}

func (w WallGetRequest) WithOwnerId(w_owner_id int) WallGetRequest{
	w["owner_id"] = w_owner_id
	return w
}

func (w WallGetRequest) WithDomain(w_domain string) WallGetRequest{
	w["domain"] = w_domain
	return w
}

func (w WallGetRequest) WithOffset(w_offset int) WallGetRequest{
	w["offset"] = w_offset
	return w
}

func (w WallGetRequest) WithCount(w_count int) WallGetRequest{
	w["count"] = w_count
	return w
}

func (w WallGetRequest) WithFilter(w_filter models.WallGetFilter) WallGetRequest{
	w["filter"] = w_filter
	return w
}

func (w WallGetRequest) WithExtended(w_extended bool) WallGetRequest{
	w["extended"] = w_extended
	return w
}

func (w WallGetRequest) WithFields(w_fields []models.BaseUserGroupFields) WallGetRequest{
	w["fields"] = w_fields
	return w
}

func (w WallGetRequest) Params() api.Params {
	return api.Params(w)
}

// May execute with listed access token types:
//    [ user, service ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_Blocked ]
//
// https://dev.vk.com/method/wall.get
func (w *Wall) WallGet(params ...api.MethodParams) (resp models.WallGetResponse, err error) {
	req := api.NewRequest[models.WallGetResponse](w.api)

	res, err := req.Execute("wall.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// WallGetExtended Returns a list of posts on a user wall or community wall.
// May execute with listed access token types:
//    [ user, service ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_Blocked ]
//
// https://dev.vk.com/method/wall.get
func (w *Wall) WallGetExtended(params ...api.MethodParams) (resp models.WallGetExtendedResponse, err error) {
	req := api.NewRequest[models.WallGetExtendedResponse](w.api)

	res, err := req.Execute("wall.get", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

