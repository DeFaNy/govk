// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// WallEdit Edits a post on a user wall or community wall.
type WallEditRequest api.Params

func NewWallEditRequest() WallEditRequest {
	params := make(WallEditRequest, 20)
	return params
}

func (w WallEditRequest) WithOwnerId(w_owner_id int) WallEditRequest{
	w["owner_id"] = w_owner_id
	return w
}

func (w WallEditRequest) WithPostId(w_post_id int) WallEditRequest{
	w["post_id"] = w_post_id
	return w
}

func (w WallEditRequest) WithFriendsOnly(w_friends_only bool) WallEditRequest{
	w["friends_only"] = w_friends_only
	return w
}

func (w WallEditRequest) WithMessage(w_message string) WallEditRequest{
	w["message"] = w_message
	return w
}

func (w WallEditRequest) WithAttachments(w_attachments []string) WallEditRequest{
	w["attachments"] = w_attachments
	return w
}

func (w WallEditRequest) WithServices(w_services string) WallEditRequest{
	w["services"] = w_services
	return w
}

func (w WallEditRequest) WithSigned(w_signed bool) WallEditRequest{
	w["signed"] = w_signed
	return w
}

func (w WallEditRequest) WithPublishDate(w_publish_date int) WallEditRequest{
	w["publish_date"] = w_publish_date
	return w
}

func (w WallEditRequest) WithLat(w_lat float64) WallEditRequest{
	w["lat"] = w_lat
	return w
}

func (w WallEditRequest) WithLong(w_long float64) WallEditRequest{
	w["long"] = w_long
	return w
}

func (w WallEditRequest) WithPlaceId(w_place_id int) WallEditRequest{
	w["place_id"] = w_place_id
	return w
}

func (w WallEditRequest) WithMarkAsAds(w_mark_as_ads bool) WallEditRequest{
	w["mark_as_ads"] = w_mark_as_ads
	return w
}

func (w WallEditRequest) WithCloseComments(w_close_comments bool) WallEditRequest{
	w["close_comments"] = w_close_comments
	return w
}

func (w WallEditRequest) WithDonutPaidDuration(w_donut_paid_duration int) WallEditRequest{
	w["donut_paid_duration"] = w_donut_paid_duration
	return w
}

func (w WallEditRequest) WithPosterBkgId(w_poster_bkg_id int) WallEditRequest{
	w["poster_bkg_id"] = w_poster_bkg_id
	return w
}

func (w WallEditRequest) WithPosterBkgOwnerId(w_poster_bkg_owner_id int) WallEditRequest{
	w["poster_bkg_owner_id"] = w_poster_bkg_owner_id
	return w
}

func (w WallEditRequest) WithPosterBkgAccessHash(w_poster_bkg_access_hash string) WallEditRequest{
	w["poster_bkg_access_hash"] = w_poster_bkg_access_hash
	return w
}

func (w WallEditRequest) WithCopyright(w_copyright string) WallEditRequest{
	w["copyright"] = w_copyright
	return w
}

func (w WallEditRequest) WithTopicId(w_topic_id int) WallEditRequest{
	w["topic_id"] = w_topic_id
	return w
}

func (w WallEditRequest) Params() api.Params {
	return api.Params(w)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_WallAdsPostLimitReached, Error_WallDonut ]
//
// https://dev.vk.com/method/wall.edit
func (w *Wall) WallEdit(params ...api.MethodParams) (resp models.WallEditResponse, err error) {
	req := api.NewRequest[models.WallEditResponse](w.api)

	res, err := req.Execute("wall.edit", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

