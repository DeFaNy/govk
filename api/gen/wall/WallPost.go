// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// WallPost Adds a new post on a user wall or community wall. Can also be used to publish suggested or scheduled posts.
type WallPostRequest api.Params

func NewWallPostRequest() WallPostRequest {
	params := make(WallPostRequest, 20)
	return params
}

func (w WallPostRequest) WithOwnerId(w_owner_id int) WallPostRequest{
	w["owner_id"] = w_owner_id
	return w
}

func (w WallPostRequest) WithFriendsOnly(w_friends_only bool) WallPostRequest{
	w["friends_only"] = w_friends_only
	return w
}

func (w WallPostRequest) WithFromGroup(w_from_group bool) WallPostRequest{
	w["from_group"] = w_from_group
	return w
}

func (w WallPostRequest) WithMessage(w_message string) WallPostRequest{
	w["message"] = w_message
	return w
}

func (w WallPostRequest) WithAttachments(w_attachments []string) WallPostRequest{
	w["attachments"] = w_attachments
	return w
}

func (w WallPostRequest) WithServices(w_services string) WallPostRequest{
	w["services"] = w_services
	return w
}

func (w WallPostRequest) WithSigned(w_signed bool) WallPostRequest{
	w["signed"] = w_signed
	return w
}

func (w WallPostRequest) WithPublishDate(w_publish_date int) WallPostRequest{
	w["publish_date"] = w_publish_date
	return w
}

func (w WallPostRequest) WithLat(w_lat float64) WallPostRequest{
	w["lat"] = w_lat
	return w
}

func (w WallPostRequest) WithLong(w_long float64) WallPostRequest{
	w["long"] = w_long
	return w
}

func (w WallPostRequest) WithPlaceId(w_place_id int) WallPostRequest{
	w["place_id"] = w_place_id
	return w
}

func (w WallPostRequest) WithPostId(w_post_id int) WallPostRequest{
	w["post_id"] = w_post_id
	return w
}

func (w WallPostRequest) WithGuid(w_guid string) WallPostRequest{
	w["guid"] = w_guid
	return w
}

func (w WallPostRequest) WithMarkAsAds(w_mark_as_ads bool) WallPostRequest{
	w["mark_as_ads"] = w_mark_as_ads
	return w
}

func (w WallPostRequest) WithCloseComments(w_close_comments bool) WallPostRequest{
	w["close_comments"] = w_close_comments
	return w
}

func (w WallPostRequest) WithDonutPaidDuration(w_donut_paid_duration int) WallPostRequest{
	w["donut_paid_duration"] = w_donut_paid_duration
	return w
}

func (w WallPostRequest) WithMuteNotifications(w_mute_notifications bool) WallPostRequest{
	w["mute_notifications"] = w_mute_notifications
	return w
}

func (w WallPostRequest) WithCopyright(w_copyright string) WallPostRequest{
	w["copyright"] = w_copyright
	return w
}

func (w WallPostRequest) WithTopicId(w_topic_id int) WallPostRequest{
	w["topic_id"] = w_topic_id
	return w
}

func (w WallPostRequest) Params() api.Params {
	return api.Params(w)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_WallAdsPublished, Error_WallAddPost, Error_WallTooManyRecipients, Error_WallLinksForbidden, Error_WallAdsPostLimitReached, Error_WallDonut ]
//
// https://dev.vk.com/method/wall.post
func (w *Wall) WallPost(params ...api.MethodParams) (resp models.WallPostResponse, err error) {
	req := api.NewRequest[models.WallPostResponse](w.api)

	res, err := req.Execute("wall.post", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

