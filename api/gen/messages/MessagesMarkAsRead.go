// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesMarkAsRead Marks messages as read.
type MessagesMarkAsReadRequest api.Params

func NewMessagesMarkAsReadRequest() MessagesMarkAsReadRequest {
	params := make(MessagesMarkAsReadRequest, 6)
	return params
}

func (m MessagesMarkAsReadRequest) WithMessageIds(m_message_ids []int) MessagesMarkAsReadRequest{
	m["message_ids"] = m_message_ids
	return m
}

func (m MessagesMarkAsReadRequest) WithPeerId(m_peer_id int) MessagesMarkAsReadRequest{
	m["peer_id"] = m_peer_id
	return m
}

func (m MessagesMarkAsReadRequest) WithStartMessageId(m_start_message_id int) MessagesMarkAsReadRequest{
	m["start_message_id"] = m_start_message_id
	return m
}

func (m MessagesMarkAsReadRequest) WithGroupId(m_group_id int) MessagesMarkAsReadRequest{
	m["group_id"] = m_group_id
	return m
}

func (m MessagesMarkAsReadRequest) WithMarkConversationAsRead(m_mark_conversation_as_read bool) MessagesMarkAsReadRequest{
	m["mark_conversation_as_read"] = m_mark_conversation_as_read
	return m
}

func (m MessagesMarkAsReadRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/messages.markAsRead
func (m *Messages) MessagesMarkAsRead(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](m.api)

	res, err := req.Execute("messages.markAsRead", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

