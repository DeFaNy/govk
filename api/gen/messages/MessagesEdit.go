// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesEdit Edits the message.
type MessagesEditRequest api.Params

func NewMessagesEditRequest() MessagesEditRequest {
	params := make(MessagesEditRequest, 15)
	return params
}

func (m MessagesEditRequest) WithPeerId(m_peer_id int) MessagesEditRequest{
	m["peer_id"] = m_peer_id
	return m
}

func (m MessagesEditRequest) WithMessage(m_message string) MessagesEditRequest{
	m["message"] = m_message
	return m
}

func (m MessagesEditRequest) WithLat(m_lat float64) MessagesEditRequest{
	m["lat"] = m_lat
	return m
}

func (m MessagesEditRequest) WithLong(m_long float64) MessagesEditRequest{
	m["long"] = m_long
	return m
}

func (m MessagesEditRequest) WithAttachment(m_attachment string) MessagesEditRequest{
	m["attachment"] = m_attachment
	return m
}

func (m MessagesEditRequest) WithKeepForwardMessages(m_keep_forward_messages bool) MessagesEditRequest{
	m["keep_forward_messages"] = m_keep_forward_messages
	return m
}

func (m MessagesEditRequest) WithKeepSnippets(m_keep_snippets bool) MessagesEditRequest{
	m["keep_snippets"] = m_keep_snippets
	return m
}

func (m MessagesEditRequest) WithGroupId(m_group_id int) MessagesEditRequest{
	m["group_id"] = m_group_id
	return m
}

func (m MessagesEditRequest) WithDontParseLinks(m_dont_parse_links bool) MessagesEditRequest{
	m["dont_parse_links"] = m_dont_parse_links
	return m
}

func (m MessagesEditRequest) WithDisableMentions(m_disable_mentions bool) MessagesEditRequest{
	m["disable_mentions"] = m_disable_mentions
	return m
}

func (m MessagesEditRequest) WithMessageId(m_message_id int) MessagesEditRequest{
	m["message_id"] = m_message_id
	return m
}

func (m MessagesEditRequest) WithConversationMessageId(m_conversation_message_id int) MessagesEditRequest{
	m["conversation_message_id"] = m_conversation_message_id
	return m
}

func (m MessagesEditRequest) WithTemplate(m_template string) MessagesEditRequest{
	m["template"] = m_template
	return m
}

func (m MessagesEditRequest) WithKeyboard(m_keyboard string) MessagesEditRequest{
	m["keyboard"] = m_keyboard
	return m
}

func (m MessagesEditRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_MessagesDenySend, Error_MessagesEditExpired, Error_MessagesTooBig, Error_MessagesEditKindDisallowed, Error_MessagesTooLongMessage, Error_MessagesChatUserNoAccess, Error_MessagesKeyboardInvalid, Error_MessagesTooManyPosts, Error_MessagesChatUnsupported, Error_MessagesChatBotFeature, Error_MessagesCantEditPinnedYet ]
//
// https://dev.vk.com/method/messages.edit
func (m *Messages) MessagesEdit(params ...api.MethodParams) (resp models.MessagesEditResponse, err error) {
	req := api.NewRequest[models.MessagesEditResponse](m.api)

	res, err := req.Execute("messages.edit", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

