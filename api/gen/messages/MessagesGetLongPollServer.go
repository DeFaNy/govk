// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesGetLongPollServer Returns data required for connection to a Long Poll server.
type MessagesGetLongPollServerRequest api.Params

func NewMessagesGetLongPollServerRequest() MessagesGetLongPollServerRequest {
	params := make(MessagesGetLongPollServerRequest, 4)
	return params
}

func (m MessagesGetLongPollServerRequest) WithNeedPts(m_need_pts bool) MessagesGetLongPollServerRequest{
	m["need_pts"] = m_need_pts
	return m
}

func (m MessagesGetLongPollServerRequest) WithGroupId(m_group_id int) MessagesGetLongPollServerRequest{
	m["group_id"] = m_group_id
	return m
}

func (m MessagesGetLongPollServerRequest) WithLpVersion(m_lp_version int) MessagesGetLongPollServerRequest{
	m["lp_version"] = m_lp_version
	return m
}

func (m MessagesGetLongPollServerRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/messages.getLongPollServer
func (m *Messages) MessagesGetLongPollServer(params ...api.MethodParams) (resp models.MessagesGetLongPollServerResponse, err error) {
	req := api.NewRequest[models.MessagesGetLongPollServerResponse](m.api)

	res, err := req.Execute("messages.getLongPollServer", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

