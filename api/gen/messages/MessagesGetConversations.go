// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesGetConversations Returns a list of the current user's conversations.
type MessagesGetConversationsRequest api.Params

func NewMessagesGetConversationsRequest() MessagesGetConversationsRequest {
	params := make(MessagesGetConversationsRequest, 8)
	return params
}

func (m MessagesGetConversationsRequest) WithOffset(m_offset int) MessagesGetConversationsRequest{
	m["offset"] = m_offset
	return m
}

func (m MessagesGetConversationsRequest) WithCount(m_count int) MessagesGetConversationsRequest{
	m["count"] = m_count
	return m
}

func (m MessagesGetConversationsRequest) WithFilter(m_filter string) MessagesGetConversationsRequest{
	m["filter"] = m_filter
	return m
}

func (m MessagesGetConversationsRequest) WithExtended(m_extended bool) MessagesGetConversationsRequest{
	m["extended"] = m_extended
	return m
}

func (m MessagesGetConversationsRequest) WithStartMessageId(m_start_message_id int) MessagesGetConversationsRequest{
	m["start_message_id"] = m_start_message_id
	return m
}

func (m MessagesGetConversationsRequest) WithFields(m_fields []models.BaseUserGroupFields) MessagesGetConversationsRequest{
	m["fields"] = m_fields
	return m
}

func (m MessagesGetConversationsRequest) WithGroupId(m_group_id int) MessagesGetConversationsRequest{
	m["group_id"] = m_group_id
	return m
}

func (m MessagesGetConversationsRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_MessagesChatNotExist, Error_MessagesContactNotFound, Error_MessagesChatUserNoAccess ]
//
// https://dev.vk.com/method/messages.getConversations
func (m *Messages) MessagesGetConversations(params ...api.MethodParams) (resp models.MessagesGetConversationsResponse, err error) {
	req := api.NewRequest[models.MessagesGetConversationsResponse](m.api)

	res, err := req.Execute("messages.getConversations", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

