// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesMarkAsImportant Marks and unmarks messages as important (starred).
type MessagesMarkAsImportantRequest api.Params

func NewMessagesMarkAsImportantRequest() MessagesMarkAsImportantRequest {
	params := make(MessagesMarkAsImportantRequest, 3)
	return params
}

func (m MessagesMarkAsImportantRequest) WithMessageIds(m_message_ids []int) MessagesMarkAsImportantRequest{
	m["message_ids"] = m_message_ids
	return m
}

func (m MessagesMarkAsImportantRequest) WithImportant(m_important int) MessagesMarkAsImportantRequest{
	m["important"] = m_important
	return m
}

func (m MessagesMarkAsImportantRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/messages.markAsImportant
func (m *Messages) MessagesMarkAsImportant(params ...api.MethodParams) (resp models.MessagesMarkAsImportantResponse, err error) {
	req := api.NewRequest[models.MessagesMarkAsImportantResponse](m.api)

	res, err := req.Execute("messages.markAsImportant", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

