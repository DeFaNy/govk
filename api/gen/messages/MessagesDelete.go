// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MessagesDelete Deletes one or more messages.
type MessagesDeleteRequest api.Params

func NewMessagesDeleteRequest() MessagesDeleteRequest {
	params := make(MessagesDeleteRequest, 7)
	return params
}

func (m MessagesDeleteRequest) WithMessageIds(m_message_ids []int) MessagesDeleteRequest{
	m["message_ids"] = m_message_ids
	return m
}

func (m MessagesDeleteRequest) WithSpam(m_spam bool) MessagesDeleteRequest{
	m["spam"] = m_spam
	return m
}

func (m MessagesDeleteRequest) WithGroupId(m_group_id int) MessagesDeleteRequest{
	m["group_id"] = m_group_id
	return m
}

func (m MessagesDeleteRequest) WithDeleteForAll(m_delete_for_all bool) MessagesDeleteRequest{
	m["delete_for_all"] = m_delete_for_all
	return m
}

func (m MessagesDeleteRequest) WithPeerId(m_peer_id int) MessagesDeleteRequest{
	m["peer_id"] = m_peer_id
	return m
}

func (m MessagesDeleteRequest) WithCmids(m_cmids []int) MessagesDeleteRequest{
	m["cmids"] = m_cmids
	return m
}

func (m MessagesDeleteRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_MessagesCantDeleteForAll ]
//
// https://dev.vk.com/method/messages.delete
func (m *Messages) MessagesDelete(params ...api.MethodParams) (resp models.MessagesDeleteResponse, err error) {
	req := api.NewRequest[models.MessagesDeleteResponse](m.api)

	res, err := req.Execute("messages.delete", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

