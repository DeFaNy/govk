// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// GroupsEditManager Allows to add, remove or edit the community manager.
type GroupsEditManagerRequest api.Params

func NewGroupsEditManagerRequest() GroupsEditManagerRequest {
	params := make(GroupsEditManagerRequest, 8)
	return params
}

func (g GroupsEditManagerRequest) WithGroupId(g_group_id int) GroupsEditManagerRequest{
	g["group_id"] = g_group_id
	return g
}

func (g GroupsEditManagerRequest) WithUserId(g_user_id int) GroupsEditManagerRequest{
	g["user_id"] = g_user_id
	return g
}

func (g GroupsEditManagerRequest) WithRole(g_role models.GroupsGroupRole) GroupsEditManagerRequest{
	g["role"] = g_role
	return g
}

func (g GroupsEditManagerRequest) WithIsContact(g_is_contact bool) GroupsEditManagerRequest{
	g["is_contact"] = g_is_contact
	return g
}

func (g GroupsEditManagerRequest) WithContactPosition(g_contact_position string) GroupsEditManagerRequest{
	g["contact_position"] = g_contact_position
	return g
}

func (g GroupsEditManagerRequest) WithContactPhone(g_contact_phone string) GroupsEditManagerRequest{
	g["contact_phone"] = g_contact_phone
	return g
}

func (g GroupsEditManagerRequest) WithContactEmail(g_contact_email string) GroupsEditManagerRequest{
	g["contact_email"] = g_contact_email
	return g
}

func (g GroupsEditManagerRequest) Params() api.Params {
	return api.Params(g)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_GroupChangeCreator, Error_GroupNotInClub, Error_GroupTooManyOfficers, Error_GroupNeed2fa, Error_GroupHostNeed2fa ]
//
// https://dev.vk.com/method/groups.editManager
func (g *Groups) GroupsEditManager(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](g.api)

	res, err := req.Execute("groups.editManager", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

