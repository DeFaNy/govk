// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// GroupsCreate Creates a new community.
type GroupsCreateRequest api.Params

func NewGroupsCreateRequest() GroupsCreateRequest {
	params := make(GroupsCreateRequest, 7)
	return params
}

func (g GroupsCreateRequest) WithTitle(g_title string) GroupsCreateRequest{
	g["title"] = g_title
	return g
}

func (g GroupsCreateRequest) WithDescription(g_description string) GroupsCreateRequest{
	g["description"] = g_description
	return g
}

func (g GroupsCreateRequest) WithType(g_type string) GroupsCreateRequest{
	g["type"] = g_type
	return g
}

func (g GroupsCreateRequest) WithPublicCategory(g_public_category int) GroupsCreateRequest{
	g["public_category"] = g_public_category
	return g
}

func (g GroupsCreateRequest) WithPublicSubcategory(g_public_subcategory int) GroupsCreateRequest{
	g["public_subcategory"] = g_public_subcategory
	return g
}

func (g GroupsCreateRequest) WithSubtype(g_subtype int) GroupsCreateRequest{
	g["subtype"] = g_subtype
	return g
}

func (g GroupsCreateRequest) Params() api.Params {
	return api.Params(g)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_Limits ]
//
// https://dev.vk.com/method/groups.create
func (g *Groups) GroupsCreate(params ...api.MethodParams) (resp models.GroupsCreateResponse, err error) {
	req := api.NewRequest[models.GroupsCreateResponse](g.api)

	res, err := req.Execute("groups.create", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

