// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// GroupsAddCallbackServer ...
type GroupsAddCallbackServerRequest api.Params

func NewGroupsAddCallbackServerRequest() GroupsAddCallbackServerRequest {
	params := make(GroupsAddCallbackServerRequest, 5)
	return params
}

func (g GroupsAddCallbackServerRequest) WithGroupId(g_group_id int) GroupsAddCallbackServerRequest{
	g["group_id"] = g_group_id
	return g
}

func (g GroupsAddCallbackServerRequest) WithUrl(g_url string) GroupsAddCallbackServerRequest{
	g["url"] = g_url
	return g
}

func (g GroupsAddCallbackServerRequest) WithTitle(g_title string) GroupsAddCallbackServerRequest{
	g["title"] = g_title
	return g
}

func (g GroupsAddCallbackServerRequest) WithSecretKey(g_secret_key string) GroupsAddCallbackServerRequest{
	g["secret_key"] = g_secret_key
	return g
}

func (g GroupsAddCallbackServerRequest) Params() api.Params {
	return api.Params(g)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_CallbackApiServersLimit ]
//
// https://dev.vk.com/method/groups.addCallbackServer
func (g *Groups) GroupsAddCallbackServer(params ...api.MethodParams) (resp models.GroupsAddCallbackServerResponse, err error) {
	req := api.NewRequest[models.GroupsAddCallbackServerResponse](g.api)

	res, err := req.Execute("groups.addCallbackServer", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

