// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// GroupsSetLongPollSettings Sets Long Poll notification settings
type GroupsSetLongPollSettingsRequest api.Params

func NewGroupsSetLongPollSettingsRequest() GroupsSetLongPollSettingsRequest {
	params := make(GroupsSetLongPollSettingsRequest, 53)
	return params
}

func (g GroupsSetLongPollSettingsRequest) WithGroupId(g_group_id int) GroupsSetLongPollSettingsRequest{
	g["group_id"] = g_group_id
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithEnabled(g_enabled bool) GroupsSetLongPollSettingsRequest{
	g["enabled"] = g_enabled
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithApiVersion(g_api_version string) GroupsSetLongPollSettingsRequest{
	g["api_version"] = g_api_version
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageNew(g_message_new bool) GroupsSetLongPollSettingsRequest{
	g["message_new"] = g_message_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageReply(g_message_reply bool) GroupsSetLongPollSettingsRequest{
	g["message_reply"] = g_message_reply
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageAllow(g_message_allow bool) GroupsSetLongPollSettingsRequest{
	g["message_allow"] = g_message_allow
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageDeny(g_message_deny bool) GroupsSetLongPollSettingsRequest{
	g["message_deny"] = g_message_deny
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageEdit(g_message_edit bool) GroupsSetLongPollSettingsRequest{
	g["message_edit"] = g_message_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageTypingState(g_message_typing_state bool) GroupsSetLongPollSettingsRequest{
	g["message_typing_state"] = g_message_typing_state
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPhotoNew(g_photo_new bool) GroupsSetLongPollSettingsRequest{
	g["photo_new"] = g_photo_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithAudioNew(g_audio_new bool) GroupsSetLongPollSettingsRequest{
	g["audio_new"] = g_audio_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithVideoNew(g_video_new bool) GroupsSetLongPollSettingsRequest{
	g["video_new"] = g_video_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallReplyNew(g_wall_reply_new bool) GroupsSetLongPollSettingsRequest{
	g["wall_reply_new"] = g_wall_reply_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallReplyEdit(g_wall_reply_edit bool) GroupsSetLongPollSettingsRequest{
	g["wall_reply_edit"] = g_wall_reply_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallReplyDelete(g_wall_reply_delete bool) GroupsSetLongPollSettingsRequest{
	g["wall_reply_delete"] = g_wall_reply_delete
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallReplyRestore(g_wall_reply_restore bool) GroupsSetLongPollSettingsRequest{
	g["wall_reply_restore"] = g_wall_reply_restore
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallPostNew(g_wall_post_new bool) GroupsSetLongPollSettingsRequest{
	g["wall_post_new"] = g_wall_post_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithWallRepost(g_wall_repost bool) GroupsSetLongPollSettingsRequest{
	g["wall_repost"] = g_wall_repost
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithBoardPostNew(g_board_post_new bool) GroupsSetLongPollSettingsRequest{
	g["board_post_new"] = g_board_post_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithBoardPostEdit(g_board_post_edit bool) GroupsSetLongPollSettingsRequest{
	g["board_post_edit"] = g_board_post_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithBoardPostRestore(g_board_post_restore bool) GroupsSetLongPollSettingsRequest{
	g["board_post_restore"] = g_board_post_restore
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithBoardPostDelete(g_board_post_delete bool) GroupsSetLongPollSettingsRequest{
	g["board_post_delete"] = g_board_post_delete
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPhotoCommentNew(g_photo_comment_new bool) GroupsSetLongPollSettingsRequest{
	g["photo_comment_new"] = g_photo_comment_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPhotoCommentEdit(g_photo_comment_edit bool) GroupsSetLongPollSettingsRequest{
	g["photo_comment_edit"] = g_photo_comment_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPhotoCommentDelete(g_photo_comment_delete bool) GroupsSetLongPollSettingsRequest{
	g["photo_comment_delete"] = g_photo_comment_delete
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPhotoCommentRestore(g_photo_comment_restore bool) GroupsSetLongPollSettingsRequest{
	g["photo_comment_restore"] = g_photo_comment_restore
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithVideoCommentNew(g_video_comment_new bool) GroupsSetLongPollSettingsRequest{
	g["video_comment_new"] = g_video_comment_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithVideoCommentEdit(g_video_comment_edit bool) GroupsSetLongPollSettingsRequest{
	g["video_comment_edit"] = g_video_comment_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithVideoCommentDelete(g_video_comment_delete bool) GroupsSetLongPollSettingsRequest{
	g["video_comment_delete"] = g_video_comment_delete
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithVideoCommentRestore(g_video_comment_restore bool) GroupsSetLongPollSettingsRequest{
	g["video_comment_restore"] = g_video_comment_restore
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMarketCommentNew(g_market_comment_new bool) GroupsSetLongPollSettingsRequest{
	g["market_comment_new"] = g_market_comment_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMarketCommentEdit(g_market_comment_edit bool) GroupsSetLongPollSettingsRequest{
	g["market_comment_edit"] = g_market_comment_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMarketCommentDelete(g_market_comment_delete bool) GroupsSetLongPollSettingsRequest{
	g["market_comment_delete"] = g_market_comment_delete
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMarketCommentRestore(g_market_comment_restore bool) GroupsSetLongPollSettingsRequest{
	g["market_comment_restore"] = g_market_comment_restore
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithPollVoteNew(g_poll_vote_new bool) GroupsSetLongPollSettingsRequest{
	g["poll_vote_new"] = g_poll_vote_new
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithGroupJoin(g_group_join bool) GroupsSetLongPollSettingsRequest{
	g["group_join"] = g_group_join
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithGroupLeave(g_group_leave bool) GroupsSetLongPollSettingsRequest{
	g["group_leave"] = g_group_leave
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithGroupChangeSettings(g_group_change_settings bool) GroupsSetLongPollSettingsRequest{
	g["group_change_settings"] = g_group_change_settings
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithGroupChangePhoto(g_group_change_photo bool) GroupsSetLongPollSettingsRequest{
	g["group_change_photo"] = g_group_change_photo
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithGroupOfficersEdit(g_group_officers_edit bool) GroupsSetLongPollSettingsRequest{
	g["group_officers_edit"] = g_group_officers_edit
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithUserBlock(g_user_block bool) GroupsSetLongPollSettingsRequest{
	g["user_block"] = g_user_block
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithUserUnblock(g_user_unblock bool) GroupsSetLongPollSettingsRequest{
	g["user_unblock"] = g_user_unblock
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithLikeAdd(g_like_add bool) GroupsSetLongPollSettingsRequest{
	g["like_add"] = g_like_add
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithLikeRemove(g_like_remove bool) GroupsSetLongPollSettingsRequest{
	g["like_remove"] = g_like_remove
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithMessageEvent(g_message_event bool) GroupsSetLongPollSettingsRequest{
	g["message_event"] = g_message_event
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutSubscriptionCreate(g_donut_subscription_create bool) GroupsSetLongPollSettingsRequest{
	g["donut_subscription_create"] = g_donut_subscription_create
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutSubscriptionProlonged(g_donut_subscription_prolonged bool) GroupsSetLongPollSettingsRequest{
	g["donut_subscription_prolonged"] = g_donut_subscription_prolonged
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutSubscriptionCancelled(g_donut_subscription_cancelled bool) GroupsSetLongPollSettingsRequest{
	g["donut_subscription_cancelled"] = g_donut_subscription_cancelled
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutSubscriptionPriceChanged(g_donut_subscription_price_changed bool) GroupsSetLongPollSettingsRequest{
	g["donut_subscription_price_changed"] = g_donut_subscription_price_changed
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutSubscriptionExpired(g_donut_subscription_expired bool) GroupsSetLongPollSettingsRequest{
	g["donut_subscription_expired"] = g_donut_subscription_expired
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutMoneyWithdraw(g_donut_money_withdraw bool) GroupsSetLongPollSettingsRequest{
	g["donut_money_withdraw"] = g_donut_money_withdraw
	return g
}

func (g GroupsSetLongPollSettingsRequest) WithDonutMoneyWithdrawError(g_donut_money_withdraw_error bool) GroupsSetLongPollSettingsRequest{
	g["donut_money_withdraw_error"] = g_donut_money_withdraw_error
	return g
}

func (g GroupsSetLongPollSettingsRequest) Params() api.Params {
	return api.Params(g)
}

// May execute with listed access token types:
//    [ user, group ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/groups.setLongPollSettings
func (g *Groups) GroupsSetLongPollSettings(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](g.api)

	res, err := req.Execute("groups.setLongPollSettings", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

