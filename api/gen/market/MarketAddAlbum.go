// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MarketAddAlbum Creates new collection of items
type MarketAddAlbumRequest api.Params

func NewMarketAddAlbumRequest() MarketAddAlbumRequest {
	params := make(MarketAddAlbumRequest, 6)
	return params
}

func (m MarketAddAlbumRequest) WithOwnerId(m_owner_id int) MarketAddAlbumRequest{
	m["owner_id"] = m_owner_id
	return m
}

func (m MarketAddAlbumRequest) WithTitle(m_title string) MarketAddAlbumRequest{
	m["title"] = m_title
	return m
}

func (m MarketAddAlbumRequest) WithPhotoId(m_photo_id int) MarketAddAlbumRequest{
	m["photo_id"] = m_photo_id
	return m
}

func (m MarketAddAlbumRequest) WithMainAlbum(m_main_album bool) MarketAddAlbumRequest{
	m["main_album"] = m_main_album
	return m
}

func (m MarketAddAlbumRequest) WithIsHidden(m_is_hidden bool) MarketAddAlbumRequest{
	m["is_hidden"] = m_is_hidden
	return m
}

func (m MarketAddAlbumRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_MarketTooManyAlbums, Error_MarketNotEnabled, Error_MarketAlbumMainHidden ]
//
// https://dev.vk.com/method/market.addAlbum
func (m *Market) MarketAddAlbum(params ...api.MethodParams) (resp models.MarketAddAlbumResponse, err error) {
	req := api.NewRequest[models.MarketAddAlbumResponse](m.api)

	res, err := req.Execute("market.addAlbum", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

