// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MarketCreateComment Creates a new comment for an item.
type MarketCreateCommentRequest api.Params

func NewMarketCreateCommentRequest() MarketCreateCommentRequest {
	params := make(MarketCreateCommentRequest, 9)
	return params
}

func (m MarketCreateCommentRequest) WithOwnerId(m_owner_id int) MarketCreateCommentRequest{
	m["owner_id"] = m_owner_id
	return m
}

func (m MarketCreateCommentRequest) WithItemId(m_item_id int) MarketCreateCommentRequest{
	m["item_id"] = m_item_id
	return m
}

func (m MarketCreateCommentRequest) WithMessage(m_message string) MarketCreateCommentRequest{
	m["message"] = m_message
	return m
}

func (m MarketCreateCommentRequest) WithAttachments(m_attachments []string) MarketCreateCommentRequest{
	m["attachments"] = m_attachments
	return m
}

func (m MarketCreateCommentRequest) WithFromGroup(m_from_group bool) MarketCreateCommentRequest{
	m["from_group"] = m_from_group
	return m
}

func (m MarketCreateCommentRequest) WithReplyToComment(m_reply_to_comment int) MarketCreateCommentRequest{
	m["reply_to_comment"] = m_reply_to_comment
	return m
}

func (m MarketCreateCommentRequest) WithStickerId(m_sticker_id int) MarketCreateCommentRequest{
	m["sticker_id"] = m_sticker_id
	return m
}

func (m MarketCreateCommentRequest) WithGuid(m_guid string) MarketCreateCommentRequest{
	m["guid"] = m_guid
	return m
}

func (m MarketCreateCommentRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/market.createComment
func (m *Market) MarketCreateComment(params ...api.MethodParams) (resp models.MarketCreateCommentResponse, err error) {
	req := api.NewRequest[models.MarketCreateCommentResponse](m.api)

	res, err := req.Execute("market.createComment", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

