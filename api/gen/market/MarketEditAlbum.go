// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MarketEditAlbum Edits a collection of items
type MarketEditAlbumRequest api.Params

func NewMarketEditAlbumRequest() MarketEditAlbumRequest {
	params := make(MarketEditAlbumRequest, 7)
	return params
}

func (m MarketEditAlbumRequest) WithOwnerId(m_owner_id int) MarketEditAlbumRequest{
	m["owner_id"] = m_owner_id
	return m
}

func (m MarketEditAlbumRequest) WithAlbumId(m_album_id int) MarketEditAlbumRequest{
	m["album_id"] = m_album_id
	return m
}

func (m MarketEditAlbumRequest) WithTitle(m_title string) MarketEditAlbumRequest{
	m["title"] = m_title
	return m
}

func (m MarketEditAlbumRequest) WithPhotoId(m_photo_id int) MarketEditAlbumRequest{
	m["photo_id"] = m_photo_id
	return m
}

func (m MarketEditAlbumRequest) WithMainAlbum(m_main_album bool) MarketEditAlbumRequest{
	m["main_album"] = m_main_album
	return m
}

func (m MarketEditAlbumRequest) WithIsHidden(m_is_hidden bool) MarketEditAlbumRequest{
	m["is_hidden"] = m_is_hidden
	return m
}

func (m MarketEditAlbumRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global or with listed codes API errors:
//    [ Error_MarketAlbumNotFound, Error_MarketNotEnabled, Error_MarketAlbumMainHidden ]
//
// https://dev.vk.com/method/market.editAlbum
func (m *Market) MarketEditAlbum(params ...api.MethodParams) (resp models.BaseOkResponse, err error) {
	req := api.NewRequest[models.BaseOkResponse](m.api)

	res, err := req.Execute("market.editAlbum", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

