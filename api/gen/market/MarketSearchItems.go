// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// MarketSearchItems ...
type MarketSearchItemsRequest api.Params

func NewMarketSearchItemsRequest() MarketSearchItemsRequest {
	params := make(MarketSearchItemsRequest, 11)
	return params
}

func (m MarketSearchItemsRequest) WithQ(m_q string) MarketSearchItemsRequest{
	m["q"] = m_q
	return m
}

func (m MarketSearchItemsRequest) WithOffset(m_offset int) MarketSearchItemsRequest{
	m["offset"] = m_offset
	return m
}

func (m MarketSearchItemsRequest) WithCount(m_count int) MarketSearchItemsRequest{
	m["count"] = m_count
	return m
}

func (m MarketSearchItemsRequest) WithCategoryId(m_category_id int) MarketSearchItemsRequest{
	m["category_id"] = m_category_id
	return m
}

func (m MarketSearchItemsRequest) WithPriceFrom(m_price_from int) MarketSearchItemsRequest{
	m["price_from"] = m_price_from
	return m
}

func (m MarketSearchItemsRequest) WithPriceTo(m_price_to int) MarketSearchItemsRequest{
	m["price_to"] = m_price_to
	return m
}

func (m MarketSearchItemsRequest) WithSortBy(m_sort_by int) MarketSearchItemsRequest{
	m["sort_by"] = m_sort_by
	return m
}

func (m MarketSearchItemsRequest) WithSortDirection(m_sort_direction int) MarketSearchItemsRequest{
	m["sort_direction"] = m_sort_direction
	return m
}

func (m MarketSearchItemsRequest) WithCountry(m_country int) MarketSearchItemsRequest{
	m["country"] = m_country
	return m
}

func (m MarketSearchItemsRequest) WithCity(m_city int) MarketSearchItemsRequest{
	m["city"] = m_city
	return m
}

func (m MarketSearchItemsRequest) Params() api.Params {
	return api.Params(m)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/market.searchItems
func (m *Market) MarketSearchItems(params ...api.MethodParams) (resp models.MarketSearchResponse, err error) {
	req := api.NewRequest[models.MarketSearchResponse](m.api)

	res, err := req.Execute("market.searchItems", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

