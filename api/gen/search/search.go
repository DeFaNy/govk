// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

type Search struct {
	api *api.API
}

func NewSearch(api *api.API) *Search {
	return &Search{
		api: api,
	}
}

// SearchGetHints Allows the programmer to do a quick search for any substring.
type SearchGetHintsRequest api.Params

func NewSearchGetHintsRequest() SearchGetHintsRequest {
	params := make(SearchGetHintsRequest, 7)
	return params
}

func (s SearchGetHintsRequest) WithQ(s_q string) SearchGetHintsRequest {
	s["q"] = s_q
	return s
}

func (s SearchGetHintsRequest) WithOffset(s_offset int) SearchGetHintsRequest {
	s["offset"] = s_offset
	return s
}

func (s SearchGetHintsRequest) WithLimit(s_limit int) SearchGetHintsRequest {
	s["limit"] = s_limit
	return s
}

func (s SearchGetHintsRequest) WithFilters(s_filters []string) SearchGetHintsRequest {
	s["filters"] = s_filters
	return s
}

func (s SearchGetHintsRequest) WithFields(s_fields []string) SearchGetHintsRequest {
	s["fields"] = s_fields
	return s
}

func (s SearchGetHintsRequest) WithSearchGlobal(s_search_global bool) SearchGetHintsRequest {
	s["search_global"] = s_search_global
	return s
}

func (s SearchGetHintsRequest) Params() api.Params {
	return api.Params(s)
}

// May execute with listed access token types:
//
//	[ user ]
//
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/search.getHints
func (s *Search) SearchGetHints(params ...api.MethodParams) (resp models.SearchGetHintsResponse, err error) {
	req := api.NewRequest[models.SearchGetHintsResponse](s.api)

	res, err := req.Execute("search.getHints", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}
