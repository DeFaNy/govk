// Code generated by https://github.com/defany/govk. DO NOT EDIT.

package requests

import (
	"github.com/defany/govk/api"
	"github.com/defany/govk/api/gen/models"
)

// StoriesGetBanned Returns list of sources hidden from current user's feed.
type StoriesGetBannedRequest api.Params

func NewStoriesGetBannedRequest() StoriesGetBannedRequest {
	params := make(StoriesGetBannedRequest, 4)
	return params
}

func (s StoriesGetBannedRequest) WithExtended(s_extended bool) StoriesGetBannedRequest{
	s["extended"] = s_extended
	return s
}

func (s StoriesGetBannedRequest) WithFields(s_fields []models.BaseUserGroupFields) StoriesGetBannedRequest{
	s["fields"] = s_fields
	return s
}

func (s StoriesGetBannedRequest) Params() api.Params {
	return api.Params(s)
}

// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/stories.getBanned
func (s *Stories) StoriesGetBanned(params ...api.MethodParams) (resp models.StoriesGetBannedResponse, err error) {
	req := api.NewRequest[models.StoriesGetBannedResponse](s.api)

	res, err := req.Execute("stories.getBanned", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

// StoriesGetBannedExtended Returns list of sources hidden from current user's feed.
// May execute with listed access token types:
//    [ user ]
// When executing method, may return one of global API errors.
//
// https://dev.vk.com/method/stories.getBanned
func (s *Stories) StoriesGetBannedExtended(params ...api.MethodParams) (resp models.StoriesGetBannedExtendedResponse, err error) {
	req := api.NewRequest[models.StoriesGetBannedExtendedResponse](s.api)

	res, err := req.Execute("stories.getBanned", api.ParamsOrNil(params))
	if err != nil {
		return res, err
	}

	return res, nil
}

